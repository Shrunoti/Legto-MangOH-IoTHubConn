/** @page toolsHost_update-util update-util
<!--LEGATO_AUTO_DOX-->

<h1>NAME</h1>
@b     update-util - a tool to inspect. modify and unpack update packs

<h1>SYNOPSIS</h1>
<code>     update-util [file] [file file] [-t] [-l [name]...] [-x [name]...] [-s] [-p output_dir] </code></br>

<h1>DESCRIPTION</h1>
@verbatim 
update-util -h|--help
     Print this message.

update-util [updateFile]
     List the headers found in the updateFile to stdout.

update-util [oldSystemUpdateFile] [newSystemUpdateFile] [outputFile]
     Create a delta system update file with the name given for outputFile
     using oldSystemUpdateFile as the initial update calculating the changes
     necessary to get from the initial system to that in newSystemUpdateFile
     omitting unchanged apps.

update-util [updateFile] -t|--terse
     List just the names of the sections found in the update file

update-util [updateFile] -l|--list [[name] ... ]
     List the files contained in each section. If a name or list of names are given,
     only those sections will have their contents listed.

update-util [updateFile] -x|--extract [[name] ... ] [-s|--staging] [-p|--output-path output_dir]
    Unpack any of the named sections in the list of names. Sections will be unpacked
    into directories that are named as per the name found in the header. If no names
    are given then the entire update will be unpacked.

    if the option -p is given then the unpack will be done into output_dir, which will be
    created if it does not exist.

    option -s will cause the sections to be unpacked with paths and names as they are in
    the staging directory after being built and before being packed. The system, if present,
    will be unpacked into a directory named 'system' and the apps will be unpacked into an
    'apps' directory with each app in a directory named for its md5 sum.

    'system' is a pseudo name - no header contains the name system but it can be used to refer
    to the system section. Try not to create any apps named 'system' as this will confuse
    update-util.

examples:

    unpack-util update_file -x tools
    - Unpack the tools app from update_file into a directory named tools

    unpack-util update_file -x -s tools
    - Unpack the tools app to apps/xxx where xxx is the md5 sum of the tools app

    unpack-util update_file -x -s -p my_staging
    - Unpack all the sections of the update file with their staging paths into
      a directory named my_staging

@endverbatim
<hr>
Copyright (C) Sierra Wireless Inc. 
**/
