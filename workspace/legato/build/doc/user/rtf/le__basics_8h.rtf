{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
le_basics.h File Reference\par \pard\plain 
{\tc\tcl2 \v le_basics.h}
{\xe \v le_basics.h}
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CONTAINER_OF}(memberPtr,  type,  member)\~ ((type*)(((uint8_t*)(memberPtr))-((size_t)(&(((type*)0)->member)))))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NUM_ARRAY_MEMBERS}(array)\~ (sizeof(array) / sizeof((array)[0]))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INDEX_OF_ARRAY_MEMBER}(array,  memberPtr)\~ ((((size_t)memberPtr) - ((size_t)array)) / sizeof(*(memberPtr)))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIZE}(x)\~ {\b STRINGIZE_EXPAND}(x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIZE_EXPAND}(x)\~ #x\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_SHARED}\~ __attribute__((visibility ("default")))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __is_identifier}(x)\~ 1{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b __has_warning}(x)\~ 0{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LE_NONNULL}{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LE_NULLABLE}{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\par
}
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Bit Masks\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Single byte bit definitions that can be used for bit masking. \par
}}\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

{
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

#define {\b BIT0}\~ 0x01{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

#define {\b BIT1}\~ 0x02{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

#define {\b BIT2}\~ 0x04{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

#define {\b BIT3}\~ 0x08{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

#define {\b BIT4}\~ 0x10{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

#define {\b BIT5}\~ 0x20{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

#define {\b BIT6}\~ 0x40{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 

#define {\b BIT7}\~ 0x80{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b le_result_t} \{ {\b LE_OK} = 0, 
{\b LE_NOT_FOUND} = -1, 
{\b LE_NOT_POSSIBLE} = -2, 
{\b LE_OUT_OF_RANGE} = -3, 
{\b LE_NO_MEMORY} = -4, 
{\b LE_NOT_PERMITTED} = -5, 
{\b LE_FAULT} = -6, 
{\b LE_COMM_ERROR} = -7, 
{\b LE_TIMEOUT} = -8, 
{\b LE_OVERFLOW} = -9, 
{\b LE_UNDERFLOW} = -10, 
{\b LE_WOULD_BLOCK} = -11, 
{\b LE_DEADLOCK} = -12, 
{\b LE_FORMAT_ERROR} = -13, 
{\b LE_DUPLICATE} = -14, 
{\b LE_BAD_PARAMETER} = -15, 
{\b LE_CLOSED} = -16, 
{\b LE_BUSY} = -17, 
{\b LE_UNSUPPORTED} = -18, 
{\b LE_IO_ERROR} = -19, 
{\b LE_NOT_IMPLEMENTED} = -20, 
{\b LE_UNAVAILABLE} = -21, 
{\b LE_TERMINATED} = -22
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b le_onoff_t} \{ {\b LE_OFF} = 0, 
{\b LE_ON} = 1
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Legato {\b Basic Type and Constant Definitions} include file.\par
Copyright (C) Sierra Wireless Inc. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CONTAINER_OF\:le_basics.h}
{\xe \v le_basics.h\:CONTAINER_OF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CONTAINER_OF( memberPtr,  type,  member)\~ ((type*)(((uint8_t*)(memberPtr))-((size_t)(&(((type*)0)->member)))))}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the address of a containing structure or union, based on the address of one of its members.\par
If {\f2 countPtr}  points to the {\f2 count}  member of an object type {\f2 my_class_t} , then a pointer to that object should use this:\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 my_class_t* myObjPtr = CONTAINER_OF(countPtr, my_class_t, count);\par
}
 \par
}}
{\xe \v INDEX_OF_ARRAY_MEMBER\:le_basics.h}
{\xe \v le_basics.h\:INDEX_OF_ARRAY_MEMBER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INDEX_OF_ARRAY_MEMBER( array,  memberPtr)\~ ((((size_t)memberPtr) - ((size_t)array)) / sizeof(*(memberPtr)))}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Computes the index of a member within an array.\par
This code sample prints out "The 'w' is at index 6.":\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 const char message[] = "Hello world!";\par
    2 const char* charPtr;\par
    3 int i;\par
    4 \par
    5 for (i = 0; i < sizeof(message); i++)\par
    6 \{\par
    7     if (message[i] == 'w')\par
    8     \{\par
    9         charPtr = &message[i];\par
   10     \}\par
   11 \}\par
   12 \par
   13 printf("The 'w' is at index %zu.\\n", INDEX_OF_ARRAY_MEMBER(message, charPtr));\par
}
 \par
}}
{\xe \v LE_SHARED\:le_basics.h}
{\xe \v le_basics.h\:LE_SHARED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_SHARED\~ __attribute__((visibility ("default")))}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macro used to declare that a symbol should be shared outside the dynamic shared object in which it is defined.\par
This can be used with either a declaration or a definition.\par
E.g., with a declaration (perhaps in a header file):\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 LE_SHARED void my_Function();\par
}
\par
E.g., with a definition (in a .c file):\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 LE_SHARED void my_OtherFunction()\par
    2 \{\par
    3     LE_INFO("Hello world.");\par
    4 \}\par
}
 \par
}}
{\xe \v NUM_ARRAY_MEMBERS\:le_basics.h}
{\xe \v le_basics.h\:NUM_ARRAY_MEMBERS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NUM_ARRAY_MEMBERS( array)\~ (sizeof(array) / sizeof((array)[0]))}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Computes number of members in an array at compile time.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Does NOT work for pointers to arrays.\par
}Here's a code sample:\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 const char message[] = "Hello world!";\par
    2 \par
    3 size_t x = NUM_ARRAY_MEMBERS(message);\par
    4 \par
    5 printf("%lu\\n", x);\par
}
\par
Will print {\f2 13}  on a 32-bit target.\par
But this example is {\b incorrect:}  \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 const char message[] = "Hello world!";\par
    2 const char* messagePtr = &message;\par
    3 \par
    4 size_t x = NUM_ARRAY_MEMBERS(messagePtr);    // NO! BAD PROGRAMMER! BAD!\par
    5 \par
    6 printf("%lu\\n", x);\par
}
 \par
}}
{\xe \v STRINGIZE\:le_basics.h}
{\xe \v le_basics.h\:STRINGIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIZE( x)\~ {\b STRINGIZE_EXPAND}(x)}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function takes the characters as an argument and puts quotes around them.\par
Code sample:\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 const char name[] = STRINGIZE(foo);\par
}
\par
Is seen by the compiler as\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 const char name[] = "foo";\par
}
\par
The {\b STRINGIZE()} macro function passes names like macro definitions on the compiler's command-line. If the above code were changed to:\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 const char name[] = STRINGIZE(NAME);\par
}
\par
then compiling it using the following command line makes it equivalent to the example above:\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 $ gcc -c -DNAME=foo file.c\par
}
\par
The {\f2 -DNAME=foo}  defines a macro called {\f2 NAME}  with a value {\f2 foo} . The C preprocessor then replaces {\f2 {\b STRINGIZE(NAME)}}  with {\f2 "foo"} . \par
}}
{\xe \v STRINGIZE_EXPAND\:le_basics.h}
{\xe \v le_basics.h\:STRINGIZE_EXPAND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIZE_EXPAND( x)\~ #x}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helper macro for {\b STRINGIZE(x)}. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v le_onoff_t\:le_basics.h}
{\xe \v le_basics.h\:le_onoff_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b le_onoff_t}}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ON/OFF type. \par
}}
{\xe \v le_result_t\:le_basics.h}
{\xe \v le_basics.h\:le_result_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b le_result_t}}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard result codes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid All error codes are negative integers. They allow functions with signed integers to return non-negative values when successful or standard error codes on failure. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Deprecated:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the result code LE_NOT_POSSIBLE is scheduled to be removed. \par
}
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LE_OK\:le_basics.h}
{\xe \v le_basics.h\:LE_OK}
{\b {\i LE_OK{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Successful. \par
}{\xe \v LE_NOT_FOUND\:le_basics.h}
{\xe \v le_basics.h\:LE_NOT_FOUND}
{\b {\i LE_NOT_FOUND{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Referenced item does not exist or could not be found. \par
}{\xe \v LE_NOT_POSSIBLE\:le_basics.h}
{\xe \v le_basics.h\:LE_NOT_POSSIBLE}
{\b {\i LE_NOT_POSSIBLE{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Deprecated:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid It is not possible to perform the requested action. \par
}
}{\xe \v LE_OUT_OF_RANGE\:le_basics.h}
{\xe \v le_basics.h\:LE_OUT_OF_RANGE}
{\b {\i LE_OUT_OF_RANGE{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An index or other value is out of range. \par
}{\xe \v LE_NO_MEMORY\:le_basics.h}
{\xe \v le_basics.h\:LE_NO_MEMORY}
{\b {\i LE_NO_MEMORY{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insufficient memory is available. \par
}{\xe \v LE_NOT_PERMITTED\:le_basics.h}
{\xe \v le_basics.h\:LE_NOT_PERMITTED}
{\b {\i LE_NOT_PERMITTED{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current user does not have permission to perform requested action. \par
}{\xe \v LE_FAULT\:le_basics.h}
{\xe \v le_basics.h\:LE_FAULT}
{\b {\i LE_FAULT{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unspecified internal error. \par
}{\xe \v LE_COMM_ERROR\:le_basics.h}
{\xe \v le_basics.h\:LE_COMM_ERROR}
{\b {\i LE_COMM_ERROR{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communications error. \par
}{\xe \v LE_TIMEOUT\:le_basics.h}
{\xe \v le_basics.h\:LE_TIMEOUT}
{\b {\i LE_TIMEOUT{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A time-out occurred. \par
}{\xe \v LE_OVERFLOW\:le_basics.h}
{\xe \v le_basics.h\:LE_OVERFLOW}
{\b {\i LE_OVERFLOW{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An overflow occurred or would have occurred. \par
}{\xe \v LE_UNDERFLOW\:le_basics.h}
{\xe \v le_basics.h\:LE_UNDERFLOW}
{\b {\i LE_UNDERFLOW{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An underflow occurred or would have occurred. \par
}{\xe \v LE_WOULD_BLOCK\:le_basics.h}
{\xe \v le_basics.h\:LE_WOULD_BLOCK}
{\b {\i LE_WOULD_BLOCK{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Would have blocked if non-blocking behaviour was not requested. \par
}{\xe \v LE_DEADLOCK\:le_basics.h}
{\xe \v le_basics.h\:LE_DEADLOCK}
{\b {\i LE_DEADLOCK{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Would have caused a deadlock. \par
}{\xe \v LE_FORMAT_ERROR\:le_basics.h}
{\xe \v le_basics.h\:LE_FORMAT_ERROR}
{\b {\i LE_FORMAT_ERROR{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Format error. \par
}{\xe \v LE_DUPLICATE\:le_basics.h}
{\xe \v le_basics.h\:LE_DUPLICATE}
{\b {\i LE_DUPLICATE{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Duplicate entry found or operation already performed. \par
}{\xe \v LE_BAD_PARAMETER\:le_basics.h}
{\xe \v le_basics.h\:LE_BAD_PARAMETER}
{\b {\i LE_BAD_PARAMETER{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parameter is invalid. \par
}{\xe \v LE_CLOSED\:le_basics.h}
{\xe \v le_basics.h\:LE_CLOSED}
{\b {\i LE_CLOSED{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The resource is closed. \par
}{\xe \v LE_BUSY\:le_basics.h}
{\xe \v le_basics.h\:LE_BUSY}
{\b {\i LE_BUSY{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The resource is busy. \par
}{\xe \v LE_UNSUPPORTED\:le_basics.h}
{\xe \v le_basics.h\:LE_UNSUPPORTED}
{\b {\i LE_UNSUPPORTED{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The underlying resource does not support this operation. \par
}{\xe \v LE_IO_ERROR\:le_basics.h}
{\xe \v le_basics.h\:LE_IO_ERROR}
{\b {\i LE_IO_ERROR{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An IO operation failed. \par
}{\xe \v LE_NOT_IMPLEMENTED\:le_basics.h}
{\xe \v le_basics.h\:LE_NOT_IMPLEMENTED}
{\b {\i LE_NOT_IMPLEMENTED{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unimplemented functionality. \par
}{\xe \v LE_UNAVAILABLE\:le_basics.h}
{\xe \v le_basics.h\:LE_UNAVAILABLE}
{\b {\i LE_UNAVAILABLE{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A transient or temporary loss of a service or resource. \par
}{\xe \v LE_TERMINATED\:le_basics.h}
{\xe \v le_basics.h\:LE_TERMINATED}
{\b {\i LE_TERMINATED{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The process, operation, data stream, session, etc. has stopped. \par
}\par
}}
}