{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
le_mdc_interface.h File Reference\par \pard\plain 
{\tc\tcl2 \v le_mdc_interface.h}
{\xe \v le_mdc_interface.h}
{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "legato.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_INTERFACE_NAME_MAX_LEN}\~ 20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_INTERFACE_NAME_MAX_BYTES}\~ 21\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_IPV4_ADDR_MAX_LEN}\~ 15\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_IPV4_ADDR_MAX_BYTES}\~ 16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_IPV6_ADDR_MAX_LEN}\~ 45\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_IPV6_ADDR_MAX_BYTES}\~ 46\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_APN_NAME_MAX_LEN}\~ 100\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_APN_NAME_MAX_BYTES}\~ 101\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_USER_NAME_MAX_LEN}\~ 64\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_USER_NAME_MAX_BYTES}\~ 65\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_PASSWORD_NAME_MAX_LEN}\~ 100\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_PASSWORD_NAME_MAX_BYTES}\~ 101\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_DEFAULT_PROFILE}\~ -1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_SIMTOOLKIT_BIP_DEFAULT_PROFILE}\~ -2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LE_MDC_DISC_USER_AUTHENTIFICATION_FAILURE}\~ 7\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b le_mdc_DisconnectHandler_t}) (void *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct le_mdc_Profile * {\b le_mdc_ProfileRef_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct le_mdc_SessionStateHandler * {\b le_mdc_SessionStateHandlerRef_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct le_mdc_MtPdpSessionStateHandler * {\b le_mdc_MtPdpSessionStateHandlerRef_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b le_mdc_SessionStateHandlerFunc_t}) ({\b le_mdc_ProfileRef_t} profileRef, {\b le_mdc_ConState_t} ConnectionState, void *contextPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b le_mdc_MtPdpSessionStateHandlerFunc_t}) ({\b le_mdc_ConState_t} ConnectionState, void *contextPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b le_mdc_SessionHandlerFunc_t}) ({\b le_mdc_ProfileRef_t} profileRef, {\b le_result_t} result, void *contextPtr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b le_mdc_DataBearerTechnology_t} \{ {\b LE_MDC_DATA_BEARER_TECHNOLOGY_UNKNOWN} = 0, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_GSM} = 1, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_GPRS} = 2, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_EGPRS} = 3, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_WCDMA} = 4, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HSPA} = 5, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HSPA_PLUS} = 6, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSPA_PLUS} = 7, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HSDPA} = 8, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HSUPA} = 9, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSUPA} = 10, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSPA} = 11, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_LTE} = 12, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_FDD} = 13, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_TDD} = 14, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_CA_DL} = 15, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_CA_UL} = 16, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_TD_SCDMA} = 17, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_1X} = 18, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EVDO} = 19, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EVDO_REVA} = 20, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EHRPD} = 21, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_IS95_1X} = 22, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REV0_DPA} = 23, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_DPA} = 24, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_DPA} = 25, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_MPA} = 26, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_MPA} = 27, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_EMPA} = 28, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_EMPA} = 29, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_MMPA} = 30, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_EVDO_FMC} = 31, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_64_QAM} = 32, 
{\b LE_MDC_DATA_BEARER_TECHNOLOGY_S2B} = 33
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b le_mdc_Pdp_t} \{ {\b LE_MDC_PDP_UNKNOWN} = 0, 
{\b LE_MDC_PDP_IPV4} = 1, 
{\b LE_MDC_PDP_IPV6} = 2, 
{\b LE_MDC_PDP_IPV4V6} = 3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b le_mdc_Auth_t} \{ {\b LE_MDC_AUTH_NONE} = 0x1, 
{\b LE_MDC_AUTH_PAP} = 0x2, 
{\b LE_MDC_AUTH_CHAP} = 0x4
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b le_mdc_ConState_t} \{ {\b LE_MDC_DISCONNECTED} = 0, 
{\b LE_MDC_AUTHENTICATING} = 1, 
{\b LE_MDC_CONNECTED} = 2, 
{\b LE_MDC_SUSPENDING} = 3, 
{\b LE_MDC_INCOMING} = 4
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b le_mdc_DisconnectionReason_t} \{ {\b LE_MDC_DISC_NO_SERVICE} = 0, 
{\b LE_MDC_DISC_OPERATOR_DETERMINED_BARRING} = 1, 
{\b LE_MDC_DISC_INSUFFICIENT_MBMS_CAPABILITIES} = 2, 
{\b LE_MDC_DISC_LLC_SNDCP_FAILURE} = 3, 
{\b LE_MDC_DISC_INSUFFICIENT_RESOURCES} = 4, 
{\b LE_MDC_DISC_MISSING_OR_UNKNOWN_APN} = 5, 
{\b LE_MDC_DISC_UNKNOWN_PDP_ADDR_OR_TYPE} = 6, 
{\b LE_MDC_DISC_USER_AUTHENTICATION_FAILURE} = 7, 
{\b LE_MDC_DISC_ACTIVATION_REJECTED_BY_GGSN_OR_GW} = 8, 
{\b LE_MDC_DISC_ACTIVATION_REJECTED_UNSPECIFIED} = 9, 
{\b LE_MDC_DISC_SERVICE_OPTION_NOT_SUPPORTED} = 10, 
{\b LE_MDC_DISC_REQUESTED_SERVICE_OPTION_UNSUBSCRIBED} = 11, 
{\b LE_MDC_DISC_REQUESTED_SERVICE_OPTION_OUT_OF_ORDER} = 12, 
{\b LE_MDC_DISC_NSAPI_ALREADY_USED} = 13, 
{\b LE_MDC_DISC_REGULAR_DEACTIVATION} = 14, 
{\b LE_MDC_DISC_QOS_NOT_ACCEPTED} = 15, 
{\b LE_MDC_DISC_NETWORK_FAILURE} = 16, 
{\b LE_MDC_DISC_REACTIVATION_REQUESTED} = 17, 
{\b LE_MDC_DISC_FEATURE_NOT_SUPPORTED} = 18, 
{\b LE_MDC_DISC_TFT_SEMANTIC_ERROR} = 19, 
{\b LE_MDC_DISC_TFT_SYNTACTICAL_ERROR} = 20, 
{\b LE_MDC_DISC_UNKNOWN_PDP_CONTEXT} = 21, 
{\b LE_MDC_DISC_PACKET_FILTER_SEMANTIC_ERROR} = 22, 
{\b LE_MDC_DISC_PACKET_FILTER_SYNTACTICAL_ERROR} = 23, 
{\b LE_MDC_DISC_PDP_CONTEXT_WITHOUT_ACTIVE_TFT} = 24, 
{\b LE_MDC_DISC_MULTICAST_TIME_OUT} = 25, 
{\b LE_MDC_DISC_BEARER_CONTROL_MODE_VIOLATION} = 26, 
{\b LE_MDC_DISC_IPV4_ONLY_ALLOWED} = 27, 
{\b LE_MDC_DISC_IPV6_ONLY_ALLOWED} = 28, 
{\b LE_MDC_DISC_SINGLE_ADDR_ONLY_ALLOWED} = 29, 
{\b LE_MDC_DISC_COLLISION_WITH_NETWORK_INITIATED_REQ} = 30, 
{\b LE_MDC_DISC_BEARER_HANDLING_UNSUPPORTED} = 31, 
{\b LE_MDC_DISC_MAX_PDP_CONTEXTS} = 32, 
{\b LE_MDC_DISC_APN_UNSUPPORTED_FOR_RAT_AND_PLMN} = 33, 
{\b LE_MDC_DISC_INCOMPATIBLE_APN} = 34, 
{\b LE_MDC_DISC_INVALID_TRANSACTION_ID} = 35, 
{\b LE_MDC_DISC_MESSAGE_INCORRECT_SEMANTIC} = 36, 
{\b LE_MDC_DISC_INVALID_MANDATORY_INFORMATION} = 37, 
{\b LE_MDC_DISC_UNSUPPORTED_MESSAGE_TYPE} = 38, 
{\b LE_MDC_DISC_MESSAGE_AND_PROTOCOL_STATE_UNCOMPATIBLE} = 39, 
{\b LE_MDC_DISC_UNKNOWN_INFORMATION_ELEMENT} = 40, 
{\b LE_MDC_DISC_CONDITIONAL_IE_ERROR} = 41, 
{\b LE_MDC_DISC_MESSAGE_AND_STATE_UNCOMPATIBLE} = 42, 
{\b LE_MDC_DISC_PROTOCOL_ERROR_UNSPECIFIED} = 43, 
{\b LE_MDC_DISC_PLATFORM_SPECIFIC} = 44, 
{\b LE_MDC_DISC_UNDEFINED} = 45
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b le_mdc_ConnectService} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_TryConnectService} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b le_mdc_SetServerDisconnectHandler} ({\b le_mdc_DisconnectHandler_t} disconnectHandler, void *contextPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b le_mdc_DisconnectService} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_mdc_SessionStateHandlerRef_t} {\b le_mdc_AddSessionStateHandler} ({\b le_mdc_ProfileRef_t} profileRef, {\b le_mdc_SessionStateHandlerFunc_t} handlerPtr, void *contextPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b le_mdc_RemoveSessionStateHandler} ({\b le_mdc_SessionStateHandlerRef_t} handlerRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_mdc_MtPdpSessionStateHandlerRef_t} {\b le_mdc_AddMtPdpSessionStateHandler} ({\b le_mdc_SessionStateHandlerFunc_t} handlerPtr, void *contextPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b le_mdc_RemoveMtPdpSessionStateHandler} ({\b le_mdc_MtPdpSessionStateHandlerRef_t} handlerRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_mdc_ProfileRef_t} {\b le_mdc_GetProfile} (uint32_t index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b le_mdc_GetProfileIndex} ({\b le_mdc_ProfileRef_t} profileRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_StartSession} ({\b le_mdc_ProfileRef_t} profileRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b le_mdc_StartSessionAsync} ({\b le_mdc_ProfileRef_t} profileRef, {\b le_mdc_SessionHandlerFunc_t} handlerPtr, void *contextPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_StopSession} ({\b le_mdc_ProfileRef_t} profileRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b le_mdc_StopSessionAsync} ({\b le_mdc_ProfileRef_t} profileRef, {\b le_mdc_SessionHandlerFunc_t} handlerPtr, void *contextPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_RejectMtPdpSession} ({\b le_mdc_ProfileRef_t} profileRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetSessionState} ({\b le_mdc_ProfileRef_t} profileRef, {\b le_mdc_ConState_t} *connectionStatePtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetInterfaceName} ({\b le_mdc_ProfileRef_t} profileRef, char *interfaceName, size_t interfaceNameSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetIPv4Address} ({\b le_mdc_ProfileRef_t} profileRef, char *ipAddr, size_t ipAddrSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetIPv4GatewayAddress} ({\b le_mdc_ProfileRef_t} profileRef, char *gatewayAddr, size_t gatewayAddrSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetIPv4DNSAddresses} ({\b le_mdc_ProfileRef_t} profileRef, char *dns1AddrStr, size_t dns1AddrStrSize, char *dns2AddrStr, size_t dns2AddrStrSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetIPv6Address} ({\b le_mdc_ProfileRef_t} profileRef, char *ipAddr, size_t ipAddrSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetIPv6GatewayAddress} ({\b le_mdc_ProfileRef_t} profileRef, char *gatewayAddr, size_t gatewayAddrSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetIPv6DNSAddresses} ({\b le_mdc_ProfileRef_t} profileRef, char *dns1AddrStr, size_t dns1AddrStrSize, char *dns2AddrStr, size_t dns2AddrStrSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b le_mdc_IsIPv4} ({\b le_mdc_ProfileRef_t} profileRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b le_mdc_IsIPv6} ({\b le_mdc_ProfileRef_t} profileRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetDataBearerTechnology} ({\b le_mdc_ProfileRef_t} profileRef, {\b le_mdc_DataBearerTechnology_t} *downlinkDataBearerTechPtrPtr, {\b le_mdc_DataBearerTechnology_t} *uplinkDataBearerTechPtrPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetBytesCounters} (uint64_t *rxBytesPtr, uint64_t *txBytesPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_ResetBytesCounter} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_StopBytesCounter} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_StartBytesCounter} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_SetPDP} ({\b le_mdc_ProfileRef_t} profileRef, {\b le_mdc_Pdp_t} pdp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_mdc_Pdp_t} {\b le_mdc_GetPDP} ({\b le_mdc_ProfileRef_t} profileRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_SetAPN} ({\b le_mdc_ProfileRef_t} profileRef, const char *LE_NONNULL apnStr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_SetDefaultAPN} ({\b le_mdc_ProfileRef_t} profileRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetAPN} ({\b le_mdc_ProfileRef_t} profileRef, char *apnStr, size_t apnStrSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_SetAuthentication} ({\b le_mdc_ProfileRef_t} profileRef, {\b le_mdc_Auth_t} type, const char *LE_NONNULL userName, const char *LE_NONNULL password)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetAuthentication} ({\b le_mdc_ProfileRef_t} profileRef, {\b le_mdc_Auth_t} *typePtr, char *userName, size_t userNameSize, char *password, size_t passwordSize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b le_mdc_NumProfiles} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_GetProfileFromApn} (const char *LE_NONNULL apnStr, {\b le_mdc_ProfileRef_t} *profileRefPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_mdc_DisconnectionReason_t} {\b le_mdc_GetDisconnectionReason} ({\b le_mdc_ProfileRef_t} profileRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b le_mdc_GetPlatformSpecificDisconnectionCode} ({\b le_mdc_ProfileRef_t} profileRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b le_mdc_GetPlatformSpecificFailureConnectionReason} ({\b le_mdc_ProfileRef_t} profileRef, int32_t *failureTypePtr, int32_t *failureCodePtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mdc_MapProfileOnNetworkInterface} ({\b le_mdc_ProfileRef_t} profileRef, const char *LE_NONNULL interfaceName)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Legato {\b Modem Data Control} include file.\par
Copyright (C) Sierra Wireless Inc. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v LE_MDC_APN_NAME_MAX_BYTES\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_APN_NAME_MAX_BYTES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_APN_NAME_MAX_BYTES\~ 101}}
\par
{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in a apn name (including the null-terminator). \par
}}
{\xe \v LE_MDC_APN_NAME_MAX_LEN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_APN_NAME_MAX_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_APN_NAME_MAX_LEN\~ 100}}
\par
{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in a apn name (not including the null-terminator). \par
}}
{\xe \v LE_MDC_DEFAULT_PROFILE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DEFAULT_PROFILE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_DEFAULT_PROFILE\~ -1}}
\par
{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default profile definition. \par
}}
{\xe \v LE_MDC_DISC_USER_AUTHENTIFICATION_FAILURE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_USER_AUTHENTIFICATION_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_DISC_USER_AUTHENTIFICATION_FAILURE\~ 7}}
\par
{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Deprecated:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid LE_MDC_DISC_USER_AUTHENTIFICATION_FAILURE is deprecated. LE_MDC_DISC_USER_AUTHENTICATION_FAILURE should be used instead. \par
}
}}
{\xe \v LE_MDC_INTERFACE_NAME_MAX_BYTES\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_INTERFACE_NAME_MAX_BYTES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_INTERFACE_NAME_MAX_BYTES\~ 21}}
\par
{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in a profile name (including the null-terminator). \par
}}
{\xe \v LE_MDC_INTERFACE_NAME_MAX_LEN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_INTERFACE_NAME_MAX_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_INTERFACE_NAME_MAX_LEN\~ 20}}
\par
{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in a interface name (not including the null-terminator). \par
}}
{\xe \v LE_MDC_IPV4_ADDR_MAX_BYTES\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_IPV4_ADDR_MAX_BYTES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_IPV4_ADDR_MAX_BYTES\~ 16}}
\par
{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in an IPv4 address (including the null-terminator). \par
}}
{\xe \v LE_MDC_IPV4_ADDR_MAX_LEN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_IPV4_ADDR_MAX_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_IPV4_ADDR_MAX_LEN\~ 15}}
\par
{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in an IPv4 address (not including the null-terminator). \par
}}
{\xe \v LE_MDC_IPV6_ADDR_MAX_BYTES\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_IPV6_ADDR_MAX_BYTES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_IPV6_ADDR_MAX_BYTES\~ 46}}
\par
{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in an IPv6 address (including the null-terminator). \par
}}
{\xe \v LE_MDC_IPV6_ADDR_MAX_LEN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_IPV6_ADDR_MAX_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_IPV6_ADDR_MAX_LEN\~ 45}}
\par
{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in an IPv6 address (not including the null-terminator). \par
}}
{\xe \v LE_MDC_PASSWORD_NAME_MAX_BYTES\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_PASSWORD_NAME_MAX_BYTES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_PASSWORD_NAME_MAX_BYTES\~ 101}}
\par
{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in a password name (including the null-terminator). \par
}}
{\xe \v LE_MDC_PASSWORD_NAME_MAX_LEN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_PASSWORD_NAME_MAX_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_PASSWORD_NAME_MAX_LEN\~ 100}}
\par
{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in a password name (not including the null-terminator). \par
}}
{\xe \v LE_MDC_SIMTOOLKIT_BIP_DEFAULT_PROFILE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_SIMTOOLKIT_BIP_DEFAULT_PROFILE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_SIMTOOLKIT_BIP_DEFAULT_PROFILE\~ -2}}
\par
{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default profile definition for Bearer Independent Protocol (BIP). \par
}}
{\xe \v LE_MDC_USER_NAME_MAX_BYTES\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_USER_NAME_MAX_BYTES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_USER_NAME_MAX_BYTES\~ 65}}
\par
{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in a user name (including the null-terminator). \par
}}
{\xe \v LE_MDC_USER_NAME_MAX_LEN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_USER_NAME_MAX_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LE_MDC_USER_NAME_MAX_LEN\~ 64}}
\par
{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of bytes in a user name (not including the null-terminator). \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v le_mdc_DisconnectHandler_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_DisconnectHandler_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* le_mdc_DisconnectHandler_t) (void *)}}
\par
{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type for handler called when a server disconnects. \par
}}
{\xe \v le_mdc_MtPdpSessionStateHandlerFunc_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_MtPdpSessionStateHandlerFunc_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* le_mdc_MtPdpSessionStateHandlerFunc_t) ({\b le_mdc_ConState_t} ConnectionState,void *contextPtr)}}
\par
{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handler for MT-PDP Data session connection state changes. \par
}}
{\xe \v le_mdc_MtPdpSessionStateHandlerRef_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_MtPdpSessionStateHandlerRef_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct le_mdc_MtPdpSessionStateHandler* {\b le_mdc_MtPdpSessionStateHandlerRef_t}}}
\par
{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reference type used by Add/Remove functions for EVENT 'le_mdc_MtPdpSessionState' \par
}}
{\xe \v le_mdc_ProfileRef_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_ProfileRef_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct le_mdc_Profile* {\b le_mdc_ProfileRef_t}}}
\par
{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reference to a modem data connection profile. \par
}}
{\xe \v le_mdc_SessionHandlerFunc_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_SessionHandlerFunc_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* le_mdc_SessionHandlerFunc_t) ({\b le_mdc_ProfileRef_t} profileRef,{\b le_result_t} result,void *contextPtr)}}
\par
{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handler for asynchronous session start and stop result response \par
}}
{\xe \v le_mdc_SessionStateHandlerFunc_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_SessionStateHandlerFunc_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* le_mdc_SessionStateHandlerFunc_t) ({\b le_mdc_ProfileRef_t} profileRef,{\b le_mdc_ConState_t} ConnectionState,void *contextPtr)}}
\par
{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handler for Data session connection state changes. \par
}}
{\xe \v le_mdc_SessionStateHandlerRef_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_SessionStateHandlerRef_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct le_mdc_SessionStateHandler* {\b le_mdc_SessionStateHandlerRef_t}}}
\par
{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reference type used by Add/Remove functions for EVENT 'le_mdc_SessionState' \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v le_mdc_Auth_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_Auth_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b le_mdc_Auth_t}}}
\par
{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Authentication bit mask. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LE_MDC_AUTH_NONE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_AUTH_NONE}
{\b {\i LE_MDC_AUTH_NONE{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
no authentication \par
}{\xe \v LE_MDC_AUTH_PAP\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_AUTH_PAP}
{\b {\i LE_MDC_AUTH_PAP{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PAP protocol. \par
}{\xe \v LE_MDC_AUTH_CHAP\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_AUTH_CHAP}
{\b {\i LE_MDC_AUTH_CHAP{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHAP protocol. \par
}\par
}}
{\xe \v le_mdc_ConState_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_ConState_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b le_mdc_ConState_t}}}
\par
{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of connection state. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LE_MDC_DISCONNECTED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISCONNECTED}
{\b {\i LE_MDC_DISCONNECTED{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data session is disconnected. \par
}{\xe \v LE_MDC_AUTHENTICATING\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_AUTHENTICATING}
{\b {\i LE_MDC_AUTHENTICATING{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Authenticating data session. \par
}{\xe \v LE_MDC_CONNECTED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_CONNECTED}
{\b {\i LE_MDC_CONNECTED{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data session is connected. \par
}{\xe \v LE_MDC_SUSPENDING\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_SUSPENDING}
{\b {\i LE_MDC_SUSPENDING{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Suspending data session. \par
}{\xe \v LE_MDC_INCOMING\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_INCOMING}
{\b {\i LE_MDC_INCOMING{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incoming data session (MT-PDP context request) \par
}\par
}}
{\xe \v le_mdc_DataBearerTechnology_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_DataBearerTechnology_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b le_mdc_DataBearerTechnology_t}}}
\par
{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of data bearer technologies. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_UNKNOWN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_UNKNOWN}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_UNKNOWN{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_GSM\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_GSM}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_GSM{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GSM. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_GPRS\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_GPRS}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_GPRS{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPRS. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_EGPRS\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_EGPRS}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_EGPRS{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enhanced GPRS (EDGE) \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_WCDMA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_WCDMA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_WCDMA{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WCDMA (UMTS) \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HSPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HSPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HSPA{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HSPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HSPA_PLUS\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HSPA_PLUS}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HSPA_PLUS{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HSPA+. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSPA_PLUS\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSPA_PLUS}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSPA_PLUS{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dual Cell - HSPA+. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HSDPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HSDPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HSDPA{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HSDPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HSUPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HSUPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HSUPA{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HSUPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSUPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSUPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSUPA{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dual Cell - HSUPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_DC_HSPA{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dual Cell - HSPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_LTE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_LTE}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_LTE{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LTE. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_FDD\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_FDD}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_FDD{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LTE FDD. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_TDD\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_TDD}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_TDD{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LTE TDD. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_CA_DL\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_CA_DL}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_CA_DL{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LTE CA DL. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_CA_UL\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_CA_UL}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_LTE_CA_UL{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LTE CA UL. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_TD_SCDMA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_TD_SCDMA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_TD_SCDMA{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TD-SCDMA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_1X\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_1X}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_1X{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CDMA2000 1X. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EVDO\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EVDO}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EVDO{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CDMA2000 HRPD (1xEV-DO) \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EVDO_REVA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EVDO_REVA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EVDO_REVA{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CDMA2000 HRPD (1xEV-DO RevA) \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EHRPD\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EHRPD}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_CDMA2000_EHRPD{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CDMA2000 EHRPD. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_IS95_1X\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_IS95_1X}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_IS95_1X{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IS95 1X. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REV0_DPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REV0_DPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REV0_DPA{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HDR REV0 DPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_DPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_DPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_DPA{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HDR REVA DPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_DPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_DPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_DPA{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HDR REVB DPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_MPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_MPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_MPA{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HDR REVA MPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_MPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_MPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_MPA{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HDR REVB MPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_EMPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_EMPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVA_EMPA{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HDR REVA EMPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_EMPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_EMPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_EMPA{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HDR REVB EMPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_MMPA\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_MMPA}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_REVB_MMPA{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HDR REVB MMPA. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_EVDO_FMC\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_EVDO_FMC}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_HDR_EVDO_FMC{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HDR EVDO FMC. \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_64_QAM\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_64_QAM}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_64_QAM{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
64 QAM \par
}{\xe \v LE_MDC_DATA_BEARER_TECHNOLOGY_S2B\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DATA_BEARER_TECHNOLOGY_S2B}
{\b {\i LE_MDC_DATA_BEARER_TECHNOLOGY_S2B{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
S2B. \par
}\par
}}
{\xe \v le_mdc_DisconnectionReason_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_DisconnectionReason_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b le_mdc_DisconnectionReason_t}}}
\par
{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of the possible reasons for the disconnection. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LE_MDC_DISC_NO_SERVICE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_NO_SERVICE}
{\b {\i LE_MDC_DISC_NO_SERVICE{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Modem has no service. \par
}{\xe \v LE_MDC_DISC_OPERATOR_DETERMINED_BARRING\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_OPERATOR_DETERMINED_BARRING}
{\b {\i LE_MDC_DISC_OPERATOR_DETERMINED_BARRING{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_INSUFFICIENT_MBMS_CAPABILITIES\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_INSUFFICIENT_MBMS_CAPABILITIES}
{\b {\i LE_MDC_DISC_INSUFFICIENT_MBMS_CAPABILITIES{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_LLC_SNDCP_FAILURE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_LLC_SNDCP_FAILURE}
{\b {\i LE_MDC_DISC_LLC_SNDCP_FAILURE{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_INSUFFICIENT_RESOURCES\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_INSUFFICIENT_RESOURCES}
{\b {\i LE_MDC_DISC_INSUFFICIENT_RESOURCES{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_MISSING_OR_UNKNOWN_APN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_MISSING_OR_UNKNOWN_APN}
{\b {\i LE_MDC_DISC_MISSING_OR_UNKNOWN_APN{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_UNKNOWN_PDP_ADDR_OR_TYPE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_UNKNOWN_PDP_ADDR_OR_TYPE}
{\b {\i LE_MDC_DISC_UNKNOWN_PDP_ADDR_OR_TYPE{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_USER_AUTHENTICATION_FAILURE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_USER_AUTHENTICATION_FAILURE}
{\b {\i LE_MDC_DISC_USER_AUTHENTICATION_FAILURE{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_ACTIVATION_REJECTED_BY_GGSN_OR_GW\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_ACTIVATION_REJECTED_BY_GGSN_OR_GW}
{\b {\i LE_MDC_DISC_ACTIVATION_REJECTED_BY_GGSN_OR_GW{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_ACTIVATION_REJECTED_UNSPECIFIED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_ACTIVATION_REJECTED_UNSPECIFIED}
{\b {\i LE_MDC_DISC_ACTIVATION_REJECTED_UNSPECIFIED{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_SERVICE_OPTION_NOT_SUPPORTED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_SERVICE_OPTION_NOT_SUPPORTED}
{\b {\i LE_MDC_DISC_SERVICE_OPTION_NOT_SUPPORTED{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_REQUESTED_SERVICE_OPTION_UNSUBSCRIBED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_REQUESTED_SERVICE_OPTION_UNSUBSCRIBED}
{\b {\i LE_MDC_DISC_REQUESTED_SERVICE_OPTION_UNSUBSCRIBED{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_REQUESTED_SERVICE_OPTION_OUT_OF_ORDER\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_REQUESTED_SERVICE_OPTION_OUT_OF_ORDER}
{\b {\i LE_MDC_DISC_REQUESTED_SERVICE_OPTION_OUT_OF_ORDER{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_NSAPI_ALREADY_USED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_NSAPI_ALREADY_USED}
{\b {\i LE_MDC_DISC_NSAPI_ALREADY_USED{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_REGULAR_DEACTIVATION\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_REGULAR_DEACTIVATION}
{\b {\i LE_MDC_DISC_REGULAR_DEACTIVATION{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_QOS_NOT_ACCEPTED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_QOS_NOT_ACCEPTED}
{\b {\i LE_MDC_DISC_QOS_NOT_ACCEPTED{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_NETWORK_FAILURE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_NETWORK_FAILURE}
{\b {\i LE_MDC_DISC_NETWORK_FAILURE{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_REACTIVATION_REQUESTED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_REACTIVATION_REQUESTED}
{\b {\i LE_MDC_DISC_REACTIVATION_REQUESTED{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_FEATURE_NOT_SUPPORTED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_FEATURE_NOT_SUPPORTED}
{\b {\i LE_MDC_DISC_FEATURE_NOT_SUPPORTED{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_TFT_SEMANTIC_ERROR\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_TFT_SEMANTIC_ERROR}
{\b {\i LE_MDC_DISC_TFT_SEMANTIC_ERROR{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_TFT_SYNTACTICAL_ERROR\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_TFT_SYNTACTICAL_ERROR}
{\b {\i LE_MDC_DISC_TFT_SYNTACTICAL_ERROR{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_UNKNOWN_PDP_CONTEXT\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_UNKNOWN_PDP_CONTEXT}
{\b {\i LE_MDC_DISC_UNKNOWN_PDP_CONTEXT{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_PACKET_FILTER_SEMANTIC_ERROR\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_PACKET_FILTER_SEMANTIC_ERROR}
{\b {\i LE_MDC_DISC_PACKET_FILTER_SEMANTIC_ERROR{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_PACKET_FILTER_SYNTACTICAL_ERROR\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_PACKET_FILTER_SYNTACTICAL_ERROR}
{\b {\i LE_MDC_DISC_PACKET_FILTER_SYNTACTICAL_ERROR{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_PDP_CONTEXT_WITHOUT_ACTIVE_TFT\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_PDP_CONTEXT_WITHOUT_ACTIVE_TFT}
{\b {\i LE_MDC_DISC_PDP_CONTEXT_WITHOUT_ACTIVE_TFT{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_MULTICAST_TIME_OUT\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_MULTICAST_TIME_OUT}
{\b {\i LE_MDC_DISC_MULTICAST_TIME_OUT{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_BEARER_CONTROL_MODE_VIOLATION\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_BEARER_CONTROL_MODE_VIOLATION}
{\b {\i LE_MDC_DISC_BEARER_CONTROL_MODE_VIOLATION{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_IPV4_ONLY_ALLOWED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_IPV4_ONLY_ALLOWED}
{\b {\i LE_MDC_DISC_IPV4_ONLY_ALLOWED{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_IPV6_ONLY_ALLOWED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_IPV6_ONLY_ALLOWED}
{\b {\i LE_MDC_DISC_IPV6_ONLY_ALLOWED{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_SINGLE_ADDR_ONLY_ALLOWED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_SINGLE_ADDR_ONLY_ALLOWED}
{\b {\i LE_MDC_DISC_SINGLE_ADDR_ONLY_ALLOWED{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_COLLISION_WITH_NETWORK_INITIATED_REQ\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_COLLISION_WITH_NETWORK_INITIATED_REQ}
{\b {\i LE_MDC_DISC_COLLISION_WITH_NETWORK_INITIATED_REQ{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_BEARER_HANDLING_UNSUPPORTED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_BEARER_HANDLING_UNSUPPORTED}
{\b {\i LE_MDC_DISC_BEARER_HANDLING_UNSUPPORTED{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_MAX_PDP_CONTEXTS\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_MAX_PDP_CONTEXTS}
{\b {\i LE_MDC_DISC_MAX_PDP_CONTEXTS{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_APN_UNSUPPORTED_FOR_RAT_AND_PLMN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_APN_UNSUPPORTED_FOR_RAT_AND_PLMN}
{\b {\i LE_MDC_DISC_APN_UNSUPPORTED_FOR_RAT_AND_PLMN{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_INCOMPATIBLE_APN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_INCOMPATIBLE_APN}
{\b {\i LE_MDC_DISC_INCOMPATIBLE_APN{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I1 \par
}{\xe \v LE_MDC_DISC_INVALID_TRANSACTION_ID\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_INVALID_TRANSACTION_ID}
{\b {\i LE_MDC_DISC_INVALID_TRANSACTION_ID{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I2 \par
}{\xe \v LE_MDC_DISC_MESSAGE_INCORRECT_SEMANTIC\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_MESSAGE_INCORRECT_SEMANTIC}
{\b {\i LE_MDC_DISC_MESSAGE_INCORRECT_SEMANTIC{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I2 \par
}{\xe \v LE_MDC_DISC_INVALID_MANDATORY_INFORMATION\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_INVALID_MANDATORY_INFORMATION}
{\b {\i LE_MDC_DISC_INVALID_MANDATORY_INFORMATION{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I2 \par
}{\xe \v LE_MDC_DISC_UNSUPPORTED_MESSAGE_TYPE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_UNSUPPORTED_MESSAGE_TYPE}
{\b {\i LE_MDC_DISC_UNSUPPORTED_MESSAGE_TYPE{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I2 \par
}{\xe \v LE_MDC_DISC_MESSAGE_AND_PROTOCOL_STATE_UNCOMPATIBLE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_MESSAGE_AND_PROTOCOL_STATE_UNCOMPATIBLE}
{\b {\i LE_MDC_DISC_MESSAGE_AND_PROTOCOL_STATE_UNCOMPATIBLE{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I2 \par
}{\xe \v LE_MDC_DISC_UNKNOWN_INFORMATION_ELEMENT\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_UNKNOWN_INFORMATION_ELEMENT}
{\b {\i LE_MDC_DISC_UNKNOWN_INFORMATION_ELEMENT{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I2 \par
}{\xe \v LE_MDC_DISC_CONDITIONAL_IE_ERROR\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_CONDITIONAL_IE_ERROR}
{\b {\i LE_MDC_DISC_CONDITIONAL_IE_ERROR{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I2 \par
}{\xe \v LE_MDC_DISC_MESSAGE_AND_STATE_UNCOMPATIBLE\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_MESSAGE_AND_STATE_UNCOMPATIBLE}
{\b {\i LE_MDC_DISC_MESSAGE_AND_STATE_UNCOMPATIBLE{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I2 \par
}{\xe \v LE_MDC_DISC_PROTOCOL_ERROR_UNSPECIFIED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_PROTOCOL_ERROR_UNSPECIFIED}
{\b {\i LE_MDC_DISC_PROTOCOL_ERROR_UNSPECIFIED{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex I2 \par
}{\xe \v LE_MDC_DISC_PLATFORM_SPECIFIC\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_PLATFORM_SPECIFIC}
{\b {\i LE_MDC_DISC_PLATFORM_SPECIFIC{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Platform specific code. \par
}{\xe \v LE_MDC_DISC_UNDEFINED\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_DISC_UNDEFINED}
{\b {\i LE_MDC_DISC_UNDEFINED{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Undefined reason. \par
}\par
}}
{\xe \v le_mdc_Pdp_t\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_Pdp_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b le_mdc_Pdp_t}}}
\par
{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of Packet Data Protocol. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LE_MDC_PDP_UNKNOWN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_PDP_UNKNOWN}
{\b {\i LE_MDC_PDP_UNKNOWN{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown. \par
}{\xe \v LE_MDC_PDP_IPV4\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_PDP_IPV4}
{\b {\i LE_MDC_PDP_IPV4{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IPv4. \par
}{\xe \v LE_MDC_PDP_IPV6\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_PDP_IPV6}
{\b {\i LE_MDC_PDP_IPV6{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IPv6. \par
}{\xe \v LE_MDC_PDP_IPV4V6\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:LE_MDC_PDP_IPV4V6}
{\b {\i LE_MDC_PDP_IPV4V6{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IPv4 and IPv6. \par
}\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v le_mdc_AddMtPdpSessionStateHandler\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_AddMtPdpSessionStateHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_mdc_MtPdpSessionStateHandlerRef_t} le_mdc_AddMtPdpSessionStateHandler ({\b le_mdc_SessionStateHandlerFunc_t}  {\i handlerPtr}, void *  {\i contextPtr})}}
\par
{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add handler function for EVENT 'le_mdc_MtPdpSessionState'\par
This event provides information on data session connection state changes for the given profileRef. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i handlerPtr} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i contextPtr} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_AddSessionStateHandler\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_AddSessionStateHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_mdc_SessionStateHandlerRef_t} le_mdc_AddSessionStateHandler ({\b le_mdc_ProfileRef_t}  {\i profileRef}, {\b le_mdc_SessionStateHandlerFunc_t}  {\i handlerPtr}, void *  {\i contextPtr})}}
\par
{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add handler function for EVENT 'le_mdc_SessionState'\par
This event provides information on data session connection state changes for the given profileRef. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{The profile object of interest \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i handlerPtr} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i contextPtr} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_ConnectService\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_ConnectService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void le_mdc_ConnectService (void )}}
\par
{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connect the current client thread to the service providing this API. Block until the service is available.\par
For each thread that wants to use this API, either ConnectService or TryConnectService must be called before any other functions in this API. Normally, ConnectService is automatically called for the main thread, but not for any other thread. For details, see {\b Client-specific Functions}.\par
This function is created automatically. \par
}}
{\xe \v le_mdc_DisconnectService\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_DisconnectService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void le_mdc_DisconnectService (void )}}
\par
{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disconnect the current client thread from the service providing this API.\par
Normally, this function doesn't need to be called. After this function is called, there's no longer a connection to the service, and the functions in this API can't be used. For details, see {\b Client-specific Functions}.\par
This function is created automatically. \par
}}
{\xe \v le_mdc_GetAPN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetAPN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetAPN ({\b le_mdc_ProfileRef_t}  {\i profileRef}, char *  {\i apnStr}, size_t  {\i apnStrSize})}}
\par
{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Access Point Name (APN) for the given profile.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_BAD_PARAMETER if an input parameter is not valid\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OVERFLOW if the APN is is too long\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT on failed\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i apnStr} \cell }{The Access Point Name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i apnStrSize} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_GetAuthentication\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetAuthentication}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetAuthentication ({\b le_mdc_ProfileRef_t}  {\i profileRef}, {\b le_mdc_Auth_t} *  {\i typePtr}, char *  {\i userName}, size_t  {\i userNameSize}, char *  {\i password}, size_t  {\i passwordSize})}}
\par
{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get authentication property\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_BAD_PARAMETER if an input parameter is not valid\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OVERFLOW userName or password are too small\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT on failed\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i typePtr} \cell }{Authentication type \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i userName} \cell }{UserName used by authentication \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i userNameSize} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i password} \cell }{Password used by authentication \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i passwordSize} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_GetBytesCounters\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetBytesCounters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetBytesCounters (uint64_t *  {\i rxBytesPtr}, uint64_t *  {\i txBytesPtr})}}
\par
{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get number of bytes received/transmitted without error since the last reset.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
The process exits, if an invalid pointer is given \par}
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i rxBytesPtr} \cell }{bytes amount received since the last counter reset \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i txBytesPtr} \cell }{bytes amount transmitted since the last counter reset \cell }
{\row }
}
}}
{\xe \v le_mdc_GetDataBearerTechnology\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetDataBearerTechnology}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetDataBearerTechnology ({\b le_mdc_ProfileRef_t}  {\i profileRef}, {\b le_mdc_DataBearerTechnology_t} *  {\i downlinkDataBearerTechPtrPtr}, {\b le_mdc_DataBearerTechnology_t} *  {\i uplinkDataBearerTechPtrPtr})}}
\par
{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Data Bearer Technology for the given profile, if the data session is connected.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i downlinkDataBearerTechPtrPtr} \cell }{downlink data bearer technology \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i uplinkDataBearerTechPtrPtr} \cell }{uplink data bearer technology \cell }
{\row }
}
}}
{\xe \v le_mdc_GetDisconnectionReason\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetDisconnectionReason}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_mdc_DisconnectionReason_t} le_mdc_GetDisconnectionReason ({\b le_mdc_ProfileRef_t}  {\i profileRef})}}
\par
{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called to get the disconnection reason.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The disconnection reason.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{profile reference \cell }
{\row }
}
}}
{\xe \v le_mdc_GetInterfaceName\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetInterfaceName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetInterfaceName ({\b le_mdc_ProfileRef_t}  {\i profileRef}, char *  {\i interfaceName}, size_t  {\i interfaceNameSize})}}
\par
{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the network interface name, if the data session is connected.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OVERFLOW if the interface name would not fit in interfaceNameStr\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i interfaceName} \cell }{The name of the network interface \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i interfaceNameSize} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_GetIPv4Address\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetIPv4Address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetIPv4Address ({\b le_mdc_ProfileRef_t}  {\i profileRef}, char *  {\i ipAddr}, size_t  {\i ipAddrSize})}}
\par
{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the IPv4 address for the given profile, if the data session is connected and has an IPv4 address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OVERFLOW if the IP address would not fit in ipAddrStr\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i ipAddr} \cell }{The IP address in dotted format \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i ipAddrSize} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_GetIPv4DNSAddresses\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetIPv4DNSAddresses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetIPv4DNSAddresses ({\b le_mdc_ProfileRef_t}  {\i profileRef}, char *  {\i dns1AddrStr}, size_t  {\i dns1AddrStrSize}, char *  {\i dns2AddrStr}, size_t  {\i dns2AddrStrSize})}}
\par
{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the primary/secondary DNS v4 addresses for the given profile, if the data session is connected and has an IPv4 address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OVERFLOW if the IP address would not fit in buffer\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
If only one DNS address is available, then it will be returned, and an empty string will be returned for the unavailable address\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
The process exits, if an invalid profile object is given \par}
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i dns1AddrStr} \cell }{The primary DNS IP address in dotted format \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i dns1AddrStrSize} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i dns2AddrStr} \cell }{The secondary DNS IP address in dotted format \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i dns2AddrStrSize} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_GetIPv4GatewayAddress\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetIPv4GatewayAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetIPv4GatewayAddress ({\b le_mdc_ProfileRef_t}  {\i profileRef}, char *  {\i gatewayAddr}, size_t  {\i gatewayAddrSize})}}
\par
{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the gateway IPv4 address for the given profile, if the data session is connected and has an IPv4 address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OVERFLOW if the IP address would not fit in gatewayAddrStr\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i gatewayAddr} \cell }{The gateway IP address in dotted format \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i gatewayAddrSize} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_GetIPv6Address\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetIPv6Address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetIPv6Address ({\b le_mdc_ProfileRef_t}  {\i profileRef}, char *  {\i ipAddr}, size_t  {\i ipAddrSize})}}
\par
{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the IPv6 address for the given profile, if the data session is connected and has an IPv6 address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OVERFLOW if the IP address would not fit in ipAddrStr\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i ipAddr} \cell }{The IP address in dotted format \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i ipAddrSize} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_GetIPv6DNSAddresses\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetIPv6DNSAddresses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetIPv6DNSAddresses ({\b le_mdc_ProfileRef_t}  {\i profileRef}, char *  {\i dns1AddrStr}, size_t  {\i dns1AddrStrSize}, char *  {\i dns2AddrStr}, size_t  {\i dns2AddrStrSize})}}
\par
{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the primary/secondary DNS v6 addresses, if the data session is connected and has an IPv6 address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OVERFLOW if the IP address can't fit in buffer\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
If only one DNS address is available, it will be returned, and an empty string will be returned for the unavailable address.\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
The process exits, if an invalid profile object is given \par}
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i dns1AddrStr} \cell }{The primary DNS IP address in dotted format \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i dns1AddrStrSize} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i dns2AddrStr} \cell }{The secondary DNS IP address in dotted format \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i dns2AddrStrSize} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_GetIPv6GatewayAddress\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetIPv6GatewayAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetIPv6GatewayAddress ({\b le_mdc_ProfileRef_t}  {\i profileRef}, char *  {\i gatewayAddr}, size_t  {\i gatewayAddrSize})}}
\par
{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the gateway IPv6 address for the given profile, if the data session is connected and has an IPv6 address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OVERFLOW if the IP address would not fit in gatewayAddrStr\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i gatewayAddr} \cell }{The gateway IP address in dotted format \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i gatewayAddrSize} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_GetPDP\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetPDP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_mdc_Pdp_t} le_mdc_GetPDP ({\b le_mdc_ProfileRef_t}  {\i profileRef})}}
\par
{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Packet Data Protocol (PDP) for the given profile.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
packet data protocol value\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
}
}}
{\xe \v le_mdc_GetPlatformSpecificDisconnectionCode\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetPlatformSpecificDisconnectionCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t le_mdc_GetPlatformSpecificDisconnectionCode ({\b le_mdc_ProfileRef_t}  {\i profileRef})}}
\par
{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called to get the platform specific disconnection code.\par
Refer to {\b Platform specific error codes} for platform specific disconnection code description.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The platform specific disconnection code.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{profile reference \cell }
{\row }
}
}}
{\xe \v le_mdc_GetPlatformSpecificFailureConnectionReason\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetPlatformSpecificFailureConnectionReason}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void le_mdc_GetPlatformSpecificFailureConnectionReason ({\b le_mdc_ProfileRef_t}  {\i profileRef}, int32_t *  {\i failureTypePtr}, int32_t *  {\i failureCodePtr})}}
\par
{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called to get the platform specific connection failure reason.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{profile reference \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i failureTypePtr} \cell }{platform specific failure type \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i failureCodePtr} \cell }{platform specific failure code \cell }
{\row }
}
}}
{\xe \v le_mdc_GetProfile\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetProfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_mdc_ProfileRef_t} le_mdc_GetProfile (uint32_t  {\i index})}}
\par
{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Profile Reference for index\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Create a new profile if the profile's index can't be found.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 is not a valid index.\par
Ensure to check the list of supported data profiles for your specific platform.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
Reference to the data profile\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
NULL if the profile index does not exist \par}
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i index} \cell }{index of the profile. \cell }
{\row }
}
}}
{\xe \v le_mdc_GetProfileFromApn\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetProfileFromApn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetProfileFromApn (const char *LE_NONNULL  {\i apnStr}, {\b le_mdc_ProfileRef_t} *  {\i profileRefPtr})}}
\par
{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a profile selected by its APN\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_BAD_PARAMETER if an input parameter is not valid\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_NOT_FOUND if the requested APN is not found \par}
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i apnStr} \cell }{The Access Point Name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i profileRefPtr} \cell }{profile reference \cell }
{\row }
}
}}
{\xe \v le_mdc_GetProfileIndex\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetProfileIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t le_mdc_GetProfileIndex ({\b le_mdc_ProfileRef_t}  {\i profileRef})}}
\par
{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the index for the given Profile.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
index of the profile in the modem\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
}
}}
{\xe \v le_mdc_GetSessionState\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_GetSessionState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_GetSessionState ({\b le_mdc_ProfileRef_t}  {\i profileRef}, {\b le_mdc_ConState_t} *  {\i connectionStatePtr})}}
\par
{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current data session state.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_BAD_PARAMETER if an input parameter is not valid\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT on failure\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i connectionStatePtr} \cell }{The data session state \cell }
{\row }
}
}}
{\xe \v le_mdc_IsIPv4\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_IsIPv4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool le_mdc_IsIPv4 ({\b le_mdc_ProfileRef_t}  {\i profileRef})}}
\par
{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allow the caller to know if the given profile is actually supporting IPv4, if the data session is connected.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TRUE if PDP type is IPv4, FALSE otherwise.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
}
}}
{\xe \v le_mdc_IsIPv6\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_IsIPv6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool le_mdc_IsIPv6 ({\b le_mdc_ProfileRef_t}  {\i profileRef})}}
\par
{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allow the caller to know if the given profile is actually supporting IPv6, if the data session is connected.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TRUE if PDP type is IPv6, FALSE otherwise.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
}
}}
{\xe \v le_mdc_MapProfileOnNetworkInterface\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_MapProfileOnNetworkInterface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_MapProfileOnNetworkInterface ({\b le_mdc_ProfileRef_t}  {\i profileRef}, const char *LE_NONNULL  {\i interfaceName})}}
\par
{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Map a profile on a network interface\par
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid 
LE_UNSUPPORTED if not supported by the target\par
\pard\plain \s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid 
LE_FAULT for all other errors \par}
}\par}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Profile reference \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i interfaceName} \cell }{Network interface name \cell }
{\row }
}
}}
{\xe \v le_mdc_NumProfiles\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_NumProfiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t le_mdc_NumProfiles (void )}}
\par
{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of profiles on the modem.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
number of profiles existing on modem \par}
}}}
{\xe \v le_mdc_RejectMtPdpSession\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_RejectMtPdpSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_RejectMtPdpSession ({\b le_mdc_ProfileRef_t}  {\i profileRef})}}
\par
{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reject MT-PDP profile data session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_BAD_PARAMETER if the input parameter is not valid\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_UNSUPPORTED if not supported by the target\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for other failures\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The MT-PDP context activation feature is not supported on all platforms. Please refer to {\b Mobile Terminated PDP context} section for full details. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Reject MT-PDP data session for this profile object \cell }
{\row }
}
}}
{\xe \v le_mdc_RemoveMtPdpSessionStateHandler\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_RemoveMtPdpSessionStateHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void le_mdc_RemoveMtPdpSessionStateHandler ({\b le_mdc_MtPdpSessionStateHandlerRef_t}  {\i handlerRef})}}
\par
{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove handler function for EVENT 'le_mdc_MtPdpSessionState' \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i handlerRef} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_RemoveSessionStateHandler\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_RemoveSessionStateHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void le_mdc_RemoveSessionStateHandler ({\b le_mdc_SessionStateHandlerRef_t}  {\i handlerRef})}}
\par
{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove handler function for EVENT 'le_mdc_SessionState' \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i handlerRef} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_ResetBytesCounter\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_ResetBytesCounter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_ResetBytesCounter (void )}}
\par
{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset received/transmitted data flow statistics\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors \par}
}}}
{\xe \v le_mdc_SetAPN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_SetAPN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_SetAPN ({\b le_mdc_ProfileRef_t}  {\i profileRef}, const char *LE_NONNULL  {\i apnStr})}}
\par
{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Access Point Name (APN) for the given profile.\par
The APN must be an ASCII string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_BAD_PARAMETER if an input parameter is not valid\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT if the data session is currently connected for the given profile\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If APN is too long (max APN_NAME_MAX_LEN digits), it is a fatal error, the function will not return.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The maximum APN length might be limited by the platform. Please refer to the platform documentation {\b Modem Control platform constraints}.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i apnStr} \cell }{The Access Point Name \cell }
{\row }
}
}}
{\xe \v le_mdc_SetAuthentication\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_SetAuthentication}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_SetAuthentication ({\b le_mdc_ProfileRef_t}  {\i profileRef}, {\b le_mdc_Auth_t}  {\i type}, const char *LE_NONNULL  {\i userName}, const char *LE_NONNULL  {\i password})}}
\par
{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set authentication property\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
The process exits, if userName or password are NULL when type is not PA_MDC_AUTH_NONE\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
The process exits, if an invalid profile object is given \par}
If userName is too long (max USER_NAME_MAX_LEN digits), it is a fatal error, the function will not return. \par
If password is too long (max PASSWORD_NAME_MAX_LEN digits), it is a fatal error, the function will not return. \par
Both PAP and CHAP authentication can be set for 3GPP network: in this case, the device decides which authentication procedure is performed. For example, the device can have a policy to select the most secure authentication mechanism. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i type} \cell }{Authentication type \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i userName} \cell }{UserName used by authentication \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i password} \cell }{Password used by authentication \cell }
{\row }
}
}}
{\xe \v le_mdc_SetDefaultAPN\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_SetDefaultAPN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_SetDefaultAPN ({\b le_mdc_ProfileRef_t}  {\i profileRef})}}
\par
{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Access Point Name (APN) for the given profile according to the SIM identification number (ICCID). If no APN is found using the ICCID, fall back on the home network (MCC/MNC) to determine the default APN.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_BAD_PARAMETER if an input parameter is not valid\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
}
}}
{\xe \v le_mdc_SetPDP\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_SetPDP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_SetPDP ({\b le_mdc_ProfileRef_t}  {\i profileRef}, {\b le_mdc_Pdp_t}  {\i pdp})}}
\par
{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Packet Data Protocol (PDP) for the given profile.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_BAD_PARAMETER if the PDP is not supported\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT if the data session is currently connected for the given profile\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Query this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i pdp} \cell }{The Packet Data Protocol \cell }
{\row }
}
}}
{\xe \v le_mdc_SetServerDisconnectHandler\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_SetServerDisconnectHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void le_mdc_SetServerDisconnectHandler ({\b le_mdc_DisconnectHandler_t}  {\i disconnectHandler}, void *  {\i contextPtr})}}
\par
{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set handler called when server disconnection is detected.\par
When a server connection is lost, call this handler then exit with LE_FATAL. If a program wants to continue without exiting, it should call longjmp() from inside the handler. \par
}}
{\xe \v le_mdc_StartBytesCounter\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_StartBytesCounter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_StartBytesCounter (void )}}
\par
{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start collecting received/transmitted data flow statistics\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors \par}
}}}
{\xe \v le_mdc_StartSession\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_StartSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_StartSession ({\b le_mdc_ProfileRef_t}  {\i profileRef})}}
\par
{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start profile data session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_BAD_PARAMETER if input parameter is incorrect\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_DUPLICATE if the data session is already connected for the given profile\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for other failures\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Start data session for this profile object \cell }
{\row }
}
}}
{\xe \v le_mdc_StartSessionAsync\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_StartSessionAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void le_mdc_StartSessionAsync ({\b le_mdc_ProfileRef_t}  {\i profileRef}, {\b le_mdc_SessionHandlerFunc_t}  {\i handlerPtr}, void *  {\i contextPtr})}}
\par
{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start profile data session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Start data session for this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i handlerPtr} \cell }{Handler for start data session result \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i contextPtr} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_StopBytesCounter\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_StopBytesCounter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_StopBytesCounter (void )}}
\par
{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop collecting received/transmitted data flow statistics\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for all other errors \par}
}}}
{\xe \v le_mdc_StopSession\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_StopSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_StopSession ({\b le_mdc_ProfileRef_t}  {\i profileRef})}}
\par
{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop profile data session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK on success\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_BAD_PARAMETER if the input parameter is not valid\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT for other failures\par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The MT-PDP context activation feature is not supported on all platforms. Please refer to {\b Mobile Terminated PDP context} section for full details. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Stop data session for this profile object \cell }
{\row }
}
}}
{\xe \v le_mdc_StopSessionAsync\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_StopSessionAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void le_mdc_StopSessionAsync ({\b le_mdc_ProfileRef_t}  {\i profileRef}, {\b le_mdc_SessionHandlerFunc_t}  {\i handlerPtr}, void *  {\i contextPtr})}}
\par
{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop profile data session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The process exits, if an invalid profile object is given \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i profileRef} \cell }{Stop data session for this profile object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i handlerPtr} \cell }{Handler for stop data session result \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i contextPtr} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mdc_TryConnectService\:le_mdc_interface.h}
{\xe \v le_mdc_interface.h\:le_mdc_TryConnectService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mdc_TryConnectService (void )}}
\par
{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Try to connect the current client thread to the service providing this API. Return with an error if the service is not available.\par
For each thread that wants to use this API, either ConnectService or TryConnectService must be called before any other functions in this API. Normally, ConnectService is automatically called for the main thread, but not for any other thread. For details, see {\b Client-specific Functions}.\par
This function is created automatically.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK if the client connected successfully to the service.\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_UNAVAILABLE if the server is not currently offering the service to which the client is bound.\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_NOT_PERMITTED if the client interface is not bound to any service (doesn't have a binding).\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_COMM_ERROR if the Service Directory cannot be reached. \par}
}}}
}