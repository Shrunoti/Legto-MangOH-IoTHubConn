ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_ipc_drv.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_IPC_Drv_LockRelease,"ax",%progbits
  20              		.align	2
  21              		.global	Cy_IPC_Drv_LockRelease
  22              		.code	16
  23              		.thumb_func
  24              		.type	Cy_IPC_Drv_LockRelease, %function
  25              	Cy_IPC_Drv_LockRelease:
  26              	.LFB55:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\ipc\\cy_ipc_drv.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \file cy_ipc_drv.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \version 1.10.1
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *  \breif
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   IPC Driver - This source file contains the low-level driver code for
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   the IPC hardware.
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ********************************************************************************
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** #include "cy_ipc_drv.h"
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /*******************************************************************************
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Function Name: Cy_IPC_Drv_LockRelease
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ****************************************************************************//**
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The function is used to release an IPC channel from the locked state.
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The function also has a way to specify through a parameter which IPC
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * interrupts must be notified during the release event.
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param base
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This parameter is a handle that represents the base address of the registers
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * of the IPC channel.
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The parameter is generally returned from a call to the \ref
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 2


  31:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_GetIpcBaseAddress.
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param releaseEventIntr
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Bit encoded list of IPC interrupt lines that are triggered by a release event.
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \return   Status of the operation
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_SUCCESS: The function executed successfully and the IPC channel
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       was released.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_ERROR: The IPC channel was not acquired before the
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       function call.
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \funcusage
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgPtr
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** cy_en_ipcdrv_status_t Cy_IPC_Drv_LockRelease (IPC_STRUCT_Type* base, uint32_t releaseEventIntr)
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** {
  28              		.loc 1 47 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
  42              	.LBB16:
  43              	.LBB17:
  44              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\ipc\\cy_ipc_drv.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \file cy_ipc_drv.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \version 1.10.1
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Provides an API declaration of the IPC driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #ifndef CY_IPC_DRV_H
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_H
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc Inter Process Communication (IPC)
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The inter-processor communication (IPC) driver provides a safe and reliable
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * method to transfer data between CPUs. Hardware locking ensures that only one
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 3


  24:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * device can acquire and transfer data at a time so no data is lost or
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * overwritten by asynchronous processes or CPUs.
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * There are three parts to the API:
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Driver-level (DRV) API - used internally by Semaphore and Pipe levels
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Pipe-level (PIPE) API - establishes a communication channel between
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       processors
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Semaphore-level (SEMA) API - enables users to set and clear flags to
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       synchronize operations.
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Firmware does not need to use the DRV API. It can implement IPC functionality
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * entirely with the PIPE and SEMA APIs.
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_background Background
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC is implemented in hardware as a collection of individual communication
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channels, each with a set of 32-bit registers. The IPC design implements a set
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of interrupts that enable each processor to notify the other that data is
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * available, or has been processed. There is also a locking mechanism that
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * allows only one CPU to gain access at a time.
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The Driver-level API manages each channel's registers to implement IPC
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * functionality. For information on the IPC registers, see the IPC chapter of
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the Technical Reference Manual (TRM).
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * At the hardware level, communication is a five-step process.
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The sending processor acquires a channel
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  It puts data into the channel
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The sender generates a notify event (interrupt)
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The receiving processor identifies the sender and retrieves the data
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The receiving processor generates a release event (interrupt)
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \image html ipc_driver.png
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * These transactions are handled transparently by the DRV-level API. Use the
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * PIPE and SEMA layers of the API to implement communication in your application.
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The data transferred is limited to a single 32-bit value. As implemented by
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the PIPE API, that value is a pointer to a data structure of arbitrary size
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and complexity.
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_overview Overview
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The Pipe is the key element in the PDL design. A pipe is typically a
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * full-duplex communication channel between CPU cores. A pipe allows a single
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * conduit to transfer messages or data to and from multiple processes or CPUs.
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe has two endpoints, one on each core. Each endpoint contains a dedicated
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC channel and an interrupt. IPC channels 0-7 and IPC interrupts 0-7 are
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * reserved for system use.
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The pipe also contains the number of clients it supports, and for each client
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a callback function. So the pipe can service a number of clients, each with a
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * separate callback function, on either endpoint. The number of clients a pipe
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * supports is the sum of each endpoint's clients.
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This design enables any number of processes on the sending core to put
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * arbitrary data into a single pipe. The first element of that data is the
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 4


  81:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * client ID of the client that should handle the data.
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An interrupt notifies the receiving core that data is available. The receiving
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * core parses the data to identify the client, and then dispatches the event to
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the appropriate client via the client callback function. An interrupt notifies
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the sending core that the receiver is finished. In this way a single pipe can
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * manage arbitrary data transfers between cores with data flowing in either
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * direction.
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \image html ipc_ints.png
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The application can use semaphores to control access to shared resources, as
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * required by the application's logic.
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The PDL provides two specific files that set up default IPC functionality.
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * They are cy_ipc_config.h and cy_ipc_config.c. You can modify these files based
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * on the requirements of your design. If you use PSoC Creator as a development
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * environment, it will not overwrite your changes when you generate the
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * application or build your code.
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_pipe_layer PIPE layer
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe is a communication channel between two endpoints. PSoC 6 devices support
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * 16 IPC channels, and 16 IPC interrupts, each numbered 0-15. IPC Channels 0-7
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and IPC interrupts 0-7 are reserved for system use. Channels 8-15 and
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * interrupts 8-15 are available for application use.
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A full duplex pipe uses two IPC channels, one per endpoint. Each endpoint
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * specifies all the information required to process a message (either sent or
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * received). Each endpoint is configured to use an IPC channel, and an IPC
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * interrupt. Common practice is to use the interrupt with the same number as
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC channel. However, IPC Interrupts are not directly associated with the
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC channels, so any channel can use any interrupt.  Any IPC channel can
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * trigger 0, 1 or all the IPC interrupts at once, depending on the Notify or
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Release masks used.
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * It is also possible to set up a one-directional pipe, using a single IPC
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channel. In this design one processor is always the sender, and the other is
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * always the receiver. However, there are still two endpoints.
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe supports an arbitrary number of clients with an array of callback
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * functions, one per client. The client ID is the index number into the array
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * for the client. After a pipe is configured and initialized, the application
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * calls Cy_IPC_Pipe_RegisterCallback() once per client to register each client's
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * callback function. Multiple clients can use the same callback function. The
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * endpoints in a pipe share the callback array.
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Use Cy_IPC_Pipe_SendMessage() to send data. You specify both the "to" and
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * "from" endpoints, and a callback function to be used when the data transfer is
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * complete. The data is a 32-bit void pointer. The data pointed to is arbitrary,
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and can be an array, a structure, or a location in memory. The only limitation
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * is that the first element of the data must be a 32-bit unsigned word containing
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a client ID number. The ID number is the index into the callback array.
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * When a message is sent, the receiving endpoint's interrupt handler is called.
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The ISR can perform any task required by the design. However, as part of its
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * function it calls \ref Cy_IPC_Pipe_ExecCallback. This function retrieves the
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 5


 138:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * client ID from the data and calls the associated callback function.
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The user-supplied callback function handles the data in whatever way is
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * appropriate based on the application logic.
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * After the callback function is returned by the receiver, it invokes the release
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * callback function defined by the sender of the message.
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_sema_layer SEMA Layer
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A semaphore is a flag the application uses to control access to a shared
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * resource. The SEMA-level API uses an IPC channel to implement
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * semaphores. Startup code sets up a default semaphore system. The
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * default system creates an array of 128 semaphores (four 32-bit values).
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Semaphores 0-15 are reserved for system use. See
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Configuration Considerations - SEMA.
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Functions are available to initialize the semaphore system, to set or
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * clear a semaphore, or to get the semaphore's current status. Application
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * logic uses SEMA functions to relate a particular semaphore to a particular
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * shared resource, and set, clear, or check the flag when accessing the
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * shared resource.
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_cypipe Configuration Considerations - CYPIPE
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * There are none. The cy_ipc_config files set up the required CYPIPE for system
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * use. Do not modify the CYPIPE. It uses IPC channels 5 and 6 to implement full
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * duplex communication between cores. On the CM0+ the notify interrupt is
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * assigned to NVIC IRQn 27. See System Interrupt (SysInt) for background.
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * To create your own pipe you should make 3 steps:
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Define pipe callbacks processing interrupt handler
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Define your pipe configuration by cy_stc_ipc_pipe_config_t type structure
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Call Cy_IPC_Pipe_Init() to initialize your pipe on both cores
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_sema Configuration Considerations - SEMA
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Startup code calls Cy_IPC_SystemSemaInit() (in cy_ipc_config.c) to set up
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * semaphore functionality. This function calls the PDL init function
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Sema_Init() with default values. By default the semaphore system
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * uses IPC channel 4, and creates 128 semaphores. Do <b>not</b> change the IPC
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channel. You can change the number of semaphores.
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * To change the number of semaphores, modify this line of code in cy_ipc_config.h.
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \code
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * #define CY_IPC_SEMA_COUNT               (uint32_t)(128u)
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \endcode
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The file cy_ipc_config.c declares array ipcSemaArray to hold the semaphore
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * flags based on the size defined for this symbol. Use increments of 32. You
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * must have at least 32 semaphores. Semaphores 0-15 are reserved for
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * system use. Your application can use semaphores greater than 15.
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_more_information More Information
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_SystemSemaInit() and Cy_IPC_SystemPipeInit() functions are called in the
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * SystemInit function. If the default startup file is not used, or SystemInit is
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 6


 195:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * not called in your project, call the following three functions prior to
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * executing any flash or EmEEPROM write or erase operation. For example:
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_IPC_SystemSemaInit()
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_IPC_SystemPipeInit()
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_Flash_Init()
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Also Cy_IPC_SystemPipeInit function is called to support BLE host/controller
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * communication.
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * See the technical reference manual(TRM) for more information on the IPC.
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_MISRA MISRA-C Compliance
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * <table class="doxtable">
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>MISRA Rule</th>
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>Rule Class (Required/Advisory)</th>
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>Rule Description</th>
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th style="width: 50%;">Description of Deviation(s)</th>
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>10.3</td>
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>R</td>
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The value of a complex expression of integer type shall be cast
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         only to a type of the same signedness that is no wider than the underlying
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         type of the expression.</td>
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The cast from integer to enumeration value is used to calculate
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         the interrupt vector source from the integer number of the IPC interrupt
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         structure, so there is no way to avoid this cast.</td>
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>11.4</td>
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>A</td>
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>A cast should not be performed between a pointer to the void to a
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         pointer to the object type.</td>
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The cast from the void to pointer and vice versa is used to transmit
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         data via the \ref group_ipc channel by exchanging the pointer. We
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         exchange only one pointer, so there is no way to avoid this cast.</td>
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * </table>
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_changelog Changelog
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * <table class="doxtable">
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.10.1</td>
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Updated description of the \ref Cy_IPC_Pipe_Init,  
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         \ref Cy_IPC_Pipe_EndpointInit, \ref Cy_IPC_Sema_Set functions.
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         Added / updated code snippets.
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     </td>
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Documentation update and clarification</td>
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.10</td>
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Added support for more IPC structures</td>
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>New device support</td>
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 7


 252:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.0</td>
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Initial version</td>
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td></td>
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * </table>
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_drv IPC driver layer (IPC_DRV)
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The functions of this layer are used in the higher IPC levels
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   (Semaphores and Pipes).
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Users should not call any of these IPC functions directly.
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_macros Macros
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Macro definitions are used in the driver
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_functions Functions
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Functions are used in the driver
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_data_structures Data Structures
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Data structures are used in the driver
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_enums Enumerated Types
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Enumerations are used in the driver
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \}
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_sema IPC semaphores layer (IPC_SEMA)
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_pipe IPC pipes layer (IPC_PIPE)
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /******************************************************************************/
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* Include files                                                              */
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /******************************************************************************/
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "syslib/cy_syslib.h"
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "cy_device_headers.h"
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "cy_ipc_config.h"
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include <stddef.h>
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_macros
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Driver major version */
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MAJOR       1
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Driver minor version */
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MINOR       10
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Defines a value to indicate that no notification events are needed */
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_NO_NOTIFICATION         (uint32_t)(0x00000000ul)
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* Error Code constants */
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID CY_PDL_DRV_ID(0x22u)  /**< Software PDL driver ID for IPC */
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 8


 309:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function status codes */
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_INFO    (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_INFO )
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function warning return values */
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_WARNING (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_WARNING)
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function error return values */
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_ERROR   (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_ERROR)
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Converts the IPC interrupt channel number to interrupt vector */
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_INTR_NUM_TO_VECT(x)         ((int32_t)cpuss_interrupts_ipc_0_IRQn + (x))
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_macros */
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* end of definition in device.h */
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_enums
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a list of ENUMs used for function return status.
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** typedef enum
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     /** Function was successfully executed */
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_IPC_DRV_SUCCESS      = (0x00u),
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     /** Function was not executed due to an error.
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****         Typical conditions for the error explained
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****         in the function description */
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_IPC_DRV_ERROR        = ( CY_IPC_ID_ERROR + 1ul),
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** } cy_en_ipcdrv_status_t;
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_enums */
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #ifdef __cplusplus
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** extern "C" {
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #endif
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \cond INTERNAL */
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue);
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base);
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask);
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask);
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \endcond */
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_functions
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type*       Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex);
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type*  Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex);
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 9


 366:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE  cy_en_ipcdrv_status_t Cy_IPC_Drv_LockAcquire (IPC_STRUCT_Type const * base);
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_LockRelease (IPC_STRUCT_Type * base, uint32_t releaseEventIntr)
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE bool     Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base);
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base);
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_SendMsgWord (IPC_STRUCT_Type * base, uint32_t notifyEventIntr, 
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_ReadMsgWord (IPC_STRUCT_Type const * base, uint32_t * message);
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_SendMsgPtr (IPC_STRUCT_Type* base, uint32_t notify
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_ReadMsgPtr (IPC_STRUCT_Type const * base, void ** 
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type * base,
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcNotifyMa
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask (IPC_INTR_STRUCT_Type const * base);
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base);
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus (IPC_INTR_STRUCT_Type const * base);
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterrupt (IPC_INTR_STRUCT_Type * base,
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcNotifyMa
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ClearInterrupt (IPC_INTR_STRUCT_Type * base,
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcNotifyMa
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIpcBaseAddress
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function takes an IPC channel index as a parameter and returns the base
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * address the IPC registers corresponding to the IPC channel.
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIndex does not exceed the
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * limits.
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcIndex
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Represents the number of IPC structure. This is converted to the base address of
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC channel registers.
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC registers.
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgWord
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type* Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex)
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1((uint32_t)CY_IPC_CHANNELS > ipcIndex);
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( (IPC_STRUCT_Type*) ( &IPC->STRUCT[ipcIndex] ) );
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIntrBaseAddr
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function takes an IPC interrupt structure index and returns the base
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * address of the IPC interrupt registers corresponding to the IPC Interrupt.
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 10


 423:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIntrIndex does not exceed the
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * limits.
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcIntrIndex
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Represents the number of IPC interrupt structure. This is converted to the
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * base address of the IPC interrupt registers.
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC interrupt registers.
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type* Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex)
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1((uint32_t)CY_IPC_INTERRUPTS > ipcIntrIndex);
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( (IPC_INTR_STRUCT_Type*) ( &IPC->INTR_STRUCT[ipcIntrIndex] ) );
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterruptMask
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to set the interrupt mask for an IPC Interrupt.
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The mask sets release or acquire notification events for all IPC channels.
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcNotifyMask
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type* base,
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                               uint32_t ipcReleaseMask, uint32_t ipcNotifyMask)
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcNotifyMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     base->INTR_MASK = _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_NOTIFY,  ipcNotifyMask) |
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_RELEASE, ipcReleaseMask);
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptMask
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 11


 480:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the interrupt mask.
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask(IPC_INTR_STRUCT_Type const * base)
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return (base->INTR_MASK);
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatusMasked
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the active unmasked interrupt. This function
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * can be used in the interrupt service routine to find which source triggered
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the interrupt.
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base)
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return (base->INTR_MASKED);
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatus
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 12


 537:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the pending interrupts. Note that this read is
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * an unmasked read of the interrupt status. Interrupt sources read as active by
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * this function would generate interrupts only if they were not masked.
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus(IPC_INTR_STRUCT_Type const * base)
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return (base->INTR);
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterrupt
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to set the interrupt source. This function can be used
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * to activate interrupts through software.
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note That interrupt sources set using this interrupt would generate interrupts
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * only if they are not masked.
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcNotifyMask
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SetInterrupt
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask, 
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcNotifyMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     base->INTR_SET =  _VAL2FLD( IPC_INTR_STRUCT_INTR_NOTIFY,  ipcNotifyMask )  |
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask );
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 13


 594:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ClearInterrupt
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to clear the interrupt source. Use this function to clear
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a pending interrupt source in the interrupt status.
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcNotifyMask
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ClearInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcNotifyMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     base->INTR =  _VAL2FLD(IPC_INTR_STRUCT_INTR_NOTIFY,  ipcNotifyMask) |
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                   _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask);
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     (void)base->INTR;  /* Read the register to flush the cache */
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_functions */
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc */
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_AcquireNotify
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function generates a notify event by IPC interrupt structures.
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt structures that are triggered
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * by a notification. Bit number correspond to number of the IPC interrupt
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * structure.
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 14


 651:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     base->NOTIFY = _VAL2FLD(IPC_STRUCT_NOTIFY_INTR_NOTIFY, notifyEventIntr);
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReleaseNotify
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function generates a notify event to an IPC interrupt structure.
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered by a notification.
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgWord
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     base->RELEASE = _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, notifyEventIntr);
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_WriteDataValue
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function writes a value to the DATA register of the IPC channel.
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param dataValue
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value to be written.
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue)
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****       base->DATA = dataValue;
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 15


 708:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReadDataValue
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function reads a value from the DATA register of the IPC channel.
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value from DATA register.
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base)
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return (base->DATA);
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_IsLockAcquired
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function is used to test the status of an IPC channel. The function
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * tells the reader if the IPC channel was in the locked or released state.
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Status for the function:
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   true:  The IPC channel is in the Locked state.
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   false: The IPC channel is in the Released state.
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE bool Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base)
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( 0u != _FLD2VAL(IPC_STRUCT_ACQUIRE_SUCCESS, base->LOCK_STATUS) );
  45              		.loc 2 755 0
  46 0006 0369     		ldr	r3, [r0, #16]
  47              	.LVL2:
  48              	.LBE17:
  49              	.LBE16:
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     cy_en_ipcdrv_status_t retStatus;
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     /* Check to make sure the IPC is Acquired */
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     if( Cy_IPC_Drv_IsLockAcquired(base) )
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 16


  50              		.loc 1 51 0
  51 0008 002B     		cmp	r3, #0
  52 000a 0ADA     		bge	.L4
  53              	.LVL3:
  54              	.LBB18:
  55              	.LBB19:
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     base->RELEASE = _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, notifyEventIntr);
  56              		.loc 2 679 0
  57 000c 0B0C     		lsrs	r3, r1, #16
  58 000e 03D0     		beq	.L3
  59 0010 0549     		ldr	r1, .L5
  60              	.LVL4:
  61 0012 0648     		ldr	r0, .L5+4
  62              	.LVL5:
  63 0014 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  64              	.LVL6:
  65              	.L3:
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
  66              		.loc 2 680 0
  67 0018 2D04     		lsls	r5, r5, #16
  68              	.LVL7:
  69 001a 2D0C     		lsrs	r5, r5, #16
  70 001c 6560     		str	r5, [r4, #4]
  71              	.LVL8:
  72              	.LBE19:
  73              	.LBE18:
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* The IPC was acquired, release the IPC channel */
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         Cy_IPC_Drv_ReleaseNotify(base, releaseEventIntr);
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_SUCCESS;
  74              		.loc 1 56 0
  75 001e 0020     		movs	r0, #0
  76 0020 00E0     		b	.L2
  77              	.LVL9:
  78              	.L4:
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     else   /* The IPC channel was already released (not acquired) */
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_ERROR;
  79              		.loc 1 60 0
  80 0022 0348     		ldr	r0, .L5+8
  81              	.LVL10:
  82              	.L2:
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     return (retStatus);
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** }
  83              		.loc 1 64 0
  84              		@ sp needed
  85              	.LVL11:
  86 0024 70BD     		pop	{r4, r5, r6, pc}
  87              	.L6:
  88 0026 C046     		.align	2
  89              	.L5:
  90 0028 A7020000 		.word	679
  91 002c 00000000 		.word	.LC0
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 17


  92 0030 01008A00 		.word	9043969
  93              		.cfi_endproc
  94              	.LFE55:
  95              		.size	Cy_IPC_Drv_LockRelease, .-Cy_IPC_Drv_LockRelease
  96              		.section	.text.Cy_IPC_Drv_SendMsgWord,"ax",%progbits
  97              		.align	2
  98              		.global	Cy_IPC_Drv_SendMsgWord
  99              		.code	16
 100              		.thumb_func
 101              		.type	Cy_IPC_Drv_SendMsgWord, %function
 102              	Cy_IPC_Drv_SendMsgWord:
 103              	.LFB56:
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /*******************************************************************************
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Function Name: Cy_IPC_Drv_SendMsgWord
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ****************************************************************************//**
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This function is used to send a 32-bit word message through an IPC channel.
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The function also has an associated notification field that will let the
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * message notify one or multiple IPC interrupts. The IPC channel is locked and
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * remains locked after the function returns.  The receiver of the message should
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * release the channel.
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param base
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This parameter is a handle that represents the base address of the registers
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * of the IPC channel.
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The parameter is generally returned from a call to the \ref
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_GetIpcBaseAddress.
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param notifyEventIntr
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Bit encoded list of IPC interrupt lines that are triggered by a notification.
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param message
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The message word that is the data placed in the IPC data register.
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \return   Status of the operation:
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_SUCCESS: The send operation was successful.
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_ERROR: The IPC channel is unavailable because it is already locked.
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \funcusage
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgWord
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** cy_en_ipcdrv_status_t  Cy_IPC_Drv_SendMsgWord (IPC_STRUCT_Type* base, uint32_t notifyEventIntr, uin
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** {
 104              		.loc 1 98 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              	.LVL12:
 109 0000 70B5     		push	{r4, r5, r6, lr}
 110              		.cfi_def_cfa_offset 16
 111              		.cfi_offset 4, -16
 112              		.cfi_offset 5, -12
 113              		.cfi_offset 6, -8
 114              		.cfi_offset 14, -4
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 18


 115 0002 0500     		movs	r5, r0
 116 0004 0C00     		movs	r4, r1
 117              	.LVL13:
 118              	.LBB20:
 119              	.LBB21:
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetLockStatus
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function is used to get the status of an IPC channel.
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value from LOCK_STATUS register.
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetLockStatus
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base)
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return (base->LOCK_STATUS);
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractAcquireMask
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function extracts an Acquire mask part from full interrupt mask value.
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param intMask
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Acquire mask value.
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask)
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_NOTIFY, intMask);
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractReleaseMask
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function extracts a Release mask part from full interrupt mask value.
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 19


 808:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param intMask
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Release mask value.
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask)
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_RELEASE, intMask);
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SendMsgPtr
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to send a message pointer through an IPC channel.
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The message structure may hold a generic pointer that may contain the address
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of any user data type or structure. This parameter could be a pointer to a 32-bit
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * integer, an array, or even a data structure defined in the user code. This
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * function acts as a transfer engine for sending the pointer. Any memory
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * management of the pointer allocation and deallocation is up to the application
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * code.
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function also has an associated notification field that will let the
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * message notify one or multiple interrupts.
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered during the release
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * action.
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param msgPtr
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The message pointer that is being sent over the IPC channel.
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return   Status of the operation:
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The send operation was successful.
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The IPC channel is unavailable because
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                               it is already locked.
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgPtr
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t  Cy_IPC_Drv_SendMsgPtr(IPC_STRUCT_Type* base, uint32_t notify
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(NULL != msgPtr);
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return Cy_IPC_Drv_SendMsgWord(base, notifyEventIntr, (uint32_t)msgPtr);
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 20


 865:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReadMsgPtr
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read a 32-bit pointer message through an IPC channel.
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param msgPtr
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Pointer variable to hold the data pointer that is being read from the IPC
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channel.
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return Status of the operation
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The function executed successfully and the IPC
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       was acquired.
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The function encountered an error because the IPC
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       channel was already in a released state meaning the data
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       in it is invalid.
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgPtr
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE  cy_en_ipcdrv_status_t  Cy_IPC_Drv_ReadMsgPtr (IPC_STRUCT_Type const * base, void *
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(NULL != msgPtr);
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return Cy_IPC_Drv_ReadMsgWord(base, (uint32_t *)msgPtr);
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_LockAcquire
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to acquire the IPC channel.
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return   Status of the operation
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The IPC was successfully acquired
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The IPC was not acquired because it was already acquired
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       by another master
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_LockAcquire (IPC_STRUCT_Type const * base)
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 21


 922:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( 0ul != _FLD2VAL(IPC_STRUCT_ACQUIRE_SUCCESS, base->ACQUIRE)) ? CY_IPC_DRV_SUCCESS : CY_
 120              		.loc 2 923 0
 121 0006 0368     		ldr	r3, [r0]
 122 0008 002B     		cmp	r3, #0
 123 000a 01DA     		bge	.L11
 124 000c 0023     		movs	r3, #0
 125 000e 00E0     		b	.L8
 126              	.L11:
 127 0010 084B     		ldr	r3, .L13
 128              	.L8:
 129              	.LVL14:
 130              	.LBE21:
 131              	.LBE20:
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     cy_en_ipcdrv_status_t retStatus;
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     if( CY_IPC_DRV_SUCCESS == Cy_IPC_Drv_LockAcquire(base) )
 132              		.loc 1 101 0
 133 0012 002B     		cmp	r3, #0
 134 0014 0BD1     		bne	.L12
 135              	.LVL15:
 136              	.LBB22:
 137              	.LBB23:
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 138              		.loc 2 704 0
 139 0016 EA60     		str	r2, [r5, #12]
 140              	.LVL16:
 141              	.LBE23:
 142              	.LBE22:
 143              	.LBB24:
 144              	.LBB25:
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     base->NOTIFY = _VAL2FLD(IPC_STRUCT_NOTIFY_INTR_NOTIFY, notifyEventIntr);
 145              		.loc 2 654 0
 146 0018 230C     		lsrs	r3, r4, #16
 147 001a 03D0     		beq	.L10
 148 001c 0649     		ldr	r1, .L13+4
 149              	.LVL17:
 150 001e 0748     		ldr	r0, .L13+8
 151              	.LVL18:
 152 0020 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 153              	.LVL19:
 154              	.L10:
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 155              		.loc 2 655 0
 156 0024 2404     		lsls	r4, r4, #16
 157              	.LVL20:
 158 0026 240C     		lsrs	r4, r4, #16
 159 0028 AC60     		str	r4, [r5, #8]
 160              	.LVL21:
 161              	.LBE25:
 162              	.LBE24:
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* If the channel was acquired, send the message. */
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         Cy_IPC_Drv_WriteDataValue(base, message);
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         Cy_IPC_Drv_AcquireNotify(base, notifyEventIntr);
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 22


 108:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_SUCCESS;
 163              		.loc 1 108 0
 164 002a 0020     		movs	r0, #0
 165 002c 00E0     		b	.L9
 166              	.LVL22:
 167              	.L12:
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     else
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* Channel was already acquired, return Error */
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_ERROR;
 168              		.loc 1 113 0
 169 002e 0148     		ldr	r0, .L13
 170              	.LVL23:
 171              	.L9:
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     return (retStatus);
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** }
 172              		.loc 1 116 0
 173              		@ sp needed
 174              	.LVL24:
 175 0030 70BD     		pop	{r4, r5, r6, pc}
 176              	.L14:
 177 0032 C046     		.align	2
 178              	.L13:
 179 0034 01008A00 		.word	9043969
 180 0038 8E020000 		.word	654
 181 003c 00000000 		.word	.LC0
 182              		.cfi_endproc
 183              	.LFE56:
 184              		.size	Cy_IPC_Drv_SendMsgWord, .-Cy_IPC_Drv_SendMsgWord
 185              		.section	.text.Cy_IPC_Drv_ReadMsgWord,"ax",%progbits
 186              		.align	2
 187              		.global	Cy_IPC_Drv_ReadMsgWord
 188              		.code	16
 189              		.thumb_func
 190              		.type	Cy_IPC_Drv_ReadMsgWord, %function
 191              	Cy_IPC_Drv_ReadMsgWord:
 192              	.LFB57:
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /*******************************************************************************
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Function Name: Cy_IPC_Drv_ReadMsgWord
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ****************************************************************************//**
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This function is used to read a 32-bit word message through an IPC channel.
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This function assumes that the channel is locked (for a valid message).
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * If the channel is not locked, the message is invalid.  The user must call
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_Release() function after reading the message to release the
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * IPC channel.
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param base
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This parameter is a handle that represents the base address of the registers
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * of the IPC channel.
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The parameter is generally returned from a call to the \ref
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_GetIpcBaseAddress.
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 23


 135:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param message
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *  A variable where the read data is copied.
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \return  Status of the operation
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_SUCCESS: The function executed successfully and the IPC
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       was acquired.
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_ERROR:   The function encountered an error because the IPC
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       channel was already in a released state, meaning the data
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       may be invalid.
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \funcusage
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgWord
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** cy_en_ipcdrv_status_t  Cy_IPC_Drv_ReadMsgWord (IPC_STRUCT_Type const * base, uint32_t * message)
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** {
 193              		.loc 1 150 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL25:
 198 0000 70B5     		push	{r4, r5, r6, lr}
 199              		.cfi_def_cfa_offset 16
 200              		.cfi_offset 4, -16
 201              		.cfi_offset 5, -12
 202              		.cfi_offset 6, -8
 203              		.cfi_offset 14, -4
 204 0002 0500     		movs	r5, r0
 205 0004 0C1E     		subs	r4, r1, #0
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     cy_en_ipcdrv_status_t retStatus;
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     CY_ASSERT_L1(NULL != message);
 206              		.loc 1 153 0
 207 0006 03D1     		bne	.L16
 208              		.loc 1 153 0 is_stmt 0 discriminator 1
 209 0008 9921     		movs	r1, #153
 210              	.LVL26:
 211 000a 0648     		ldr	r0, .L19
 212              	.LVL27:
 213 000c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 214              	.LVL28:
 215              	.L16:
 216              	.LBB26:
 217              	.LBB27:
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 218              		.loc 2 755 0 is_stmt 1
 219 0010 2B69     		ldr	r3, [r5, #16]
 220              	.LVL29:
 221              	.LBE27:
 222              	.LBE26:
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     if ( Cy_IPC_Drv_IsLockAcquired(base) )
 223              		.loc 1 155 0
 224 0012 002B     		cmp	r3, #0
 225 0014 03DA     		bge	.L18
 226              	.LVL30:
 227              	.LBB28:
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 24


 228              	.LBB29:
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 229              		.loc 2 728 0
 230 0016 EB68     		ldr	r3, [r5, #12]
 231              	.LVL31:
 232              	.LBE29:
 233              	.LBE28:
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* The channel is locked; message is valid. */
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         *message = Cy_IPC_Drv_ReadDataValue(base);
 234              		.loc 1 158 0
 235 0018 2360     		str	r3, [r4]
 236              	.LVL32:
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_SUCCESS;
 237              		.loc 1 160 0
 238 001a 0020     		movs	r0, #0
 239 001c 00E0     		b	.L17
 240              	.LVL33:
 241              	.L18:
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     else
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* The channel is not locked so channel is invalid. */
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_ERROR;
 242              		.loc 1 165 0
 243 001e 0248     		ldr	r0, .L19+4
 244              	.L17:
 245              	.LVL34:
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     return(retStatus);
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** }
 246              		.loc 1 168 0
 247              		@ sp needed
 248              	.LVL35:
 249              	.LVL36:
 250 0020 70BD     		pop	{r4, r5, r6, pc}
 251              	.L20:
 252 0022 C046     		.align	2
 253              	.L19:
 254 0024 40000000 		.word	.LC3
 255 0028 01008A00 		.word	9043969
 256              		.cfi_endproc
 257              	.LFE57:
 258              		.size	Cy_IPC_Drv_ReadMsgWord, .-Cy_IPC_Drv_ReadMsgWord
 259              		.section	.rodata.str1.4,"aMS",%progbits,1
 260              		.align	2
 261              	.LC0:
 262 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 262      72617465 
 262      645F536F 
 262      75726365 
 262      5C50536F 
 263 002e 6970635C 		.ascii	"ipc\\cy_ipc_drv.h\000"
 263      63795F69 
 263      70635F64 
 263      72762E68 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 25


 263      00
 264 003f 00       		.space	1
 265              	.LC3:
 266 0040 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 266      72617465 
 266      645F536F 
 266      75726365 
 266      5C50536F 
 267 006e 6970635C 		.ascii	"ipc\\cy_ipc_drv.c\000"
 267      63795F69 
 267      70635F64 
 267      72762E63 
 267      00
 268              		.text
 269              	.Letext0:
 270              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 271              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 272              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_ipc.h"
 273              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 274              		.section	.debug_info,"",%progbits
 275              	.Ldebug_info0:
 276 0000 5B040000 		.4byte	0x45b
 277 0004 0400     		.2byte	0x4
 278 0006 00000000 		.4byte	.Ldebug_abbrev0
 279 000a 04       		.byte	0x4
 280 000b 01       		.uleb128 0x1
 281 000c 14030000 		.4byte	.LASF43
 282 0010 0C       		.byte	0xc
 283 0011 7D020000 		.4byte	.LASF44
 284 0015 79010000 		.4byte	.LASF45
 285 0019 00000000 		.4byte	.Ldebug_ranges0+0
 286 001d 00000000 		.4byte	0
 287 0021 00000000 		.4byte	.Ldebug_line0
 288 0025 02       		.uleb128 0x2
 289 0026 01       		.byte	0x1
 290 0027 06       		.byte	0x6
 291 0028 A5000000 		.4byte	.LASF0
 292 002c 02       		.uleb128 0x2
 293 002d 01       		.byte	0x1
 294 002e 08       		.byte	0x8
 295 002f DE000000 		.4byte	.LASF1
 296 0033 02       		.uleb128 0x2
 297 0034 02       		.byte	0x2
 298 0035 05       		.byte	0x5
 299 0036 D5020000 		.4byte	.LASF2
 300 003a 02       		.uleb128 0x2
 301 003b 02       		.byte	0x2
 302 003c 07       		.byte	0x7
 303 003d CB000000 		.4byte	.LASF3
 304 0041 02       		.uleb128 0x2
 305 0042 04       		.byte	0x4
 306 0043 05       		.byte	0x5
 307 0044 FF020000 		.4byte	.LASF4
 308 0048 03       		.uleb128 0x3
 309 0049 13010000 		.4byte	.LASF9
 310 004d 03       		.byte	0x3
 311 004e 41       		.byte	0x41
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 26


 312 004f 53000000 		.4byte	0x53
 313 0053 02       		.uleb128 0x2
 314 0054 04       		.byte	0x4
 315 0055 07       		.byte	0x7
 316 0056 B9000000 		.4byte	.LASF5
 317 005a 02       		.uleb128 0x2
 318 005b 08       		.byte	0x8
 319 005c 05       		.byte	0x5
 320 005d 6A020000 		.4byte	.LASF6
 321 0061 02       		.uleb128 0x2
 322 0062 08       		.byte	0x8
 323 0063 07       		.byte	0x7
 324 0064 62010000 		.4byte	.LASF7
 325 0068 04       		.uleb128 0x4
 326 0069 04       		.byte	0x4
 327 006a 05       		.byte	0x5
 328 006b 696E7400 		.ascii	"int\000"
 329 006f 02       		.uleb128 0x2
 330 0070 04       		.byte	0x4
 331 0071 07       		.byte	0x7
 332 0072 2D010000 		.4byte	.LASF8
 333 0076 03       		.uleb128 0x3
 334 0077 F6020000 		.4byte	.LASF10
 335 007b 04       		.byte	0x4
 336 007c 30       		.byte	0x30
 337 007d 48000000 		.4byte	0x48
 338 0081 02       		.uleb128 0x2
 339 0082 04       		.byte	0x4
 340 0083 07       		.byte	0x7
 341 0084 61020000 		.4byte	.LASF11
 342 0088 05       		.uleb128 0x5
 343 0089 76000000 		.4byte	0x76
 344 008d 06       		.uleb128 0x6
 345 008e 88000000 		.4byte	0x88
 346 0092 07       		.uleb128 0x7
 347 0093 8D000000 		.4byte	0x8d
 348 0097 A2000000 		.4byte	0xa2
 349 009b 08       		.uleb128 0x8
 350 009c 81000000 		.4byte	0x81
 351 00a0 02       		.byte	0x2
 352 00a1 00       		.byte	0
 353 00a2 09       		.uleb128 0x9
 354 00a3 20       		.byte	0x20
 355 00a4 05       		.byte	0x5
 356 00a5 23       		.byte	0x23
 357 00a6 F3000000 		.4byte	0xf3
 358 00aa 0A       		.uleb128 0xa
 359 00ab 56000000 		.4byte	.LASF12
 360 00af 05       		.byte	0x5
 361 00b0 24       		.byte	0x24
 362 00b1 8D000000 		.4byte	0x8d
 363 00b5 00       		.byte	0
 364 00b6 0A       		.uleb128 0xa
 365 00b7 B1000000 		.4byte	.LASF13
 366 00bb 05       		.byte	0x5
 367 00bc 25       		.byte	0x25
 368 00bd 88000000 		.4byte	0x88
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 27


 369 00c1 04       		.byte	0x4
 370 00c2 0A       		.uleb128 0xa
 371 00c3 A6030000 		.4byte	.LASF14
 372 00c7 05       		.byte	0x5
 373 00c8 26       		.byte	0x26
 374 00c9 88000000 		.4byte	0x88
 375 00cd 08       		.byte	0x8
 376 00ce 0A       		.uleb128 0xa
 377 00cf 9A000000 		.4byte	.LASF15
 378 00d3 05       		.byte	0x5
 379 00d4 27       		.byte	0x27
 380 00d5 88000000 		.4byte	0x88
 381 00d9 0C       		.byte	0xc
 382 00da 0A       		.uleb128 0xa
 383 00db 7D000000 		.4byte	.LASF16
 384 00df 05       		.byte	0x5
 385 00e0 28       		.byte	0x28
 386 00e1 8D000000 		.4byte	0x8d
 387 00e5 10       		.byte	0x10
 388 00e6 0A       		.uleb128 0xa
 389 00e7 0A010000 		.4byte	.LASF17
 390 00eb 05       		.byte	0x5
 391 00ec 29       		.byte	0x29
 392 00ed F8000000 		.4byte	0xf8
 393 00f1 14       		.byte	0x14
 394 00f2 00       		.byte	0
 395 00f3 05       		.uleb128 0x5
 396 00f4 92000000 		.4byte	0x92
 397 00f8 06       		.uleb128 0x6
 398 00f9 F3000000 		.4byte	0xf3
 399 00fd 03       		.uleb128 0x3
 400 00fe D1030000 		.4byte	.LASF18
 401 0102 05       		.byte	0x5
 402 0103 2A       		.byte	0x2a
 403 0104 A2000000 		.4byte	0xa2
 404 0108 0B       		.uleb128 0xb
 405 0109 C4030000 		.4byte	.LASF19
 406 010d 06       		.byte	0x6
 407 010e C401     		.2byte	0x1c4
 408 0110 14010000 		.4byte	0x114
 409 0114 02       		.uleb128 0x2
 410 0115 01       		.byte	0x1
 411 0116 08       		.byte	0x8
 412 0117 78020000 		.4byte	.LASF20
 413 011b 02       		.uleb128 0x2
 414 011c 04       		.byte	0x4
 415 011d 04       		.byte	0x4
 416 011e 9F000000 		.4byte	.LASF21
 417 0122 02       		.uleb128 0x2
 418 0123 08       		.byte	0x8
 419 0124 04       		.byte	0x4
 420 0125 03010000 		.4byte	.LASF22
 421 0129 02       		.uleb128 0x2
 422 012a 08       		.byte	0x8
 423 012b 04       		.byte	0x4
 424 012c 08030000 		.4byte	.LASF23
 425 0130 0C       		.uleb128 0xc
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 28


 426 0131 04       		.byte	0x4
 427 0132 6F000000 		.4byte	0x6f
 428 0136 02       		.byte	0x2
 429 0137 4D01     		.2byte	0x14d
 430 0139 4D010000 		.4byte	0x14d
 431 013d 0D       		.uleb128 0xd
 432 013e 38020000 		.4byte	.LASF24
 433 0142 00       		.byte	0
 434 0143 0E       		.uleb128 0xe
 435 0144 51010000 		.4byte	.LASF25
 436 0148 01008A00 		.4byte	0x8a0001
 437 014c 00       		.byte	0
 438 014d 0B       		.uleb128 0xb
 439 014e 4B020000 		.4byte	.LASF26
 440 0152 02       		.byte	0x2
 441 0153 5401     		.2byte	0x154
 442 0155 30010000 		.4byte	0x130
 443 0159 0F       		.uleb128 0xf
 444 015a 1E020000 		.4byte	.LASF30
 445 015e 02       		.byte	0x2
 446 015f F102     		.2byte	0x2f1
 447 0161 77010000 		.4byte	0x177
 448 0165 03       		.byte	0x3
 449 0166 77010000 		.4byte	0x177
 450 016a 10       		.uleb128 0x10
 451 016b 28010000 		.4byte	.LASF28
 452 016f 02       		.byte	0x2
 453 0170 F102     		.2byte	0x2f1
 454 0172 7E010000 		.4byte	0x17e
 455 0176 00       		.byte	0
 456 0177 02       		.uleb128 0x2
 457 0178 01       		.byte	0x1
 458 0179 02       		.byte	0x2
 459 017a CB030000 		.4byte	.LASF27
 460 017e 11       		.uleb128 0x11
 461 017f 04       		.byte	0x4
 462 0180 84010000 		.4byte	0x184
 463 0184 06       		.uleb128 0x6
 464 0185 FD000000 		.4byte	0xfd
 465 0189 12       		.uleb128 0x12
 466 018a 24000000 		.4byte	.LASF32
 467 018e 02       		.byte	0x2
 468 018f A502     		.2byte	0x2a5
 469 0191 03       		.byte	0x3
 470 0192 AF010000 		.4byte	0x1af
 471 0196 10       		.uleb128 0x10
 472 0197 28010000 		.4byte	.LASF28
 473 019b 02       		.byte	0x2
 474 019c A502     		.2byte	0x2a5
 475 019e AF010000 		.4byte	0x1af
 476 01a2 10       		.uleb128 0x10
 477 01a3 E1030000 		.4byte	.LASF29
 478 01a7 02       		.byte	0x2
 479 01a8 A502     		.2byte	0x2a5
 480 01aa 76000000 		.4byte	0x76
 481 01ae 00       		.byte	0
 482 01af 11       		.uleb128 0x11
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 29


 483 01b0 04       		.byte	0x4
 484 01b1 FD000000 		.4byte	0xfd
 485 01b5 0F       		.uleb128 0xf
 486 01b6 EC000000 		.4byte	.LASF31
 487 01ba 02       		.byte	0x2
 488 01bb 9903     		.2byte	0x399
 489 01bd 4D010000 		.4byte	0x14d
 490 01c1 03       		.byte	0x3
 491 01c2 D3010000 		.4byte	0x1d3
 492 01c6 10       		.uleb128 0x10
 493 01c7 28010000 		.4byte	.LASF28
 494 01cb 02       		.byte	0x2
 495 01cc 9903     		.2byte	0x399
 496 01ce 7E010000 		.4byte	0x17e
 497 01d2 00       		.byte	0
 498 01d3 12       		.uleb128 0x12
 499 01d4 3D000000 		.4byte	.LASF33
 500 01d8 02       		.byte	0x2
 501 01d9 8C02     		.2byte	0x28c
 502 01db 03       		.byte	0x3
 503 01dc F9010000 		.4byte	0x1f9
 504 01e0 10       		.uleb128 0x10
 505 01e1 28010000 		.4byte	.LASF28
 506 01e5 02       		.byte	0x2
 507 01e6 8C02     		.2byte	0x28c
 508 01e8 AF010000 		.4byte	0x1af
 509 01ec 10       		.uleb128 0x10
 510 01ed E1030000 		.4byte	.LASF29
 511 01f1 02       		.byte	0x2
 512 01f2 8C02     		.2byte	0x28c
 513 01f4 76000000 		.4byte	0x76
 514 01f8 00       		.byte	0
 515 01f9 12       		.uleb128 0x12
 516 01fa 0A000000 		.4byte	.LASF34
 517 01fe 02       		.byte	0x2
 518 01ff BE02     		.2byte	0x2be
 519 0201 03       		.byte	0x3
 520 0202 1F020000 		.4byte	0x21f
 521 0206 10       		.uleb128 0x10
 522 0207 28010000 		.4byte	.LASF28
 523 020b 02       		.byte	0x2
 524 020c BE02     		.2byte	0x2be
 525 020e AF010000 		.4byte	0x1af
 526 0212 10       		.uleb128 0x10
 527 0213 1E010000 		.4byte	.LASF35
 528 0217 02       		.byte	0x2
 529 0218 BE02     		.2byte	0x2be
 530 021a 76000000 		.4byte	0x76
 531 021e 00       		.byte	0
 532 021f 0F       		.uleb128 0xf
 533 0220 BC020000 		.4byte	.LASF36
 534 0224 02       		.byte	0x2
 535 0225 D602     		.2byte	0x2d6
 536 0227 76000000 		.4byte	0x76
 537 022b 03       		.byte	0x3
 538 022c 3D020000 		.4byte	0x23d
 539 0230 10       		.uleb128 0x10
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 30


 540 0231 28010000 		.4byte	.LASF28
 541 0235 02       		.byte	0x2
 542 0236 D602     		.2byte	0x2d6
 543 0238 7E010000 		.4byte	0x17e
 544 023c 00       		.byte	0
 545 023d 13       		.uleb128 0x13
 546 023e 5E000000 		.4byte	.LASF38
 547 0242 01       		.byte	0x1
 548 0243 2E       		.byte	0x2e
 549 0244 4D010000 		.4byte	0x14d
 550 0248 00000000 		.4byte	.LFB55
 551 024c 34000000 		.4byte	.LFE55-.LFB55
 552 0250 01       		.uleb128 0x1
 553 0251 9C       		.byte	0x9c
 554 0252 DD020000 		.4byte	0x2dd
 555 0256 14       		.uleb128 0x14
 556 0257 28010000 		.4byte	.LASF28
 557 025b 01       		.byte	0x1
 558 025c 2E       		.byte	0x2e
 559 025d AF010000 		.4byte	0x1af
 560 0261 00000000 		.4byte	.LLST0
 561 0265 14       		.uleb128 0x14
 562 0266 89000000 		.4byte	.LASF37
 563 026a 01       		.byte	0x1
 564 026b 2E       		.byte	0x2e
 565 026c 76000000 		.4byte	0x76
 566 0270 42000000 		.4byte	.LLST1
 567 0274 15       		.uleb128 0x15
 568 0275 00000000 		.4byte	.LASF41
 569 0279 01       		.byte	0x1
 570 027a 30       		.byte	0x30
 571 027b 4D010000 		.4byte	0x14d
 572 027f 87000000 		.4byte	.LLST2
 573 0283 16       		.uleb128 0x16
 574 0284 59010000 		.4byte	0x159
 575 0288 06000000 		.4byte	.LBB16
 576 028c 02000000 		.4byte	.LBE16-.LBB16
 577 0290 01       		.byte	0x1
 578 0291 33       		.byte	0x33
 579 0292 A0020000 		.4byte	0x2a0
 580 0296 17       		.uleb128 0x17
 581 0297 6A010000 		.4byte	0x16a
 582 029b A6000000 		.4byte	.LLST3
 583 029f 00       		.byte	0
 584 02a0 18       		.uleb128 0x18
 585 02a1 89010000 		.4byte	0x189
 586 02a5 0C000000 		.4byte	.LBB18
 587 02a9 12000000 		.4byte	.LBE18-.LBB18
 588 02ad 01       		.byte	0x1
 589 02ae 36       		.byte	0x36
 590 02af 17       		.uleb128 0x17
 591 02b0 A2010000 		.4byte	0x1a2
 592 02b4 B9000000 		.4byte	.LLST4
 593 02b8 17       		.uleb128 0x17
 594 02b9 96010000 		.4byte	0x196
 595 02bd E5000000 		.4byte	.LLST5
 596 02c1 19       		.uleb128 0x19
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 31


 597 02c2 18000000 		.4byte	.LVL6
 598 02c6 52040000 		.4byte	0x452
 599 02ca 1A       		.uleb128 0x1a
 600 02cb 01       		.uleb128 0x1
 601 02cc 50       		.byte	0x50
 602 02cd 05       		.uleb128 0x5
 603 02ce 03       		.byte	0x3
 604 02cf 00000000 		.4byte	.LC0
 605 02d3 1A       		.uleb128 0x1a
 606 02d4 01       		.uleb128 0x1
 607 02d5 51       		.byte	0x51
 608 02d6 03       		.uleb128 0x3
 609 02d7 0A       		.byte	0xa
 610 02d8 A702     		.2byte	0x2a7
 611 02da 00       		.byte	0
 612 02db 00       		.byte	0
 613 02dc 00       		.byte	0
 614 02dd 13       		.uleb128 0x13
 615 02de 3A010000 		.4byte	.LASF39
 616 02e2 01       		.byte	0x1
 617 02e3 61       		.byte	0x61
 618 02e4 4D010000 		.4byte	0x14d
 619 02e8 00000000 		.4byte	.LFB56
 620 02ec 40000000 		.4byte	.LFE56-.LFB56
 621 02f0 01       		.uleb128 0x1
 622 02f1 9C       		.byte	0x9c
 623 02f2 B2030000 		.4byte	0x3b2
 624 02f6 14       		.uleb128 0x14
 625 02f7 28010000 		.4byte	.LASF28
 626 02fb 01       		.byte	0x1
 627 02fc 61       		.byte	0x61
 628 02fd AF010000 		.4byte	0x1af
 629 0301 03010000 		.4byte	.LLST6
 630 0305 14       		.uleb128 0x14
 631 0306 E1030000 		.4byte	.LASF29
 632 030a 01       		.byte	0x1
 633 030b 61       		.byte	0x61
 634 030c 76000000 		.4byte	0x76
 635 0310 45010000 		.4byte	.LLST7
 636 0314 14       		.uleb128 0x14
 637 0315 75000000 		.4byte	.LASF40
 638 0319 01       		.byte	0x1
 639 031a 61       		.byte	0x61
 640 031b 76000000 		.4byte	0x76
 641 031f 8A010000 		.4byte	.LLST8
 642 0323 15       		.uleb128 0x15
 643 0324 00000000 		.4byte	.LASF41
 644 0328 01       		.byte	0x1
 645 0329 63       		.byte	0x63
 646 032a 4D010000 		.4byte	0x14d
 647 032e C4010000 		.4byte	.LLST9
 648 0332 16       		.uleb128 0x16
 649 0333 B5010000 		.4byte	0x1b5
 650 0337 06000000 		.4byte	.LBB20
 651 033b 0C000000 		.4byte	.LBE20-.LBB20
 652 033f 01       		.byte	0x1
 653 0340 65       		.byte	0x65
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 32


 654 0341 4F030000 		.4byte	0x34f
 655 0345 17       		.uleb128 0x17
 656 0346 C6010000 		.4byte	0x1c6
 657 034a E3010000 		.4byte	.LLST10
 658 034e 00       		.byte	0
 659 034f 16       		.uleb128 0x16
 660 0350 F9010000 		.4byte	0x1f9
 661 0354 16000000 		.4byte	.LBB22
 662 0358 02000000 		.4byte	.LBE22-.LBB22
 663 035c 01       		.byte	0x1
 664 035d 68       		.byte	0x68
 665 035e 75030000 		.4byte	0x375
 666 0362 17       		.uleb128 0x17
 667 0363 12020000 		.4byte	0x212
 668 0367 F6010000 		.4byte	.LLST11
 669 036b 17       		.uleb128 0x17
 670 036c 06020000 		.4byte	0x206
 671 0370 09020000 		.4byte	.LLST12
 672 0374 00       		.byte	0
 673 0375 18       		.uleb128 0x18
 674 0376 D3010000 		.4byte	0x1d3
 675 037a 18000000 		.4byte	.LBB24
 676 037e 12000000 		.4byte	.LBE24-.LBB24
 677 0382 01       		.byte	0x1
 678 0383 6A       		.byte	0x6a
 679 0384 17       		.uleb128 0x17
 680 0385 EC010000 		.4byte	0x1ec
 681 0389 1C020000 		.4byte	.LLST13
 682 038d 17       		.uleb128 0x17
 683 038e E0010000 		.4byte	0x1e0
 684 0392 48020000 		.4byte	.LLST14
 685 0396 19       		.uleb128 0x19
 686 0397 24000000 		.4byte	.LVL19
 687 039b 52040000 		.4byte	0x452
 688 039f 1A       		.uleb128 0x1a
 689 03a0 01       		.uleb128 0x1
 690 03a1 50       		.byte	0x50
 691 03a2 05       		.uleb128 0x5
 692 03a3 03       		.byte	0x3
 693 03a4 00000000 		.4byte	.LC0
 694 03a8 1A       		.uleb128 0x1a
 695 03a9 01       		.uleb128 0x1
 696 03aa 51       		.byte	0x51
 697 03ab 03       		.uleb128 0x3
 698 03ac 0A       		.byte	0xa
 699 03ad 8E02     		.2byte	0x28e
 700 03af 00       		.byte	0
 701 03b0 00       		.byte	0
 702 03b1 00       		.byte	0
 703 03b2 13       		.uleb128 0x13
 704 03b3 DF020000 		.4byte	.LASF42
 705 03b7 01       		.byte	0x1
 706 03b8 95       		.byte	0x95
 707 03b9 4D010000 		.4byte	0x14d
 708 03bd 00000000 		.4byte	.LFB57
 709 03c1 2C000000 		.4byte	.LFE57-.LFB57
 710 03c5 01       		.uleb128 0x1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 33


 711 03c6 9C       		.byte	0x9c
 712 03c7 4C040000 		.4byte	0x44c
 713 03cb 14       		.uleb128 0x14
 714 03cc 28010000 		.4byte	.LASF28
 715 03d0 01       		.byte	0x1
 716 03d1 95       		.byte	0x95
 717 03d2 7E010000 		.4byte	0x17e
 718 03d6 66020000 		.4byte	.LLST15
 719 03da 14       		.uleb128 0x14
 720 03db 75000000 		.4byte	.LASF40
 721 03df 01       		.byte	0x1
 722 03e0 95       		.byte	0x95
 723 03e1 4C040000 		.4byte	0x44c
 724 03e5 92020000 		.4byte	.LLST16
 725 03e9 15       		.uleb128 0x15
 726 03ea 00000000 		.4byte	.LASF41
 727 03ee 01       		.byte	0x1
 728 03ef 97       		.byte	0x97
 729 03f0 4D010000 		.4byte	0x14d
 730 03f4 BE020000 		.4byte	.LLST17
 731 03f8 16       		.uleb128 0x16
 732 03f9 59010000 		.4byte	0x159
 733 03fd 10000000 		.4byte	.LBB26
 734 0401 02000000 		.4byte	.LBE26-.LBB26
 735 0405 01       		.byte	0x1
 736 0406 9B       		.byte	0x9b
 737 0407 15040000 		.4byte	0x415
 738 040b 17       		.uleb128 0x17
 739 040c 6A010000 		.4byte	0x16a
 740 0410 DD020000 		.4byte	.LLST18
 741 0414 00       		.byte	0
 742 0415 16       		.uleb128 0x16
 743 0416 1F020000 		.4byte	0x21f
 744 041a 16000000 		.4byte	.LBB28
 745 041e 02000000 		.4byte	.LBE28-.LBB28
 746 0422 01       		.byte	0x1
 747 0423 9E       		.byte	0x9e
 748 0424 32040000 		.4byte	0x432
 749 0428 17       		.uleb128 0x17
 750 0429 30020000 		.4byte	0x230
 751 042d F0020000 		.4byte	.LLST19
 752 0431 00       		.byte	0
 753 0432 19       		.uleb128 0x19
 754 0433 10000000 		.4byte	.LVL28
 755 0437 52040000 		.4byte	0x452
 756 043b 1A       		.uleb128 0x1a
 757 043c 01       		.uleb128 0x1
 758 043d 50       		.byte	0x50
 759 043e 05       		.uleb128 0x5
 760 043f 03       		.byte	0x3
 761 0440 40000000 		.4byte	.LC3
 762 0444 1A       		.uleb128 0x1a
 763 0445 01       		.uleb128 0x1
 764 0446 51       		.byte	0x51
 765 0447 02       		.uleb128 0x2
 766 0448 08       		.byte	0x8
 767 0449 99       		.byte	0x99
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 34


 768 044a 00       		.byte	0
 769 044b 00       		.byte	0
 770 044c 11       		.uleb128 0x11
 771 044d 04       		.byte	0x4
 772 044e 76000000 		.4byte	0x76
 773 0452 1B       		.uleb128 0x1b
 774 0453 AD030000 		.4byte	.LASF46
 775 0457 AD030000 		.4byte	.LASF46
 776 045b 06       		.byte	0x6
 777 045c 2A03     		.2byte	0x32a
 778 045e 00       		.byte	0
 779              		.section	.debug_abbrev,"",%progbits
 780              	.Ldebug_abbrev0:
 781 0000 01       		.uleb128 0x1
 782 0001 11       		.uleb128 0x11
 783 0002 01       		.byte	0x1
 784 0003 25       		.uleb128 0x25
 785 0004 0E       		.uleb128 0xe
 786 0005 13       		.uleb128 0x13
 787 0006 0B       		.uleb128 0xb
 788 0007 03       		.uleb128 0x3
 789 0008 0E       		.uleb128 0xe
 790 0009 1B       		.uleb128 0x1b
 791 000a 0E       		.uleb128 0xe
 792 000b 55       		.uleb128 0x55
 793 000c 17       		.uleb128 0x17
 794 000d 11       		.uleb128 0x11
 795 000e 01       		.uleb128 0x1
 796 000f 10       		.uleb128 0x10
 797 0010 17       		.uleb128 0x17
 798 0011 00       		.byte	0
 799 0012 00       		.byte	0
 800 0013 02       		.uleb128 0x2
 801 0014 24       		.uleb128 0x24
 802 0015 00       		.byte	0
 803 0016 0B       		.uleb128 0xb
 804 0017 0B       		.uleb128 0xb
 805 0018 3E       		.uleb128 0x3e
 806 0019 0B       		.uleb128 0xb
 807 001a 03       		.uleb128 0x3
 808 001b 0E       		.uleb128 0xe
 809 001c 00       		.byte	0
 810 001d 00       		.byte	0
 811 001e 03       		.uleb128 0x3
 812 001f 16       		.uleb128 0x16
 813 0020 00       		.byte	0
 814 0021 03       		.uleb128 0x3
 815 0022 0E       		.uleb128 0xe
 816 0023 3A       		.uleb128 0x3a
 817 0024 0B       		.uleb128 0xb
 818 0025 3B       		.uleb128 0x3b
 819 0026 0B       		.uleb128 0xb
 820 0027 49       		.uleb128 0x49
 821 0028 13       		.uleb128 0x13
 822 0029 00       		.byte	0
 823 002a 00       		.byte	0
 824 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 35


 825 002c 24       		.uleb128 0x24
 826 002d 00       		.byte	0
 827 002e 0B       		.uleb128 0xb
 828 002f 0B       		.uleb128 0xb
 829 0030 3E       		.uleb128 0x3e
 830 0031 0B       		.uleb128 0xb
 831 0032 03       		.uleb128 0x3
 832 0033 08       		.uleb128 0x8
 833 0034 00       		.byte	0
 834 0035 00       		.byte	0
 835 0036 05       		.uleb128 0x5
 836 0037 35       		.uleb128 0x35
 837 0038 00       		.byte	0
 838 0039 49       		.uleb128 0x49
 839 003a 13       		.uleb128 0x13
 840 003b 00       		.byte	0
 841 003c 00       		.byte	0
 842 003d 06       		.uleb128 0x6
 843 003e 26       		.uleb128 0x26
 844 003f 00       		.byte	0
 845 0040 49       		.uleb128 0x49
 846 0041 13       		.uleb128 0x13
 847 0042 00       		.byte	0
 848 0043 00       		.byte	0
 849 0044 07       		.uleb128 0x7
 850 0045 01       		.uleb128 0x1
 851 0046 01       		.byte	0x1
 852 0047 49       		.uleb128 0x49
 853 0048 13       		.uleb128 0x13
 854 0049 01       		.uleb128 0x1
 855 004a 13       		.uleb128 0x13
 856 004b 00       		.byte	0
 857 004c 00       		.byte	0
 858 004d 08       		.uleb128 0x8
 859 004e 21       		.uleb128 0x21
 860 004f 00       		.byte	0
 861 0050 49       		.uleb128 0x49
 862 0051 13       		.uleb128 0x13
 863 0052 2F       		.uleb128 0x2f
 864 0053 0B       		.uleb128 0xb
 865 0054 00       		.byte	0
 866 0055 00       		.byte	0
 867 0056 09       		.uleb128 0x9
 868 0057 13       		.uleb128 0x13
 869 0058 01       		.byte	0x1
 870 0059 0B       		.uleb128 0xb
 871 005a 0B       		.uleb128 0xb
 872 005b 3A       		.uleb128 0x3a
 873 005c 0B       		.uleb128 0xb
 874 005d 3B       		.uleb128 0x3b
 875 005e 0B       		.uleb128 0xb
 876 005f 01       		.uleb128 0x1
 877 0060 13       		.uleb128 0x13
 878 0061 00       		.byte	0
 879 0062 00       		.byte	0
 880 0063 0A       		.uleb128 0xa
 881 0064 0D       		.uleb128 0xd
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 36


 882 0065 00       		.byte	0
 883 0066 03       		.uleb128 0x3
 884 0067 0E       		.uleb128 0xe
 885 0068 3A       		.uleb128 0x3a
 886 0069 0B       		.uleb128 0xb
 887 006a 3B       		.uleb128 0x3b
 888 006b 0B       		.uleb128 0xb
 889 006c 49       		.uleb128 0x49
 890 006d 13       		.uleb128 0x13
 891 006e 38       		.uleb128 0x38
 892 006f 0B       		.uleb128 0xb
 893 0070 00       		.byte	0
 894 0071 00       		.byte	0
 895 0072 0B       		.uleb128 0xb
 896 0073 16       		.uleb128 0x16
 897 0074 00       		.byte	0
 898 0075 03       		.uleb128 0x3
 899 0076 0E       		.uleb128 0xe
 900 0077 3A       		.uleb128 0x3a
 901 0078 0B       		.uleb128 0xb
 902 0079 3B       		.uleb128 0x3b
 903 007a 05       		.uleb128 0x5
 904 007b 49       		.uleb128 0x49
 905 007c 13       		.uleb128 0x13
 906 007d 00       		.byte	0
 907 007e 00       		.byte	0
 908 007f 0C       		.uleb128 0xc
 909 0080 04       		.uleb128 0x4
 910 0081 01       		.byte	0x1
 911 0082 0B       		.uleb128 0xb
 912 0083 0B       		.uleb128 0xb
 913 0084 49       		.uleb128 0x49
 914 0085 13       		.uleb128 0x13
 915 0086 3A       		.uleb128 0x3a
 916 0087 0B       		.uleb128 0xb
 917 0088 3B       		.uleb128 0x3b
 918 0089 05       		.uleb128 0x5
 919 008a 01       		.uleb128 0x1
 920 008b 13       		.uleb128 0x13
 921 008c 00       		.byte	0
 922 008d 00       		.byte	0
 923 008e 0D       		.uleb128 0xd
 924 008f 28       		.uleb128 0x28
 925 0090 00       		.byte	0
 926 0091 03       		.uleb128 0x3
 927 0092 0E       		.uleb128 0xe
 928 0093 1C       		.uleb128 0x1c
 929 0094 0B       		.uleb128 0xb
 930 0095 00       		.byte	0
 931 0096 00       		.byte	0
 932 0097 0E       		.uleb128 0xe
 933 0098 28       		.uleb128 0x28
 934 0099 00       		.byte	0
 935 009a 03       		.uleb128 0x3
 936 009b 0E       		.uleb128 0xe
 937 009c 1C       		.uleb128 0x1c
 938 009d 06       		.uleb128 0x6
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 37


 939 009e 00       		.byte	0
 940 009f 00       		.byte	0
 941 00a0 0F       		.uleb128 0xf
 942 00a1 2E       		.uleb128 0x2e
 943 00a2 01       		.byte	0x1
 944 00a3 03       		.uleb128 0x3
 945 00a4 0E       		.uleb128 0xe
 946 00a5 3A       		.uleb128 0x3a
 947 00a6 0B       		.uleb128 0xb
 948 00a7 3B       		.uleb128 0x3b
 949 00a8 05       		.uleb128 0x5
 950 00a9 27       		.uleb128 0x27
 951 00aa 19       		.uleb128 0x19
 952 00ab 49       		.uleb128 0x49
 953 00ac 13       		.uleb128 0x13
 954 00ad 20       		.uleb128 0x20
 955 00ae 0B       		.uleb128 0xb
 956 00af 01       		.uleb128 0x1
 957 00b0 13       		.uleb128 0x13
 958 00b1 00       		.byte	0
 959 00b2 00       		.byte	0
 960 00b3 10       		.uleb128 0x10
 961 00b4 05       		.uleb128 0x5
 962 00b5 00       		.byte	0
 963 00b6 03       		.uleb128 0x3
 964 00b7 0E       		.uleb128 0xe
 965 00b8 3A       		.uleb128 0x3a
 966 00b9 0B       		.uleb128 0xb
 967 00ba 3B       		.uleb128 0x3b
 968 00bb 05       		.uleb128 0x5
 969 00bc 49       		.uleb128 0x49
 970 00bd 13       		.uleb128 0x13
 971 00be 00       		.byte	0
 972 00bf 00       		.byte	0
 973 00c0 11       		.uleb128 0x11
 974 00c1 0F       		.uleb128 0xf
 975 00c2 00       		.byte	0
 976 00c3 0B       		.uleb128 0xb
 977 00c4 0B       		.uleb128 0xb
 978 00c5 49       		.uleb128 0x49
 979 00c6 13       		.uleb128 0x13
 980 00c7 00       		.byte	0
 981 00c8 00       		.byte	0
 982 00c9 12       		.uleb128 0x12
 983 00ca 2E       		.uleb128 0x2e
 984 00cb 01       		.byte	0x1
 985 00cc 03       		.uleb128 0x3
 986 00cd 0E       		.uleb128 0xe
 987 00ce 3A       		.uleb128 0x3a
 988 00cf 0B       		.uleb128 0xb
 989 00d0 3B       		.uleb128 0x3b
 990 00d1 05       		.uleb128 0x5
 991 00d2 27       		.uleb128 0x27
 992 00d3 19       		.uleb128 0x19
 993 00d4 20       		.uleb128 0x20
 994 00d5 0B       		.uleb128 0xb
 995 00d6 01       		.uleb128 0x1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 38


 996 00d7 13       		.uleb128 0x13
 997 00d8 00       		.byte	0
 998 00d9 00       		.byte	0
 999 00da 13       		.uleb128 0x13
 1000 00db 2E       		.uleb128 0x2e
 1001 00dc 01       		.byte	0x1
 1002 00dd 3F       		.uleb128 0x3f
 1003 00de 19       		.uleb128 0x19
 1004 00df 03       		.uleb128 0x3
 1005 00e0 0E       		.uleb128 0xe
 1006 00e1 3A       		.uleb128 0x3a
 1007 00e2 0B       		.uleb128 0xb
 1008 00e3 3B       		.uleb128 0x3b
 1009 00e4 0B       		.uleb128 0xb
 1010 00e5 27       		.uleb128 0x27
 1011 00e6 19       		.uleb128 0x19
 1012 00e7 49       		.uleb128 0x49
 1013 00e8 13       		.uleb128 0x13
 1014 00e9 11       		.uleb128 0x11
 1015 00ea 01       		.uleb128 0x1
 1016 00eb 12       		.uleb128 0x12
 1017 00ec 06       		.uleb128 0x6
 1018 00ed 40       		.uleb128 0x40
 1019 00ee 18       		.uleb128 0x18
 1020 00ef 9742     		.uleb128 0x2117
 1021 00f1 19       		.uleb128 0x19
 1022 00f2 01       		.uleb128 0x1
 1023 00f3 13       		.uleb128 0x13
 1024 00f4 00       		.byte	0
 1025 00f5 00       		.byte	0
 1026 00f6 14       		.uleb128 0x14
 1027 00f7 05       		.uleb128 0x5
 1028 00f8 00       		.byte	0
 1029 00f9 03       		.uleb128 0x3
 1030 00fa 0E       		.uleb128 0xe
 1031 00fb 3A       		.uleb128 0x3a
 1032 00fc 0B       		.uleb128 0xb
 1033 00fd 3B       		.uleb128 0x3b
 1034 00fe 0B       		.uleb128 0xb
 1035 00ff 49       		.uleb128 0x49
 1036 0100 13       		.uleb128 0x13
 1037 0101 02       		.uleb128 0x2
 1038 0102 17       		.uleb128 0x17
 1039 0103 00       		.byte	0
 1040 0104 00       		.byte	0
 1041 0105 15       		.uleb128 0x15
 1042 0106 34       		.uleb128 0x34
 1043 0107 00       		.byte	0
 1044 0108 03       		.uleb128 0x3
 1045 0109 0E       		.uleb128 0xe
 1046 010a 3A       		.uleb128 0x3a
 1047 010b 0B       		.uleb128 0xb
 1048 010c 3B       		.uleb128 0x3b
 1049 010d 0B       		.uleb128 0xb
 1050 010e 49       		.uleb128 0x49
 1051 010f 13       		.uleb128 0x13
 1052 0110 02       		.uleb128 0x2
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 39


 1053 0111 17       		.uleb128 0x17
 1054 0112 00       		.byte	0
 1055 0113 00       		.byte	0
 1056 0114 16       		.uleb128 0x16
 1057 0115 1D       		.uleb128 0x1d
 1058 0116 01       		.byte	0x1
 1059 0117 31       		.uleb128 0x31
 1060 0118 13       		.uleb128 0x13
 1061 0119 11       		.uleb128 0x11
 1062 011a 01       		.uleb128 0x1
 1063 011b 12       		.uleb128 0x12
 1064 011c 06       		.uleb128 0x6
 1065 011d 58       		.uleb128 0x58
 1066 011e 0B       		.uleb128 0xb
 1067 011f 59       		.uleb128 0x59
 1068 0120 0B       		.uleb128 0xb
 1069 0121 01       		.uleb128 0x1
 1070 0122 13       		.uleb128 0x13
 1071 0123 00       		.byte	0
 1072 0124 00       		.byte	0
 1073 0125 17       		.uleb128 0x17
 1074 0126 05       		.uleb128 0x5
 1075 0127 00       		.byte	0
 1076 0128 31       		.uleb128 0x31
 1077 0129 13       		.uleb128 0x13
 1078 012a 02       		.uleb128 0x2
 1079 012b 17       		.uleb128 0x17
 1080 012c 00       		.byte	0
 1081 012d 00       		.byte	0
 1082 012e 18       		.uleb128 0x18
 1083 012f 1D       		.uleb128 0x1d
 1084 0130 01       		.byte	0x1
 1085 0131 31       		.uleb128 0x31
 1086 0132 13       		.uleb128 0x13
 1087 0133 11       		.uleb128 0x11
 1088 0134 01       		.uleb128 0x1
 1089 0135 12       		.uleb128 0x12
 1090 0136 06       		.uleb128 0x6
 1091 0137 58       		.uleb128 0x58
 1092 0138 0B       		.uleb128 0xb
 1093 0139 59       		.uleb128 0x59
 1094 013a 0B       		.uleb128 0xb
 1095 013b 00       		.byte	0
 1096 013c 00       		.byte	0
 1097 013d 19       		.uleb128 0x19
 1098 013e 898201   		.uleb128 0x4109
 1099 0141 01       		.byte	0x1
 1100 0142 11       		.uleb128 0x11
 1101 0143 01       		.uleb128 0x1
 1102 0144 31       		.uleb128 0x31
 1103 0145 13       		.uleb128 0x13
 1104 0146 00       		.byte	0
 1105 0147 00       		.byte	0
 1106 0148 1A       		.uleb128 0x1a
 1107 0149 8A8201   		.uleb128 0x410a
 1108 014c 00       		.byte	0
 1109 014d 02       		.uleb128 0x2
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 40


 1110 014e 18       		.uleb128 0x18
 1111 014f 9142     		.uleb128 0x2111
 1112 0151 18       		.uleb128 0x18
 1113 0152 00       		.byte	0
 1114 0153 00       		.byte	0
 1115 0154 1B       		.uleb128 0x1b
 1116 0155 2E       		.uleb128 0x2e
 1117 0156 00       		.byte	0
 1118 0157 3F       		.uleb128 0x3f
 1119 0158 19       		.uleb128 0x19
 1120 0159 3C       		.uleb128 0x3c
 1121 015a 19       		.uleb128 0x19
 1122 015b 6E       		.uleb128 0x6e
 1123 015c 0E       		.uleb128 0xe
 1124 015d 03       		.uleb128 0x3
 1125 015e 0E       		.uleb128 0xe
 1126 015f 3A       		.uleb128 0x3a
 1127 0160 0B       		.uleb128 0xb
 1128 0161 3B       		.uleb128 0x3b
 1129 0162 05       		.uleb128 0x5
 1130 0163 00       		.byte	0
 1131 0164 00       		.byte	0
 1132 0165 00       		.byte	0
 1133              		.section	.debug_loc,"",%progbits
 1134              	.Ldebug_loc0:
 1135              	.LLST0:
 1136 0000 00000000 		.4byte	.LVL0
 1137 0004 14000000 		.4byte	.LVL5
 1138 0008 0100     		.2byte	0x1
 1139 000a 50       		.byte	0x50
 1140 000b 14000000 		.4byte	.LVL5
 1141 000f 22000000 		.4byte	.LVL9
 1142 0013 0100     		.2byte	0x1
 1143 0015 54       		.byte	0x54
 1144 0016 22000000 		.4byte	.LVL9
 1145 001a 24000000 		.4byte	.LVL10
 1146 001e 0100     		.2byte	0x1
 1147 0020 50       		.byte	0x50
 1148 0021 24000000 		.4byte	.LVL10
 1149 0025 24000000 		.4byte	.LVL11
 1150 0029 0100     		.2byte	0x1
 1151 002b 54       		.byte	0x54
 1152 002c 24000000 		.4byte	.LVL11
 1153 0030 34000000 		.4byte	.LFE55
 1154 0034 0400     		.2byte	0x4
 1155 0036 F3       		.byte	0xf3
 1156 0037 01       		.uleb128 0x1
 1157 0038 50       		.byte	0x50
 1158 0039 9F       		.byte	0x9f
 1159 003a 00000000 		.4byte	0
 1160 003e 00000000 		.4byte	0
 1161              	.LLST1:
 1162 0042 00000000 		.4byte	.LVL0
 1163 0046 12000000 		.4byte	.LVL4
 1164 004a 0100     		.2byte	0x1
 1165 004c 51       		.byte	0x51
 1166 004d 12000000 		.4byte	.LVL4
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 41


 1167 0051 1A000000 		.4byte	.LVL7
 1168 0055 0100     		.2byte	0x1
 1169 0057 55       		.byte	0x55
 1170 0058 1A000000 		.4byte	.LVL7
 1171 005c 22000000 		.4byte	.LVL9
 1172 0060 0400     		.2byte	0x4
 1173 0062 F3       		.byte	0xf3
 1174 0063 01       		.uleb128 0x1
 1175 0064 51       		.byte	0x51
 1176 0065 9F       		.byte	0x9f
 1177 0066 22000000 		.4byte	.LVL9
 1178 006a 24000000 		.4byte	.LVL10
 1179 006e 0100     		.2byte	0x1
 1180 0070 51       		.byte	0x51
 1181 0071 24000000 		.4byte	.LVL10
 1182 0075 34000000 		.4byte	.LFE55
 1183 0079 0400     		.2byte	0x4
 1184 007b F3       		.byte	0xf3
 1185 007c 01       		.uleb128 0x1
 1186 007d 51       		.byte	0x51
 1187 007e 9F       		.byte	0x9f
 1188 007f 00000000 		.4byte	0
 1189 0083 00000000 		.4byte	0
 1190              	.LLST2:
 1191 0087 1E000000 		.4byte	.LVL8
 1192 008b 22000000 		.4byte	.LVL9
 1193 008f 0200     		.2byte	0x2
 1194 0091 30       		.byte	0x30
 1195 0092 9F       		.byte	0x9f
 1196 0093 24000000 		.4byte	.LVL10
 1197 0097 34000000 		.4byte	.LFE55
 1198 009b 0100     		.2byte	0x1
 1199 009d 50       		.byte	0x50
 1200 009e 00000000 		.4byte	0
 1201 00a2 00000000 		.4byte	0
 1202              	.LLST3:
 1203 00a6 06000000 		.4byte	.LVL1
 1204 00aa 08000000 		.4byte	.LVL2
 1205 00ae 0100     		.2byte	0x1
 1206 00b0 50       		.byte	0x50
 1207 00b1 00000000 		.4byte	0
 1208 00b5 00000000 		.4byte	0
 1209              	.LLST4:
 1210 00b9 0C000000 		.4byte	.LVL3
 1211 00bd 12000000 		.4byte	.LVL4
 1212 00c1 0100     		.2byte	0x1
 1213 00c3 51       		.byte	0x51
 1214 00c4 12000000 		.4byte	.LVL4
 1215 00c8 1A000000 		.4byte	.LVL7
 1216 00cc 0100     		.2byte	0x1
 1217 00ce 55       		.byte	0x55
 1218 00cf 1A000000 		.4byte	.LVL7
 1219 00d3 1E000000 		.4byte	.LVL8
 1220 00d7 0400     		.2byte	0x4
 1221 00d9 F3       		.byte	0xf3
 1222 00da 01       		.uleb128 0x1
 1223 00db 51       		.byte	0x51
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 42


 1224 00dc 9F       		.byte	0x9f
 1225 00dd 00000000 		.4byte	0
 1226 00e1 00000000 		.4byte	0
 1227              	.LLST5:
 1228 00e5 0C000000 		.4byte	.LVL3
 1229 00e9 14000000 		.4byte	.LVL5
 1230 00ed 0100     		.2byte	0x1
 1231 00ef 50       		.byte	0x50
 1232 00f0 14000000 		.4byte	.LVL5
 1233 00f4 1E000000 		.4byte	.LVL8
 1234 00f8 0100     		.2byte	0x1
 1235 00fa 54       		.byte	0x54
 1236 00fb 00000000 		.4byte	0
 1237 00ff 00000000 		.4byte	0
 1238              	.LLST6:
 1239 0103 00000000 		.4byte	.LVL12
 1240 0107 20000000 		.4byte	.LVL18
 1241 010b 0100     		.2byte	0x1
 1242 010d 50       		.byte	0x50
 1243 010e 20000000 		.4byte	.LVL18
 1244 0112 2E000000 		.4byte	.LVL22
 1245 0116 0100     		.2byte	0x1
 1246 0118 55       		.byte	0x55
 1247 0119 2E000000 		.4byte	.LVL22
 1248 011d 30000000 		.4byte	.LVL23
 1249 0121 0100     		.2byte	0x1
 1250 0123 50       		.byte	0x50
 1251 0124 30000000 		.4byte	.LVL23
 1252 0128 30000000 		.4byte	.LVL24
 1253 012c 0100     		.2byte	0x1
 1254 012e 55       		.byte	0x55
 1255 012f 30000000 		.4byte	.LVL24
 1256 0133 40000000 		.4byte	.LFE56
 1257 0137 0400     		.2byte	0x4
 1258 0139 F3       		.byte	0xf3
 1259 013a 01       		.uleb128 0x1
 1260 013b 50       		.byte	0x50
 1261 013c 9F       		.byte	0x9f
 1262 013d 00000000 		.4byte	0
 1263 0141 00000000 		.4byte	0
 1264              	.LLST7:
 1265 0145 00000000 		.4byte	.LVL12
 1266 0149 1E000000 		.4byte	.LVL17
 1267 014d 0100     		.2byte	0x1
 1268 014f 51       		.byte	0x51
 1269 0150 1E000000 		.4byte	.LVL17
 1270 0154 26000000 		.4byte	.LVL20
 1271 0158 0100     		.2byte	0x1
 1272 015a 54       		.byte	0x54
 1273 015b 26000000 		.4byte	.LVL20
 1274 015f 2E000000 		.4byte	.LVL22
 1275 0163 0400     		.2byte	0x4
 1276 0165 F3       		.byte	0xf3
 1277 0166 01       		.uleb128 0x1
 1278 0167 51       		.byte	0x51
 1279 0168 9F       		.byte	0x9f
 1280 0169 2E000000 		.4byte	.LVL22
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 43


 1281 016d 30000000 		.4byte	.LVL23
 1282 0171 0100     		.2byte	0x1
 1283 0173 51       		.byte	0x51
 1284 0174 30000000 		.4byte	.LVL23
 1285 0178 40000000 		.4byte	.LFE56
 1286 017c 0400     		.2byte	0x4
 1287 017e F3       		.byte	0xf3
 1288 017f 01       		.uleb128 0x1
 1289 0180 51       		.byte	0x51
 1290 0181 9F       		.byte	0x9f
 1291 0182 00000000 		.4byte	0
 1292 0186 00000000 		.4byte	0
 1293              	.LLST8:
 1294 018a 00000000 		.4byte	.LVL12
 1295 018e 23000000 		.4byte	.LVL19-1
 1296 0192 0100     		.2byte	0x1
 1297 0194 52       		.byte	0x52
 1298 0195 23000000 		.4byte	.LVL19-1
 1299 0199 2E000000 		.4byte	.LVL22
 1300 019d 0400     		.2byte	0x4
 1301 019f F3       		.byte	0xf3
 1302 01a0 01       		.uleb128 0x1
 1303 01a1 52       		.byte	0x52
 1304 01a2 9F       		.byte	0x9f
 1305 01a3 2E000000 		.4byte	.LVL22
 1306 01a7 30000000 		.4byte	.LVL23
 1307 01ab 0100     		.2byte	0x1
 1308 01ad 52       		.byte	0x52
 1309 01ae 30000000 		.4byte	.LVL23
 1310 01b2 40000000 		.4byte	.LFE56
 1311 01b6 0400     		.2byte	0x4
 1312 01b8 F3       		.byte	0xf3
 1313 01b9 01       		.uleb128 0x1
 1314 01ba 52       		.byte	0x52
 1315 01bb 9F       		.byte	0x9f
 1316 01bc 00000000 		.4byte	0
 1317 01c0 00000000 		.4byte	0
 1318              	.LLST9:
 1319 01c4 2A000000 		.4byte	.LVL21
 1320 01c8 2E000000 		.4byte	.LVL22
 1321 01cc 0200     		.2byte	0x2
 1322 01ce 30       		.byte	0x30
 1323 01cf 9F       		.byte	0x9f
 1324 01d0 30000000 		.4byte	.LVL23
 1325 01d4 40000000 		.4byte	.LFE56
 1326 01d8 0100     		.2byte	0x1
 1327 01da 50       		.byte	0x50
 1328 01db 00000000 		.4byte	0
 1329 01df 00000000 		.4byte	0
 1330              	.LLST10:
 1331 01e3 06000000 		.4byte	.LVL13
 1332 01e7 12000000 		.4byte	.LVL14
 1333 01eb 0100     		.2byte	0x1
 1334 01ed 50       		.byte	0x50
 1335 01ee 00000000 		.4byte	0
 1336 01f2 00000000 		.4byte	0
 1337              	.LLST11:
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 44


 1338 01f6 16000000 		.4byte	.LVL15
 1339 01fa 18000000 		.4byte	.LVL16
 1340 01fe 0100     		.2byte	0x1
 1341 0200 52       		.byte	0x52
 1342 0201 00000000 		.4byte	0
 1343 0205 00000000 		.4byte	0
 1344              	.LLST12:
 1345 0209 16000000 		.4byte	.LVL15
 1346 020d 18000000 		.4byte	.LVL16
 1347 0211 0100     		.2byte	0x1
 1348 0213 50       		.byte	0x50
 1349 0214 00000000 		.4byte	0
 1350 0218 00000000 		.4byte	0
 1351              	.LLST13:
 1352 021c 18000000 		.4byte	.LVL16
 1353 0220 1E000000 		.4byte	.LVL17
 1354 0224 0100     		.2byte	0x1
 1355 0226 51       		.byte	0x51
 1356 0227 1E000000 		.4byte	.LVL17
 1357 022b 26000000 		.4byte	.LVL20
 1358 022f 0100     		.2byte	0x1
 1359 0231 54       		.byte	0x54
 1360 0232 26000000 		.4byte	.LVL20
 1361 0236 2A000000 		.4byte	.LVL21
 1362 023a 0400     		.2byte	0x4
 1363 023c F3       		.byte	0xf3
 1364 023d 01       		.uleb128 0x1
 1365 023e 51       		.byte	0x51
 1366 023f 9F       		.byte	0x9f
 1367 0240 00000000 		.4byte	0
 1368 0244 00000000 		.4byte	0
 1369              	.LLST14:
 1370 0248 18000000 		.4byte	.LVL16
 1371 024c 20000000 		.4byte	.LVL18
 1372 0250 0100     		.2byte	0x1
 1373 0252 50       		.byte	0x50
 1374 0253 20000000 		.4byte	.LVL18
 1375 0257 2A000000 		.4byte	.LVL21
 1376 025b 0100     		.2byte	0x1
 1377 025d 55       		.byte	0x55
 1378 025e 00000000 		.4byte	0
 1379 0262 00000000 		.4byte	0
 1380              	.LLST15:
 1381 0266 00000000 		.4byte	.LVL25
 1382 026a 0C000000 		.4byte	.LVL27
 1383 026e 0100     		.2byte	0x1
 1384 0270 50       		.byte	0x50
 1385 0271 0C000000 		.4byte	.LVL27
 1386 0275 20000000 		.4byte	.LVL36
 1387 0279 0100     		.2byte	0x1
 1388 027b 55       		.byte	0x55
 1389 027c 20000000 		.4byte	.LVL36
 1390 0280 2C000000 		.4byte	.LFE57
 1391 0284 0400     		.2byte	0x4
 1392 0286 F3       		.byte	0xf3
 1393 0287 01       		.uleb128 0x1
 1394 0288 50       		.byte	0x50
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 45


 1395 0289 9F       		.byte	0x9f
 1396 028a 00000000 		.4byte	0
 1397 028e 00000000 		.4byte	0
 1398              	.LLST16:
 1399 0292 00000000 		.4byte	.LVL25
 1400 0296 0A000000 		.4byte	.LVL26
 1401 029a 0100     		.2byte	0x1
 1402 029c 51       		.byte	0x51
 1403 029d 0A000000 		.4byte	.LVL26
 1404 02a1 20000000 		.4byte	.LVL35
 1405 02a5 0100     		.2byte	0x1
 1406 02a7 54       		.byte	0x54
 1407 02a8 20000000 		.4byte	.LVL35
 1408 02ac 2C000000 		.4byte	.LFE57
 1409 02b0 0400     		.2byte	0x4
 1410 02b2 F3       		.byte	0xf3
 1411 02b3 01       		.uleb128 0x1
 1412 02b4 51       		.byte	0x51
 1413 02b5 9F       		.byte	0x9f
 1414 02b6 00000000 		.4byte	0
 1415 02ba 00000000 		.4byte	0
 1416              	.LLST17:
 1417 02be 1A000000 		.4byte	.LVL32
 1418 02c2 1E000000 		.4byte	.LVL33
 1419 02c6 0200     		.2byte	0x2
 1420 02c8 30       		.byte	0x30
 1421 02c9 9F       		.byte	0x9f
 1422 02ca 20000000 		.4byte	.LVL34
 1423 02ce 2C000000 		.4byte	.LFE57
 1424 02d2 0100     		.2byte	0x1
 1425 02d4 50       		.byte	0x50
 1426 02d5 00000000 		.4byte	0
 1427 02d9 00000000 		.4byte	0
 1428              	.LLST18:
 1429 02dd 10000000 		.4byte	.LVL28
 1430 02e1 12000000 		.4byte	.LVL29
 1431 02e5 0100     		.2byte	0x1
 1432 02e7 55       		.byte	0x55
 1433 02e8 00000000 		.4byte	0
 1434 02ec 00000000 		.4byte	0
 1435              	.LLST19:
 1436 02f0 16000000 		.4byte	.LVL30
 1437 02f4 18000000 		.4byte	.LVL31
 1438 02f8 0100     		.2byte	0x1
 1439 02fa 55       		.byte	0x55
 1440 02fb 00000000 		.4byte	0
 1441 02ff 00000000 		.4byte	0
 1442              		.section	.debug_aranges,"",%progbits
 1443 0000 2C000000 		.4byte	0x2c
 1444 0004 0200     		.2byte	0x2
 1445 0006 00000000 		.4byte	.Ldebug_info0
 1446 000a 04       		.byte	0x4
 1447 000b 00       		.byte	0
 1448 000c 0000     		.2byte	0
 1449 000e 0000     		.2byte	0
 1450 0010 00000000 		.4byte	.LFB55
 1451 0014 34000000 		.4byte	.LFE55-.LFB55
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 46


 1452 0018 00000000 		.4byte	.LFB56
 1453 001c 40000000 		.4byte	.LFE56-.LFB56
 1454 0020 00000000 		.4byte	.LFB57
 1455 0024 2C000000 		.4byte	.LFE57-.LFB57
 1456 0028 00000000 		.4byte	0
 1457 002c 00000000 		.4byte	0
 1458              		.section	.debug_ranges,"",%progbits
 1459              	.Ldebug_ranges0:
 1460 0000 00000000 		.4byte	.LFB55
 1461 0004 34000000 		.4byte	.LFE55
 1462 0008 00000000 		.4byte	.LFB56
 1463 000c 40000000 		.4byte	.LFE56
 1464 0010 00000000 		.4byte	.LFB57
 1465 0014 2C000000 		.4byte	.LFE57
 1466 0018 00000000 		.4byte	0
 1467 001c 00000000 		.4byte	0
 1468              		.section	.debug_line,"",%progbits
 1469              	.Ldebug_line0:
 1470 0000 71020000 		.section	.debug_str,"MS",%progbits,1
 1470      0200E001 
 1470      00000201 
 1470      FB0E0D00 
 1470      01010101 
 1471              	.LASF41:
 1472 0000 72657453 		.ascii	"retStatus\000"
 1472      74617475 
 1472      7300
 1473              	.LASF34:
 1474 000a 43795F49 		.ascii	"Cy_IPC_Drv_WriteDataValue\000"
 1474      50435F44 
 1474      72765F57 
 1474      72697465 
 1474      44617461 
 1475              	.LASF32:
 1476 0024 43795F49 		.ascii	"Cy_IPC_Drv_ReleaseNotify\000"
 1476      50435F44 
 1476      72765F52 
 1476      656C6561 
 1476      73654E6F 
 1477              	.LASF33:
 1478 003d 43795F49 		.ascii	"Cy_IPC_Drv_AcquireNotify\000"
 1478      50435F44 
 1478      72765F41 
 1478      63717569 
 1478      72654E6F 
 1479              	.LASF12:
 1480 0056 41435155 		.ascii	"ACQUIRE\000"
 1480      49524500 
 1481              	.LASF38:
 1482 005e 43795F49 		.ascii	"Cy_IPC_Drv_LockRelease\000"
 1482      50435F44 
 1482      72765F4C 
 1482      6F636B52 
 1482      656C6561 
 1483              	.LASF40:
 1484 0075 6D657373 		.ascii	"message\000"
 1484      61676500 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 47


 1485              	.LASF16:
 1486 007d 4C4F434B 		.ascii	"LOCK_STATUS\000"
 1486      5F535441 
 1486      54555300 
 1487              	.LASF37:
 1488 0089 72656C65 		.ascii	"releaseEventIntr\000"
 1488      61736545 
 1488      76656E74 
 1488      496E7472 
 1488      00
 1489              	.LASF15:
 1490 009a 44415441 		.ascii	"DATA\000"
 1490      00
 1491              	.LASF21:
 1492 009f 666C6F61 		.ascii	"float\000"
 1492      7400
 1493              	.LASF0:
 1494 00a5 7369676E 		.ascii	"signed char\000"
 1494      65642063 
 1494      68617200 
 1495              	.LASF13:
 1496 00b1 52454C45 		.ascii	"RELEASE\000"
 1496      41534500 
 1497              	.LASF5:
 1498 00b9 6C6F6E67 		.ascii	"long unsigned int\000"
 1498      20756E73 
 1498      69676E65 
 1498      6420696E 
 1498      7400
 1499              	.LASF3:
 1500 00cb 73686F72 		.ascii	"short unsigned int\000"
 1500      7420756E 
 1500      7369676E 
 1500      65642069 
 1500      6E7400
 1501              	.LASF1:
 1502 00de 756E7369 		.ascii	"unsigned char\000"
 1502      676E6564 
 1502      20636861 
 1502      7200
 1503              	.LASF31:
 1504 00ec 43795F49 		.ascii	"Cy_IPC_Drv_LockAcquire\000"
 1504      50435F44 
 1504      72765F4C 
 1504      6F636B41 
 1504      63717569 
 1505              	.LASF22:
 1506 0103 646F7562 		.ascii	"double\000"
 1506      6C6500
 1507              	.LASF17:
 1508 010a 52455345 		.ascii	"RESERVED\000"
 1508      52564544 
 1508      00
 1509              	.LASF9:
 1510 0113 5F5F7569 		.ascii	"__uint32_t\000"
 1510      6E743332 
 1510      5F7400
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 48


 1511              	.LASF35:
 1512 011e 64617461 		.ascii	"dataValue\000"
 1512      56616C75 
 1512      6500
 1513              	.LASF28:
 1514 0128 62617365 		.ascii	"base\000"
 1514      00
 1515              	.LASF8:
 1516 012d 756E7369 		.ascii	"unsigned int\000"
 1516      676E6564 
 1516      20696E74 
 1516      00
 1517              	.LASF39:
 1518 013a 43795F49 		.ascii	"Cy_IPC_Drv_SendMsgWord\000"
 1518      50435F44 
 1518      72765F53 
 1518      656E644D 
 1518      7367576F 
 1519              	.LASF25:
 1520 0151 43595F49 		.ascii	"CY_IPC_DRV_ERROR\000"
 1520      50435F44 
 1520      52565F45 
 1520      52524F52 
 1520      00
 1521              	.LASF7:
 1522 0162 6C6F6E67 		.ascii	"long long unsigned int\000"
 1522      206C6F6E 
 1522      6720756E 
 1522      7369676E 
 1522      65642069 
 1523              	.LASF45:
 1524 0179 433A5C55 		.ascii	"C:\\Users\\Phuong\\Documents\\PSoC Creator\\Dec0820"
 1524      73657273 
 1524      5C506875 
 1524      6F6E675C 
 1524      446F6375 
 1525 01a7 31385C69 		.ascii	"18\\iot-sdk-iot-dev\\PSOC6_FreeRTOS+LwIP+MbedTLS_Az"
 1525      6F742D73 
 1525      646B2D69 
 1525      6F742D64 
 1525      65765C50 
 1526 01d8 7572652D 		.ascii	"ure-IOT-Hub-Demo\\PSOC6_FreeRTOS+LwIP+MbedTLS_Azure"
 1526      494F542D 
 1526      4875622D 
 1526      44656D6F 
 1526      5C50534F 
 1527 020a 2D494F54 		.ascii	"-IOT-Hub-Demo.cydsn\000"
 1527      2D487562 
 1527      2D44656D 
 1527      6F2E6379 
 1527      64736E00 
 1528              	.LASF30:
 1529 021e 43795F49 		.ascii	"Cy_IPC_Drv_IsLockAcquired\000"
 1529      50435F44 
 1529      72765F49 
 1529      734C6F63 
 1529      6B416371 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 49


 1530              	.LASF24:
 1531 0238 43595F49 		.ascii	"CY_IPC_DRV_SUCCESS\000"
 1531      50435F44 
 1531      52565F53 
 1531      55434345 
 1531      535300
 1532              	.LASF26:
 1533 024b 63795F65 		.ascii	"cy_en_ipcdrv_status_t\000"
 1533      6E5F6970 
 1533      63647276 
 1533      5F737461 
 1533      7475735F 
 1534              	.LASF11:
 1535 0261 73697A65 		.ascii	"sizetype\000"
 1535      74797065 
 1535      00
 1536              	.LASF6:
 1537 026a 6C6F6E67 		.ascii	"long long int\000"
 1537      206C6F6E 
 1537      6720696E 
 1537      7400
 1538              	.LASF20:
 1539 0278 63686172 		.ascii	"char\000"
 1539      00
 1540              	.LASF44:
 1541 027d 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 1541      72617465 
 1541      645F536F 
 1541      75726365 
 1541      5C50536F 
 1542 02ab 6970635C 		.ascii	"ipc\\cy_ipc_drv.c\000"
 1542      63795F69 
 1542      70635F64 
 1542      72762E63 
 1542      00
 1543              	.LASF36:
 1544 02bc 43795F49 		.ascii	"Cy_IPC_Drv_ReadDataValue\000"
 1544      50435F44 
 1544      72765F52 
 1544      65616444 
 1544      61746156 
 1545              	.LASF2:
 1546 02d5 73686F72 		.ascii	"short int\000"
 1546      7420696E 
 1546      7400
 1547              	.LASF42:
 1548 02df 43795F49 		.ascii	"Cy_IPC_Drv_ReadMsgWord\000"
 1548      50435F44 
 1548      72765F52 
 1548      6561644D 
 1548      7367576F 
 1549              	.LASF10:
 1550 02f6 75696E74 		.ascii	"uint32_t\000"
 1550      33325F74 
 1550      00
 1551              	.LASF4:
 1552 02ff 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccrDg8rD.s 			page 50


 1552      20696E74 
 1552      00
 1553              	.LASF23:
 1554 0308 6C6F6E67 		.ascii	"long double\000"
 1554      20646F75 
 1554      626C6500 
 1555              	.LASF43:
 1556 0314 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1556      43313120 
 1556      352E342E 
 1556      31203230 
 1556      31363036 
 1557 0347 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 1557      20726576 
 1557      6973696F 
 1557      6E203233 
 1557      37373135 
 1558 037a 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 1558      67202D66 
 1558      66756E63 
 1558      74696F6E 
 1558      2D736563 
 1559              	.LASF14:
 1560 03a6 4E4F5449 		.ascii	"NOTIFY\000"
 1560      465900
 1561              	.LASF46:
 1562 03ad 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 1562      79734C69 
 1562      625F4173 
 1562      73657274 
 1562      4661696C 
 1563              	.LASF19:
 1564 03c4 63686172 		.ascii	"char_t\000"
 1564      5F7400
 1565              	.LASF27:
 1566 03cb 5F426F6F 		.ascii	"_Bool\000"
 1566      6C00
 1567              	.LASF18:
 1568 03d1 4950435F 		.ascii	"IPC_STRUCT_Type\000"
 1568      53545255 
 1568      43545F54 
 1568      79706500 
 1569              	.LASF29:
 1570 03e1 6E6F7469 		.ascii	"notifyEventIntr\000"
 1570      66794576 
 1570      656E7449 
 1570      6E747200 
 1571              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
