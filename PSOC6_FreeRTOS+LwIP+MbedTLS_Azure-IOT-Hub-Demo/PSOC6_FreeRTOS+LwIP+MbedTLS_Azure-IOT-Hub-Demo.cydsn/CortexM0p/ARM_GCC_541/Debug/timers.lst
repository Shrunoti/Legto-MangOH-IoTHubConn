ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"timers.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	prvGetNextExpireTime, %function
  24              	prvGetNextExpireTime:
  25              	.LFB47:
  26              		.file 1 "Source\\FreeRTOS\\10.0.1\\Source\\timers.c"
   1:Source\FreeRTOS\10.0.1\Source/timers.c **** /*
   2:Source\FreeRTOS\10.0.1\Source/timers.c ****  * FreeRTOS Kernel V10.0.1
   3:Source\FreeRTOS\10.0.1\Source/timers.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Source\FreeRTOS\10.0.1\Source/timers.c ****  *
   5:Source\FreeRTOS\10.0.1\Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Source\FreeRTOS\10.0.1\Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Source\FreeRTOS\10.0.1\Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Source\FreeRTOS\10.0.1\Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Source\FreeRTOS\10.0.1\Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Source\FreeRTOS\10.0.1\Source/timers.c ****  * subject to the following conditions:
  11:Source\FreeRTOS\10.0.1\Source/timers.c ****  *
  12:Source\FreeRTOS\10.0.1\Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Source\FreeRTOS\10.0.1\Source/timers.c ****  * copies or substantial portions of the Software.
  14:Source\FreeRTOS\10.0.1\Source/timers.c ****  *
  15:Source\FreeRTOS\10.0.1\Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Source\FreeRTOS\10.0.1\Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Source\FreeRTOS\10.0.1\Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Source\FreeRTOS\10.0.1\Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Source\FreeRTOS\10.0.1\Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Source\FreeRTOS\10.0.1\Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Source\FreeRTOS\10.0.1\Source/timers.c ****  *
  22:Source\FreeRTOS\10.0.1\Source/timers.c ****  * http://www.FreeRTOS.org
  23:Source\FreeRTOS\10.0.1\Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Source\FreeRTOS\10.0.1\Source/timers.c ****  *
  25:Source\FreeRTOS\10.0.1\Source/timers.c ****  * 1 tab == 4 spaces!
  26:Source\FreeRTOS\10.0.1\Source/timers.c ****  */
  27:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  28:Source\FreeRTOS\10.0.1\Source/timers.c **** /* Standard includes. */
  29:Source\FreeRTOS\10.0.1\Source/timers.c **** #include <stdlib.h>
  30:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  31:Source\FreeRTOS\10.0.1\Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 2


  32:Source\FreeRTOS\10.0.1\Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Source\FreeRTOS\10.0.1\Source/timers.c **** task.h is included from an application file. */
  34:Source\FreeRTOS\10.0.1\Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  36:Source\FreeRTOS\10.0.1\Source/timers.c **** #include "FreeRTOS.h"
  37:Source\FreeRTOS\10.0.1\Source/timers.c **** #include "task.h"
  38:Source\FreeRTOS\10.0.1\Source/timers.c **** #include "queue.h"
  39:Source\FreeRTOS\10.0.1\Source/timers.c **** #include "timers.h"
  40:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  41:Source\FreeRTOS\10.0.1\Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Source\FreeRTOS\10.0.1\Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Source\FreeRTOS\10.0.1\Source/timers.c **** #endif
  44:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  45:Source\FreeRTOS\10.0.1\Source/timers.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:Source\FreeRTOS\10.0.1\Source/timers.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:Source\FreeRTOS\10.0.1\Source/timers.c **** header files above, but not in this file, in order to generate the correct
  48:Source\FreeRTOS\10.0.1\Source/timers.c **** privileged Vs unprivileged linkage and placement. */
  49:Source\FreeRTOS\10.0.1\Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  51:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  52:Source\FreeRTOS\10.0.1\Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Source\FreeRTOS\10.0.1\Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Source\FreeRTOS\10.0.1\Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Source\FreeRTOS\10.0.1\Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Source\FreeRTOS\10.0.1\Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  58:Source\FreeRTOS\10.0.1\Source/timers.c **** /* Misc definitions. */
  59:Source\FreeRTOS\10.0.1\Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  61:Source\FreeRTOS\10.0.1\Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Source\FreeRTOS\10.0.1\Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Source\FreeRTOS\10.0.1\Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Source\FreeRTOS\10.0.1\Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Source\FreeRTOS\10.0.1\Source/timers.c **** #endif
  66:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  67:Source\FreeRTOS\10.0.1\Source/timers.c **** /* The definition of the timers themselves. */
  68:Source\FreeRTOS\10.0.1\Source/timers.c **** typedef struct tmrTimerControl
  69:Source\FreeRTOS\10.0.1\Source/timers.c **** {
  70:Source\FreeRTOS\10.0.1\Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  71:Source\FreeRTOS\10.0.1\Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  72:Source\FreeRTOS\10.0.1\Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  73:Source\FreeRTOS\10.0.1\Source/timers.c **** 	UBaseType_t				uxAutoReload;		/*<< Set to pdTRUE if the timer should be automatically restarted on
  74:Source\FreeRTOS\10.0.1\Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  75:Source\FreeRTOS\10.0.1\Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  76:Source\FreeRTOS\10.0.1\Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  77:Source\FreeRTOS\10.0.1\Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  78:Source\FreeRTOS\10.0.1\Source/timers.c **** 	#endif
  79:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  80:Source\FreeRTOS\10.0.1\Source/timers.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  81:Source\FreeRTOS\10.0.1\Source/timers.c **** 		uint8_t 			ucStaticallyAllocated; /*<< Set to pdTRUE if the timer was created statically so no at
  82:Source\FreeRTOS\10.0.1\Source/timers.c **** 	#endif
  83:Source\FreeRTOS\10.0.1\Source/timers.c **** } xTIMER;
  84:Source\FreeRTOS\10.0.1\Source/timers.c **** 
  85:Source\FreeRTOS\10.0.1\Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:Source\FreeRTOS\10.0.1\Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  87:Source\FreeRTOS\10.0.1\Source/timers.c **** typedef xTIMER Timer_t;
  88:Source\FreeRTOS\10.0.1\Source/timers.c **** 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 3


  89:Source\FreeRTOS\10.0.1\Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  90:Source\FreeRTOS\10.0.1\Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  91:Source\FreeRTOS\10.0.1\Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
  92:Source\FreeRTOS\10.0.1\Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  93:Source\FreeRTOS\10.0.1\Source/timers.c **** and xCallbackParametersType respectively. */
  94:Source\FreeRTOS\10.0.1\Source/timers.c **** typedef struct tmrTimerParameters
  95:Source\FreeRTOS\10.0.1\Source/timers.c **** {
  96:Source\FreeRTOS\10.0.1\Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  97:Source\FreeRTOS\10.0.1\Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  98:Source\FreeRTOS\10.0.1\Source/timers.c **** } TimerParameter_t;
  99:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 100:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 101:Source\FreeRTOS\10.0.1\Source/timers.c **** typedef struct tmrCallbackParameters
 102:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 103:Source\FreeRTOS\10.0.1\Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 104:Source\FreeRTOS\10.0.1\Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 105:Source\FreeRTOS\10.0.1\Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 106:Source\FreeRTOS\10.0.1\Source/timers.c **** } CallbackParameters_t;
 107:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 108:Source\FreeRTOS\10.0.1\Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:Source\FreeRTOS\10.0.1\Source/timers.c **** that is used to determine which message type is valid. */
 110:Source\FreeRTOS\10.0.1\Source/timers.c **** typedef struct tmrTimerQueueMessage
 111:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 112:Source\FreeRTOS\10.0.1\Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 113:Source\FreeRTOS\10.0.1\Source/timers.c **** 	union
 114:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 115:Source\FreeRTOS\10.0.1\Source/timers.c **** 		TimerParameter_t xTimerParameters;
 116:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 117:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 118:Source\FreeRTOS\10.0.1\Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 119:Source\FreeRTOS\10.0.1\Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:Source\FreeRTOS\10.0.1\Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 121:Source\FreeRTOS\10.0.1\Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 122:Source\FreeRTOS\10.0.1\Source/timers.c **** 	} u;
 123:Source\FreeRTOS\10.0.1\Source/timers.c **** } DaemonTaskMessage_t;
 124:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 125:Source\FreeRTOS\10.0.1\Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:Source\FreeRTOS\10.0.1\Source/timers.c **** which static variables must be declared volatile. */
 127:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 128:Source\FreeRTOS\10.0.1\Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:Source\FreeRTOS\10.0.1\Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 130:Source\FreeRTOS\10.0.1\Source/timers.c **** timer service task is allowed to access these lists. */
 131:Source\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1;
 132:Source\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2;
 133:Source\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList;
 134:Source\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList;
 135:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 136:Source\FreeRTOS\10.0.1\Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 137:Source\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 138:Source\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 139:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 140:Source\FreeRTOS\10.0.1\Source/timers.c **** /*lint -restore */
 141:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 142:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 143:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 144:Source\FreeRTOS\10.0.1\Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 145:Source\FreeRTOS\10.0.1\Source/timers.c **** 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 4


 146:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 147:Source\FreeRTOS\10.0.1\Source/timers.c **** 	following callback function - which enables the application to optionally
 148:Source\FreeRTOS\10.0.1\Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 149:Source\FreeRTOS\10.0.1\Source/timers.c **** 	and TCB. */
 150:Source\FreeRTOS\10.0.1\Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 151:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 152:Source\FreeRTOS\10.0.1\Source/timers.c **** #endif
 153:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 154:Source\FreeRTOS\10.0.1\Source/timers.c **** /*
 155:Source\FreeRTOS\10.0.1\Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 156:Source\FreeRTOS\10.0.1\Source/timers.c ****  * been initialised already.
 157:Source\FreeRTOS\10.0.1\Source/timers.c ****  */
 158:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 159:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 160:Source\FreeRTOS\10.0.1\Source/timers.c **** /*
 161:Source\FreeRTOS\10.0.1\Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 162:Source\FreeRTOS\10.0.1\Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 163:Source\FreeRTOS\10.0.1\Source/timers.c ****  * xTimerQueue queue.
 164:Source\FreeRTOS\10.0.1\Source/timers.c ****  */
 165:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvTimerTask( void *pvParameters ) PRIVILEGED_FUNCTION;
 166:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 167:Source\FreeRTOS\10.0.1\Source/timers.c **** /*
 168:Source\FreeRTOS\10.0.1\Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 169:Source\FreeRTOS\10.0.1\Source/timers.c ****  * received on the timer queue.
 170:Source\FreeRTOS\10.0.1\Source/timers.c ****  */
 171:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 172:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 173:Source\FreeRTOS\10.0.1\Source/timers.c **** /*
 174:Source\FreeRTOS\10.0.1\Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 175:Source\FreeRTOS\10.0.1\Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 176:Source\FreeRTOS\10.0.1\Source/timers.c ****  */
 177:Source\FreeRTOS\10.0.1\Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 178:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 179:Source\FreeRTOS\10.0.1\Source/timers.c **** /*
 180:Source\FreeRTOS\10.0.1\Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 181:Source\FreeRTOS\10.0.1\Source/timers.c ****  * auto reload timer, then call its callback.
 182:Source\FreeRTOS\10.0.1\Source/timers.c ****  */
 183:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 184:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 185:Source\FreeRTOS\10.0.1\Source/timers.c **** /*
 186:Source\FreeRTOS\10.0.1\Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 187:Source\FreeRTOS\10.0.1\Source/timers.c ****  * current timer list does not still reference some timers.
 188:Source\FreeRTOS\10.0.1\Source/timers.c ****  */
 189:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 190:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 191:Source\FreeRTOS\10.0.1\Source/timers.c **** /*
 192:Source\FreeRTOS\10.0.1\Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 193:Source\FreeRTOS\10.0.1\Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 194:Source\FreeRTOS\10.0.1\Source/timers.c ****  */
 195:Source\FreeRTOS\10.0.1\Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 196:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 197:Source\FreeRTOS\10.0.1\Source/timers.c **** /*
 198:Source\FreeRTOS\10.0.1\Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 199:Source\FreeRTOS\10.0.1\Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 200:Source\FreeRTOS\10.0.1\Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 201:Source\FreeRTOS\10.0.1\Source/timers.c ****  * to pdTRUE.
 202:Source\FreeRTOS\10.0.1\Source/timers.c ****  */
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 5


 203:Source\FreeRTOS\10.0.1\Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 204:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 205:Source\FreeRTOS\10.0.1\Source/timers.c **** /*
 206:Source\FreeRTOS\10.0.1\Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 207:Source\FreeRTOS\10.0.1\Source/timers.c ****  * until either a timer does expire or a command is received.
 208:Source\FreeRTOS\10.0.1\Source/timers.c ****  */
 209:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 210:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 211:Source\FreeRTOS\10.0.1\Source/timers.c **** /*
 212:Source\FreeRTOS\10.0.1\Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 213:Source\FreeRTOS\10.0.1\Source/timers.c ****  * dynamically to fill in the structure's members.
 214:Source\FreeRTOS\10.0.1\Source/timers.c ****  */
 215:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 216:Source\FreeRTOS\10.0.1\Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 217:Source\FreeRTOS\10.0.1\Source/timers.c **** 									const UBaseType_t uxAutoReload,
 218:Source\FreeRTOS\10.0.1\Source/timers.c **** 									void * const pvTimerID,
 219:Source\FreeRTOS\10.0.1\Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 220:Source\FreeRTOS\10.0.1\Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 221:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 222:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 223:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 224:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 225:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xReturn = pdFAIL;
 226:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 227:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* This function is called when the scheduler is started if
 228:Source\FreeRTOS\10.0.1\Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 229:Source\FreeRTOS\10.0.1\Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 230:Source\FreeRTOS\10.0.1\Source/timers.c **** 	been created then the initialisation will already have been performed. */
 231:Source\FreeRTOS\10.0.1\Source/timers.c **** 	prvCheckForValidListAndQueue();
 232:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 233:Source\FreeRTOS\10.0.1\Source/timers.c **** 	if( xTimerQueue != NULL )
 234:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 235:Source\FreeRTOS\10.0.1\Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 236:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 237:Source\FreeRTOS\10.0.1\Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 238:Source\FreeRTOS\10.0.1\Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 239:Source\FreeRTOS\10.0.1\Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 240:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 241:Source\FreeRTOS\10.0.1\Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 242:Source\FreeRTOS\10.0.1\Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 243:Source\FreeRTOS\10.0.1\Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 244:Source\FreeRTOS\10.0.1\Source/timers.c **** 													ulTimerTaskStackSize,
 245:Source\FreeRTOS\10.0.1\Source/timers.c **** 													NULL,
 246:Source\FreeRTOS\10.0.1\Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 247:Source\FreeRTOS\10.0.1\Source/timers.c **** 													pxTimerTaskStackBuffer,
 248:Source\FreeRTOS\10.0.1\Source/timers.c **** 													pxTimerTaskTCBBuffer );
 249:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 250:Source\FreeRTOS\10.0.1\Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 251:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 252:Source\FreeRTOS\10.0.1\Source/timers.c **** 				xReturn = pdPASS;
 253:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 254:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 255:Source\FreeRTOS\10.0.1\Source/timers.c **** 		#else
 256:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 257:Source\FreeRTOS\10.0.1\Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 258:Source\FreeRTOS\10.0.1\Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 259:Source\FreeRTOS\10.0.1\Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 6


 260:Source\FreeRTOS\10.0.1\Source/timers.c **** 									NULL,
 261:Source\FreeRTOS\10.0.1\Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 262:Source\FreeRTOS\10.0.1\Source/timers.c **** 									&xTimerTaskHandle );
 263:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 264:Source\FreeRTOS\10.0.1\Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 265:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 266:Source\FreeRTOS\10.0.1\Source/timers.c **** 	else
 267:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 268:Source\FreeRTOS\10.0.1\Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 269:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 270:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 271:Source\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xReturn );
 272:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xReturn;
 273:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 274:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 275:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 276:Source\FreeRTOS\10.0.1\Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 277:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 278:Source\FreeRTOS\10.0.1\Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 279:Source\FreeRTOS\10.0.1\Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 280:Source\FreeRTOS\10.0.1\Source/timers.c **** 								const UBaseType_t uxAutoReload,
 281:Source\FreeRTOS\10.0.1\Source/timers.c **** 								void * const pvTimerID,
 282:Source\FreeRTOS\10.0.1\Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 283:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 284:Source\FreeRTOS\10.0.1\Source/timers.c **** 	Timer_t *pxNewTimer;
 285:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 286:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 287:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 288:Source\FreeRTOS\10.0.1\Source/timers.c **** 		if( pxNewTimer != NULL )
 289:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 290:Source\FreeRTOS\10.0.1\Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 291:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 292:Source\FreeRTOS\10.0.1\Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 293:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 294:Source\FreeRTOS\10.0.1\Source/timers.c **** 				/* Timers can be created statically or dynamically, so note this
 295:Source\FreeRTOS\10.0.1\Source/timers.c **** 				timer was created dynamically in case the timer is later
 296:Source\FreeRTOS\10.0.1\Source/timers.c **** 				deleted. */
 297:Source\FreeRTOS\10.0.1\Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdFALSE;
 298:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 299:Source\FreeRTOS\10.0.1\Source/timers.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 300:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 301:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 302:Source\FreeRTOS\10.0.1\Source/timers.c **** 		return pxNewTimer;
 303:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 304:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 305:Source\FreeRTOS\10.0.1\Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 306:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 307:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 308:Source\FreeRTOS\10.0.1\Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 310:Source\FreeRTOS\10.0.1\Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 311:Source\FreeRTOS\10.0.1\Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 312:Source\FreeRTOS\10.0.1\Source/timers.c **** 										const UBaseType_t uxAutoReload,
 313:Source\FreeRTOS\10.0.1\Source/timers.c **** 										void * const pvTimerID,
 314:Source\FreeRTOS\10.0.1\Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 315:Source\FreeRTOS\10.0.1\Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 316:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 7


 317:Source\FreeRTOS\10.0.1\Source/timers.c **** 	Timer_t *pxNewTimer;
 318:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 319:Source\FreeRTOS\10.0.1\Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 320:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 321:Source\FreeRTOS\10.0.1\Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 322:Source\FreeRTOS\10.0.1\Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 323:Source\FreeRTOS\10.0.1\Source/timers.c **** 			structure. */
 324:Source\FreeRTOS\10.0.1\Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 325:Source\FreeRTOS\10.0.1\Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 326:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 327:Source\FreeRTOS\10.0.1\Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 329:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Source\FreeRTOS\10.0.1\Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 332:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 333:Source\FreeRTOS\10.0.1\Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 335:Source\FreeRTOS\10.0.1\Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 336:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 337:Source\FreeRTOS\10.0.1\Source/timers.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 338:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 339:Source\FreeRTOS\10.0.1\Source/timers.c **** 				/* Timers can be created statically or dynamically so note this
 340:Source\FreeRTOS\10.0.1\Source/timers.c **** 				timer was created statically in case it is later deleted. */
 341:Source\FreeRTOS\10.0.1\Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdTRUE;
 342:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 343:Source\FreeRTOS\10.0.1\Source/timers.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 344:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 345:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 346:Source\FreeRTOS\10.0.1\Source/timers.c **** 		return pxNewTimer;
 347:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 348:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 349:Source\FreeRTOS\10.0.1\Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 350:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 351:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 352:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 353:Source\FreeRTOS\10.0.1\Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 354:Source\FreeRTOS\10.0.1\Source/timers.c **** 									const UBaseType_t uxAutoReload,
 355:Source\FreeRTOS\10.0.1\Source/timers.c **** 									void * const pvTimerID,
 356:Source\FreeRTOS\10.0.1\Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 357:Source\FreeRTOS\10.0.1\Source/timers.c **** 									Timer_t *pxNewTimer )
 358:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 359:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 360:Source\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 361:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 362:Source\FreeRTOS\10.0.1\Source/timers.c **** 	if( pxNewTimer != NULL )
 363:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 364:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 365:Source\FreeRTOS\10.0.1\Source/timers.c **** 		created/initialised. */
 366:Source\FreeRTOS\10.0.1\Source/timers.c **** 		prvCheckForValidListAndQueue();
 367:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 368:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Initialise the timer structure members using the function
 369:Source\FreeRTOS\10.0.1\Source/timers.c **** 		parameters. */
 370:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 371:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 372:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 373:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 8


 374:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 375:Source\FreeRTOS\10.0.1\Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 376:Source\FreeRTOS\10.0.1\Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 378:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 379:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 380:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 381:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 383:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Source\FreeRTOS\10.0.1\Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 386:Source\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 387:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 388:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Source\FreeRTOS\10.0.1\Source/timers.c **** 	on a particular timer definition. */
 390:Source\FreeRTOS\10.0.1\Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 392:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 396:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 397:Source\FreeRTOS\10.0.1\Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 399:Source\FreeRTOS\10.0.1\Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 401:Source\FreeRTOS\10.0.1\Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 403:Source\FreeRTOS\10.0.1\Source/timers.c **** 			else
 404:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 405:Source\FreeRTOS\10.0.1\Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 407:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 408:Source\FreeRTOS\10.0.1\Source/timers.c **** 		else
 409:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 410:Source\FreeRTOS\10.0.1\Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 412:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 413:Source\FreeRTOS\10.0.1\Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 415:Source\FreeRTOS\10.0.1\Source/timers.c **** 	else
 416:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 417:Source\FreeRTOS\10.0.1\Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 419:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 420:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xReturn;
 421:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 422:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 423:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 424:Source\FreeRTOS\10.0.1\Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 426:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Source\FreeRTOS\10.0.1\Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Source\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xTimerTaskHandle;
 430:Source\FreeRTOS\10.0.1\Source/timers.c **** }
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 9


 431:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 432:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 433:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 435:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 436:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 437:Source\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 438:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 440:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 441:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 442:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 443:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 444:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 445:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xReturn;
 446:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 447:Source\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 448:Source\FreeRTOS\10.0.1\Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 449:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xReturn;
 450:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 451:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 452:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 453:Source\FreeRTOS\10.0.1\Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 454:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 455:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 456:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 457:Source\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 458:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return pxTimer->pcTimerName;
 459:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 460:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 461:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 462:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 463:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 464:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xResult;
 465:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 466:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 467:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 468:Source\FreeRTOS\10.0.1\Source/timers.c **** 	been performed to ensure the list is not empty. */
 469:Source\FreeRTOS\10.0.1\Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 470:Source\FreeRTOS\10.0.1\Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 471:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 472:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 473:Source\FreeRTOS\10.0.1\Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 474:Source\FreeRTOS\10.0.1\Source/timers.c **** 	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 475:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 476:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 477:Source\FreeRTOS\10.0.1\Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 478:Source\FreeRTOS\10.0.1\Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 479:Source\FreeRTOS\10.0.1\Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 480:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 481:Source\FreeRTOS\10.0.1\Source/timers.c **** 			/* The timer expired before it was added to the active timer
 482:Source\FreeRTOS\10.0.1\Source/timers.c **** 			list.  Reload it now.  */
 483:Source\FreeRTOS\10.0.1\Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 484:Source\FreeRTOS\10.0.1\Source/timers.c **** 			configASSERT( xResult );
 485:Source\FreeRTOS\10.0.1\Source/timers.c **** 			( void ) xResult;
 486:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 487:Source\FreeRTOS\10.0.1\Source/timers.c **** 		else
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 10


 488:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 489:Source\FreeRTOS\10.0.1\Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 490:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 491:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 492:Source\FreeRTOS\10.0.1\Source/timers.c **** 	else
 493:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 494:Source\FreeRTOS\10.0.1\Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 495:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 496:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 497:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* Call the timer callback. */
 498:Source\FreeRTOS\10.0.1\Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 499:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 500:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 501:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 502:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvTimerTask( void *pvParameters )
 503:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 504:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xNextExpireTime;
 505:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xListWasEmpty;
 506:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 507:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* Just to avoid compiler warnings. */
 508:Source\FreeRTOS\10.0.1\Source/timers.c **** 	( void ) pvParameters;
 509:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 510:Source\FreeRTOS\10.0.1\Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 511:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 512:Source\FreeRTOS\10.0.1\Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 513:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 514:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 515:Source\FreeRTOS\10.0.1\Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 516:Source\FreeRTOS\10.0.1\Source/timers.c **** 		application includes initialisation code that would benefit from
 517:Source\FreeRTOS\10.0.1\Source/timers.c **** 		executing after the scheduler has been started. */
 518:Source\FreeRTOS\10.0.1\Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 519:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 520:Source\FreeRTOS\10.0.1\Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 521:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 522:Source\FreeRTOS\10.0.1\Source/timers.c **** 	for( ;; )
 523:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 524:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 525:Source\FreeRTOS\10.0.1\Source/timers.c **** 		obtain the time at which the next timer will expire. */
 526:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 527:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 528:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 529:Source\FreeRTOS\10.0.1\Source/timers.c **** 		until either a timer does expire, or a command is received. */
 530:Source\FreeRTOS\10.0.1\Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 531:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 532:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Empty the command queue. */
 533:Source\FreeRTOS\10.0.1\Source/timers.c **** 		prvProcessReceivedCommands();
 534:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 535:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 536:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 537:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 538:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 539:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 540:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimeNow;
 541:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 542:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 543:Source\FreeRTOS\10.0.1\Source/timers.c **** 	vTaskSuspendAll();
 544:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 11


 545:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 546:Source\FreeRTOS\10.0.1\Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 547:Source\FreeRTOS\10.0.1\Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 548:Source\FreeRTOS\10.0.1\Source/timers.c **** 		when the lists were switched will have been processed within the
 549:Source\FreeRTOS\10.0.1\Source/timers.c **** 		prvSampleTimeNow() function. */
 550:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 551:Source\FreeRTOS\10.0.1\Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 552:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 553:Source\FreeRTOS\10.0.1\Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 554:Source\FreeRTOS\10.0.1\Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 555:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 556:Source\FreeRTOS\10.0.1\Source/timers.c **** 				( void ) xTaskResumeAll();
 557:Source\FreeRTOS\10.0.1\Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 558:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 559:Source\FreeRTOS\10.0.1\Source/timers.c **** 			else
 560:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 561:Source\FreeRTOS\10.0.1\Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 562:Source\FreeRTOS\10.0.1\Source/timers.c **** 				time has not been reached yet.  This task should therefore
 563:Source\FreeRTOS\10.0.1\Source/timers.c **** 				block to wait for the next expire time or a command to be
 564:Source\FreeRTOS\10.0.1\Source/timers.c **** 				received - whichever comes first.  The following line cannot
 565:Source\FreeRTOS\10.0.1\Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 566:Source\FreeRTOS\10.0.1\Source/timers.c **** 				case when the current timer list is empty. */
 567:Source\FreeRTOS\10.0.1\Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 568:Source\FreeRTOS\10.0.1\Source/timers.c **** 				{
 569:Source\FreeRTOS\10.0.1\Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 570:Source\FreeRTOS\10.0.1\Source/timers.c **** 					also empty? */
 571:Source\FreeRTOS\10.0.1\Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 572:Source\FreeRTOS\10.0.1\Source/timers.c **** 				}
 573:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 574:Source\FreeRTOS\10.0.1\Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 575:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 576:Source\FreeRTOS\10.0.1\Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 577:Source\FreeRTOS\10.0.1\Source/timers.c **** 				{
 578:Source\FreeRTOS\10.0.1\Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 579:Source\FreeRTOS\10.0.1\Source/timers.c **** 					block time to expire.  If a command arrived between the
 580:Source\FreeRTOS\10.0.1\Source/timers.c **** 					critical section being exited and this yield then the yield
 581:Source\FreeRTOS\10.0.1\Source/timers.c **** 					will not cause the task to block. */
 582:Source\FreeRTOS\10.0.1\Source/timers.c **** 					portYIELD_WITHIN_API();
 583:Source\FreeRTOS\10.0.1\Source/timers.c **** 				}
 584:Source\FreeRTOS\10.0.1\Source/timers.c **** 				else
 585:Source\FreeRTOS\10.0.1\Source/timers.c **** 				{
 586:Source\FreeRTOS\10.0.1\Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 587:Source\FreeRTOS\10.0.1\Source/timers.c **** 				}
 588:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 589:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 590:Source\FreeRTOS\10.0.1\Source/timers.c **** 		else
 591:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 592:Source\FreeRTOS\10.0.1\Source/timers.c **** 			( void ) xTaskResumeAll();
 593:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 594:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 595:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 596:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 597:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 598:Source\FreeRTOS\10.0.1\Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 599:Source\FreeRTOS\10.0.1\Source/timers.c **** {
  27              		.loc 1 599 0
  28              		.cfi_startproc
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 12


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 600:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xNextExpireTime;
 601:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 602:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 603:Source\FreeRTOS\10.0.1\Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 604:Source\FreeRTOS\10.0.1\Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 605:Source\FreeRTOS\10.0.1\Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 606:Source\FreeRTOS\10.0.1\Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 607:Source\FreeRTOS\10.0.1\Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 608:Source\FreeRTOS\10.0.1\Source/timers.c **** 	re-assessed.  */
 609:Source\FreeRTOS\10.0.1\Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  33              		.loc 1 609 0
  34 0000 064B     		ldr	r3, .L4
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 1368     		ldr	r3, [r2]
  37 0006 5942     		rsbs	r1, r3, #0
  38 0008 4B41     		adcs	r3, r3, r1
  39 000a 0360     		str	r3, [r0]
 610:Source\FreeRTOS\10.0.1\Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  40              		.loc 1 610 0
  41 000c 002B     		cmp	r3, #0
  42 000e 02D1     		bne	.L3
 611:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 612:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  43              		.loc 1 612 0
  44 0010 D368     		ldr	r3, [r2, #12]
  45 0012 1868     		ldr	r0, [r3]
  46              	.LVL1:
  47 0014 00E0     		b	.L2
  48              	.LVL2:
  49              	.L3:
 613:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 614:Source\FreeRTOS\10.0.1\Source/timers.c **** 	else
 615:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 616:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 617:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  50              		.loc 1 617 0
  51 0016 0020     		movs	r0, #0
  52              	.LVL3:
  53              	.L2:
 618:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 619:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 620:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xNextExpireTime;
 621:Source\FreeRTOS\10.0.1\Source/timers.c **** }
  54              		.loc 1 621 0
  55              		@ sp needed
  56 0018 7047     		bx	lr
  57              	.L5:
  58 001a C046     		.align	2
  59              	.L4:
  60 001c 00000000 		.word	.LANCHOR0
  61              		.cfi_endproc
  62              	.LFE47:
  63              		.size	prvGetNextExpireTime, .-prvGetNextExpireTime
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 13


  64              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  65              		.align	2
  66              		.code	16
  67              		.thumb_func
  68              		.type	prvInsertTimerInActiveList, %function
  69              	prvInsertTimerInActiveList:
  70              	.LFB49:
 622:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 623:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 624:Source\FreeRTOS\10.0.1\Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 625:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 626:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimeNow;
 627:Source\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 628:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 629:Source\FreeRTOS\10.0.1\Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 630:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 631:Source\FreeRTOS\10.0.1\Source/timers.c **** 	if( xTimeNow < xLastTime )
 632:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 633:Source\FreeRTOS\10.0.1\Source/timers.c **** 		prvSwitchTimerLists();
 634:Source\FreeRTOS\10.0.1\Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 635:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 636:Source\FreeRTOS\10.0.1\Source/timers.c **** 	else
 637:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 638:Source\FreeRTOS\10.0.1\Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 639:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 640:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 641:Source\FreeRTOS\10.0.1\Source/timers.c **** 	xLastTime = xTimeNow;
 642:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 643:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xTimeNow;
 644:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 645:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 646:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 647:Source\FreeRTOS\10.0.1\Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 648:Source\FreeRTOS\10.0.1\Source/timers.c **** {
  71              		.loc 1 648 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              	.LVL4:
  76 0000 10B5     		push	{r4, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
  80              	.LVL5:
 649:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 650:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 651:Source\FreeRTOS\10.0.1\Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  81              		.loc 1 651 0
  82 0002 4160     		str	r1, [r0, #4]
 652:Source\FreeRTOS\10.0.1\Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  83              		.loc 1 652 0
  84 0004 0061     		str	r0, [r0, #16]
 653:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 654:Source\FreeRTOS\10.0.1\Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  85              		.loc 1 654 0
  86 0006 9142     		cmp	r1, r2
  87 0008 0AD8     		bhi	.L7
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 14


 655:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 656:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 657:Source\FreeRTOS\10.0.1\Source/timers.c **** 		timer was issued, and the time the command was processed? */
 658:Source\FreeRTOS\10.0.1\Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  88              		.loc 1 658 0
  89 000a D21A     		subs	r2, r2, r3
  90              	.LVL6:
  91 000c 8369     		ldr	r3, [r0, #24]
  92              	.LVL7:
  93 000e 9A42     		cmp	r2, r3
  94 0010 11D2     		bcs	.L10
 659:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 660:Source\FreeRTOS\10.0.1\Source/timers.c **** 			/* The time between a command being issued and the command being
 661:Source\FreeRTOS\10.0.1\Source/timers.c **** 			processed actually exceeds the timers period.  */
 662:Source\FreeRTOS\10.0.1\Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 663:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 664:Source\FreeRTOS\10.0.1\Source/timers.c **** 		else
 665:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 666:Source\FreeRTOS\10.0.1\Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
  95              		.loc 1 666 0
  96 0012 011D     		adds	r1, r0, #4
  97              	.LVL8:
  98 0014 0A4B     		ldr	r3, .L12
  99 0016 5868     		ldr	r0, [r3, #4]
 100              	.LVL9:
 101 0018 FFF7FEFF 		bl	vListInsert
 102              	.LVL10:
 649:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 103              		.loc 1 649 0
 104 001c 0020     		movs	r0, #0
 105 001e 0DE0     		b	.L8
 106              	.LVL11:
 107              	.L7:
 667:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 668:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 669:Source\FreeRTOS\10.0.1\Source/timers.c **** 	else
 670:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 671:Source\FreeRTOS\10.0.1\Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 108              		.loc 1 671 0
 109 0020 9A42     		cmp	r2, r3
 110 0022 01D2     		bcs	.L9
 111              		.loc 1 671 0 is_stmt 0 discriminator 1
 112 0024 9942     		cmp	r1, r3
 113 0026 08D2     		bcs	.L11
 114              	.L9:
 672:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 673:Source\FreeRTOS\10.0.1\Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 674:Source\FreeRTOS\10.0.1\Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 675:Source\FreeRTOS\10.0.1\Source/timers.c **** 			its expiry time and should be processed immediately. */
 676:Source\FreeRTOS\10.0.1\Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 677:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 678:Source\FreeRTOS\10.0.1\Source/timers.c **** 		else
 679:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 680:Source\FreeRTOS\10.0.1\Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 115              		.loc 1 680 0 is_stmt 1
 116 0028 011D     		adds	r1, r0, #4
 117              	.LVL12:
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 15


 118 002a 054B     		ldr	r3, .L12
 119              	.LVL13:
 120 002c 1868     		ldr	r0, [r3]
 121              	.LVL14:
 122 002e FFF7FEFF 		bl	vListInsert
 123              	.LVL15:
 649:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 124              		.loc 1 649 0
 125 0032 0020     		movs	r0, #0
 126 0034 02E0     		b	.L8
 127              	.LVL16:
 128              	.L10:
 662:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 129              		.loc 1 662 0
 130 0036 0120     		movs	r0, #1
 131              	.LVL17:
 132 0038 00E0     		b	.L8
 133              	.LVL18:
 134              	.L11:
 676:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 135              		.loc 1 676 0
 136 003a 0120     		movs	r0, #1
 137              	.LVL19:
 138              	.L8:
 681:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 682:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 683:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 684:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xProcessTimerNow;
 685:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 139              		.loc 1 685 0
 140              		@ sp needed
 141 003c 10BD     		pop	{r4, pc}
 142              	.L13:
 143 003e C046     		.align	2
 144              	.L12:
 145 0040 00000000 		.word	.LANCHOR0
 146              		.cfi_endproc
 147              	.LFE49:
 148              		.size	prvInsertTimerInActiveList, .-prvInsertTimerInActiveList
 149              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 150              		.align	2
 151              		.code	16
 152              		.thumb_func
 153              		.type	prvCheckForValidListAndQueue, %function
 154              	prvCheckForValidListAndQueue:
 155              	.LFB52:
 686:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 687:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 688:Source\FreeRTOS\10.0.1\Source/timers.c **** static void	prvProcessReceivedCommands( void )
 689:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 690:Source\FreeRTOS\10.0.1\Source/timers.c **** DaemonTaskMessage_t xMessage;
 691:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer;
 692:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 693:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimeNow;
 694:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 695:Source\FreeRTOS\10.0.1\Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 696:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 16


 697:Source\FreeRTOS\10.0.1\Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 698:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 699:Source\FreeRTOS\10.0.1\Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 700:Source\FreeRTOS\10.0.1\Source/timers.c **** 			commands. */
 701:Source\FreeRTOS\10.0.1\Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 702:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 703:Source\FreeRTOS\10.0.1\Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 704:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 705:Source\FreeRTOS\10.0.1\Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 706:Source\FreeRTOS\10.0.1\Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 707:Source\FreeRTOS\10.0.1\Source/timers.c **** 				configASSERT( pxCallback );
 708:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 709:Source\FreeRTOS\10.0.1\Source/timers.c **** 				/* Call the function. */
 710:Source\FreeRTOS\10.0.1\Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 711:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 712:Source\FreeRTOS\10.0.1\Source/timers.c **** 			else
 713:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 714:Source\FreeRTOS\10.0.1\Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 715:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 716:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 717:Source\FreeRTOS\10.0.1\Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 718:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 719:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 720:Source\FreeRTOS\10.0.1\Source/timers.c **** 		function calls. */
 721:Source\FreeRTOS\10.0.1\Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 722:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 723:Source\FreeRTOS\10.0.1\Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 724:Source\FreeRTOS\10.0.1\Source/timers.c **** 			software timer. */
 725:Source\FreeRTOS\10.0.1\Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 726:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 727:Source\FreeRTOS\10.0.1\Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 728:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 729:Source\FreeRTOS\10.0.1\Source/timers.c **** 				/* The timer is in a list, remove it. */
 730:Source\FreeRTOS\10.0.1\Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 731:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 732:Source\FreeRTOS\10.0.1\Source/timers.c **** 			else
 733:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 734:Source\FreeRTOS\10.0.1\Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 735:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 736:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 737:Source\FreeRTOS\10.0.1\Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 738:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 739:Source\FreeRTOS\10.0.1\Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 740:Source\FreeRTOS\10.0.1\Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 741:Source\FreeRTOS\10.0.1\Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 742:Source\FreeRTOS\10.0.1\Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 743:Source\FreeRTOS\10.0.1\Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 744:Source\FreeRTOS\10.0.1\Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 745:Source\FreeRTOS\10.0.1\Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 746:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 747:Source\FreeRTOS\10.0.1\Source/timers.c **** 			switch( xMessage.xMessageID )
 748:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 749:Source\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_START :
 750:Source\FreeRTOS\10.0.1\Source/timers.c **** 			    case tmrCOMMAND_START_FROM_ISR :
 751:Source\FreeRTOS\10.0.1\Source/timers.c **** 			    case tmrCOMMAND_RESET :
 752:Source\FreeRTOS\10.0.1\Source/timers.c **** 			    case tmrCOMMAND_RESET_FROM_ISR :
 753:Source\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 17


 754:Source\FreeRTOS\10.0.1\Source/timers.c **** 					/* Start or restart a timer. */
 755:Source\FreeRTOS\10.0.1\Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 756:Source\FreeRTOS\10.0.1\Source/timers.c **** 					{
 757:Source\FreeRTOS\10.0.1\Source/timers.c **** 						/* The timer expired before it was added to the active
 758:Source\FreeRTOS\10.0.1\Source/timers.c **** 						timer list.  Process it now. */
 759:Source\FreeRTOS\10.0.1\Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 760:Source\FreeRTOS\10.0.1\Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 761:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 762:Source\FreeRTOS\10.0.1\Source/timers.c **** 						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 763:Source\FreeRTOS\10.0.1\Source/timers.c **** 						{
 764:Source\FreeRTOS\10.0.1\Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 765:Source\FreeRTOS\10.0.1\Source/timers.c **** 							configASSERT( xResult );
 766:Source\FreeRTOS\10.0.1\Source/timers.c **** 							( void ) xResult;
 767:Source\FreeRTOS\10.0.1\Source/timers.c **** 						}
 768:Source\FreeRTOS\10.0.1\Source/timers.c **** 						else
 769:Source\FreeRTOS\10.0.1\Source/timers.c **** 						{
 770:Source\FreeRTOS\10.0.1\Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Source\FreeRTOS\10.0.1\Source/timers.c **** 						}
 772:Source\FreeRTOS\10.0.1\Source/timers.c **** 					}
 773:Source\FreeRTOS\10.0.1\Source/timers.c **** 					else
 774:Source\FreeRTOS\10.0.1\Source/timers.c **** 					{
 775:Source\FreeRTOS\10.0.1\Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 776:Source\FreeRTOS\10.0.1\Source/timers.c **** 					}
 777:Source\FreeRTOS\10.0.1\Source/timers.c **** 					break;
 778:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 779:Source\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_STOP :
 780:Source\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 781:Source\FreeRTOS\10.0.1\Source/timers.c **** 					/* The timer has already been removed from the active list.
 782:Source\FreeRTOS\10.0.1\Source/timers.c **** 					There is nothing to do here. */
 783:Source\FreeRTOS\10.0.1\Source/timers.c **** 					break;
 784:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 785:Source\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 786:Source\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 787:Source\FreeRTOS\10.0.1\Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 788:Source\FreeRTOS\10.0.1\Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 789:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 790:Source\FreeRTOS\10.0.1\Source/timers.c **** 					/* The new period does not really have a reference, and can
 791:Source\FreeRTOS\10.0.1\Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 792:Source\FreeRTOS\10.0.1\Source/timers.c **** 					therefore set to the current time, and as the period cannot
 793:Source\FreeRTOS\10.0.1\Source/timers.c **** 					be zero the next expiry time can only be in the future,
 794:Source\FreeRTOS\10.0.1\Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 795:Source\FreeRTOS\10.0.1\Source/timers.c **** 					no fail case that needs to be handled here. */
 796:Source\FreeRTOS\10.0.1\Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 797:Source\FreeRTOS\10.0.1\Source/timers.c **** 					break;
 798:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 799:Source\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_DELETE :
 800:Source\FreeRTOS\10.0.1\Source/timers.c **** 					/* The timer has already been removed from the active list,
 801:Source\FreeRTOS\10.0.1\Source/timers.c **** 					just free up the memory if the memory was dynamically
 802:Source\FreeRTOS\10.0.1\Source/timers.c **** 					allocated. */
 803:Source\FreeRTOS\10.0.1\Source/timers.c **** 					#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 804:Source\FreeRTOS\10.0.1\Source/timers.c **** 					{
 805:Source\FreeRTOS\10.0.1\Source/timers.c **** 						/* The timer can only have been allocated dynamically -
 806:Source\FreeRTOS\10.0.1\Source/timers.c **** 						free it again. */
 807:Source\FreeRTOS\10.0.1\Source/timers.c **** 						vPortFree( pxTimer );
 808:Source\FreeRTOS\10.0.1\Source/timers.c **** 					}
 809:Source\FreeRTOS\10.0.1\Source/timers.c **** 					#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 810:Source\FreeRTOS\10.0.1\Source/timers.c **** 					{
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 18


 811:Source\FreeRTOS\10.0.1\Source/timers.c **** 						/* The timer could have been allocated statically or
 812:Source\FreeRTOS\10.0.1\Source/timers.c **** 						dynamically, so check before attempting to free the
 813:Source\FreeRTOS\10.0.1\Source/timers.c **** 						memory. */
 814:Source\FreeRTOS\10.0.1\Source/timers.c **** 						if( pxTimer->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 815:Source\FreeRTOS\10.0.1\Source/timers.c **** 						{
 816:Source\FreeRTOS\10.0.1\Source/timers.c **** 							vPortFree( pxTimer );
 817:Source\FreeRTOS\10.0.1\Source/timers.c **** 						}
 818:Source\FreeRTOS\10.0.1\Source/timers.c **** 						else
 819:Source\FreeRTOS\10.0.1\Source/timers.c **** 						{
 820:Source\FreeRTOS\10.0.1\Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Source\FreeRTOS\10.0.1\Source/timers.c **** 						}
 822:Source\FreeRTOS\10.0.1\Source/timers.c **** 					}
 823:Source\FreeRTOS\10.0.1\Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 824:Source\FreeRTOS\10.0.1\Source/timers.c **** 					break;
 825:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 826:Source\FreeRTOS\10.0.1\Source/timers.c **** 				default	:
 827:Source\FreeRTOS\10.0.1\Source/timers.c **** 					/* Don't expect to get here. */
 828:Source\FreeRTOS\10.0.1\Source/timers.c **** 					break;
 829:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 830:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 831:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 832:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 833:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 834:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 835:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvSwitchTimerLists( void )
 836:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 837:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 838:Source\FreeRTOS\10.0.1\Source/timers.c **** List_t *pxTemp;
 839:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer;
 840:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xResult;
 841:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 842:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 843:Source\FreeRTOS\10.0.1\Source/timers.c **** 	If there are any timers still referenced from the current timer list
 844:Source\FreeRTOS\10.0.1\Source/timers.c **** 	then they must have expired and should be processed before the lists
 845:Source\FreeRTOS\10.0.1\Source/timers.c **** 	are switched. */
 846:Source\FreeRTOS\10.0.1\Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 847:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 848:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 849:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 850:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Remove the timer from the list. */
 851:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 852:Source\FreeRTOS\10.0.1\Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 853:Source\FreeRTOS\10.0.1\Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 854:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 855:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 856:Source\FreeRTOS\10.0.1\Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 857:Source\FreeRTOS\10.0.1\Source/timers.c **** 		have not yet been switched. */
 858:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 859:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 860:Source\FreeRTOS\10.0.1\Source/timers.c **** 		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 861:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 862:Source\FreeRTOS\10.0.1\Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 863:Source\FreeRTOS\10.0.1\Source/timers.c **** 			the timer going into the same timer list then it has already expired
 864:Source\FreeRTOS\10.0.1\Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 865:Source\FreeRTOS\10.0.1\Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 866:Source\FreeRTOS\10.0.1\Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 867:Source\FreeRTOS\10.0.1\Source/timers.c **** 			the lists have been swapped. */
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 19


 868:Source\FreeRTOS\10.0.1\Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 869:Source\FreeRTOS\10.0.1\Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 870:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 871:Source\FreeRTOS\10.0.1\Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 872:Source\FreeRTOS\10.0.1\Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 873:Source\FreeRTOS\10.0.1\Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 874:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 875:Source\FreeRTOS\10.0.1\Source/timers.c **** 			else
 876:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 877:Source\FreeRTOS\10.0.1\Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 878:Source\FreeRTOS\10.0.1\Source/timers.c **** 				configASSERT( xResult );
 879:Source\FreeRTOS\10.0.1\Source/timers.c **** 				( void ) xResult;
 880:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 881:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 882:Source\FreeRTOS\10.0.1\Source/timers.c **** 		else
 883:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 884:Source\FreeRTOS\10.0.1\Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 885:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 886:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 887:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 888:Source\FreeRTOS\10.0.1\Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 889:Source\FreeRTOS\10.0.1\Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 890:Source\FreeRTOS\10.0.1\Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 891:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 892:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 893:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 894:Source\FreeRTOS\10.0.1\Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 895:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 156              		.loc 1 895 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 0000 70B5     		push	{r4, r5, r6, lr}
 161              		.cfi_def_cfa_offset 16
 162              		.cfi_offset 4, -16
 163              		.cfi_offset 5, -12
 164              		.cfi_offset 6, -8
 165              		.cfi_offset 14, -4
 896:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 897:Source\FreeRTOS\10.0.1\Source/timers.c **** 	queue used to communicate with the timer service, have been
 898:Source\FreeRTOS\10.0.1\Source/timers.c **** 	initialised. */
 899:Source\FreeRTOS\10.0.1\Source/timers.c **** 	taskENTER_CRITICAL();
 166              		.loc 1 899 0
 167 0002 FFF7FEFF 		bl	vPortEnterCritical
 168              	.LVL20:
 900:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 901:Source\FreeRTOS\10.0.1\Source/timers.c **** 		if( xTimerQueue == NULL )
 169              		.loc 1 901 0
 170 0006 0F4B     		ldr	r3, .L16
 171 0008 9B68     		ldr	r3, [r3, #8]
 172 000a 002B     		cmp	r3, #0
 173 000c 17D1     		bne	.L15
 902:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 903:Source\FreeRTOS\10.0.1\Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 174              		.loc 1 903 0
 175 000e 0D4C     		ldr	r4, .L16
 176 0010 2600     		movs	r6, r4
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 20


 177 0012 0C36     		adds	r6, r6, #12
 178 0014 3000     		movs	r0, r6
 179 0016 FFF7FEFF 		bl	vListInitialise
 180              	.LVL21:
 904:Source\FreeRTOS\10.0.1\Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 181              		.loc 1 904 0
 182 001a 2500     		movs	r5, r4
 183 001c 2035     		adds	r5, r5, #32
 184 001e 2800     		movs	r0, r5
 185 0020 FFF7FEFF 		bl	vListInitialise
 186              	.LVL22:
 905:Source\FreeRTOS\10.0.1\Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 187              		.loc 1 905 0
 188 0024 2660     		str	r6, [r4]
 906:Source\FreeRTOS\10.0.1\Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 189              		.loc 1 906 0
 190 0026 6560     		str	r5, [r4, #4]
 907:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 908:Source\FreeRTOS\10.0.1\Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 909:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 910:Source\FreeRTOS\10.0.1\Source/timers.c **** 				/* The timer queue is allocated statically in case
 911:Source\FreeRTOS\10.0.1\Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 912:Source\FreeRTOS\10.0.1\Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 913:Source\FreeRTOS\10.0.1\Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 914:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 915:Source\FreeRTOS\10.0.1\Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 916:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 917:Source\FreeRTOS\10.0.1\Source/timers.c **** 			#else
 918:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 919:Source\FreeRTOS\10.0.1\Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 191              		.loc 1 919 0
 192 0028 0022     		movs	r2, #0
 193 002a 0C21     		movs	r1, #12
 194 002c 0A20     		movs	r0, #10
 195 002e FFF7FEFF 		bl	xQueueGenericCreate
 196              	.LVL23:
 197 0032 A060     		str	r0, [r4, #8]
 920:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 921:Source\FreeRTOS\10.0.1\Source/timers.c **** 			#endif
 922:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 923:Source\FreeRTOS\10.0.1\Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 924:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 925:Source\FreeRTOS\10.0.1\Source/timers.c **** 				if( xTimerQueue != NULL )
 198              		.loc 1 925 0
 199 0034 0028     		cmp	r0, #0
 200 0036 02D0     		beq	.L15
 926:Source\FreeRTOS\10.0.1\Source/timers.c **** 				{
 927:Source\FreeRTOS\10.0.1\Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 201              		.loc 1 927 0
 202 0038 0349     		ldr	r1, .L16+4
 203 003a FFF7FEFF 		bl	vQueueAddToRegistry
 204              	.LVL24:
 205              	.L15:
 928:Source\FreeRTOS\10.0.1\Source/timers.c **** 				}
 929:Source\FreeRTOS\10.0.1\Source/timers.c **** 				else
 930:Source\FreeRTOS\10.0.1\Source/timers.c **** 				{
 931:Source\FreeRTOS\10.0.1\Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 21


 932:Source\FreeRTOS\10.0.1\Source/timers.c **** 				}
 933:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 934:Source\FreeRTOS\10.0.1\Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 935:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 936:Source\FreeRTOS\10.0.1\Source/timers.c **** 		else
 937:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 938:Source\FreeRTOS\10.0.1\Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 939:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 940:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 941:Source\FreeRTOS\10.0.1\Source/timers.c **** 	taskEXIT_CRITICAL();
 206              		.loc 1 941 0
 207 003e FFF7FEFF 		bl	vPortExitCritical
 208              	.LVL25:
 942:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 209              		.loc 1 942 0
 210              		@ sp needed
 211 0042 70BD     		pop	{r4, r5, r6, pc}
 212              	.L17:
 213              		.align	2
 214              	.L16:
 215 0044 00000000 		.word	.LANCHOR0
 216 0048 00000000 		.word	.LC3
 217              		.cfi_endproc
 218              	.LFE52:
 219              		.size	prvCheckForValidListAndQueue, .-prvCheckForValidListAndQueue
 220              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 221              		.align	2
 222              		.code	16
 223              		.thumb_func
 224              		.type	prvInitialiseNewTimer, %function
 225              	prvInitialiseNewTimer:
 226              	.LFB38:
 358:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 227              		.loc 1 358 0
 228              		.cfi_startproc
 229              		@ args = 8, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              	.LVL26:
 232 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 233              		.cfi_def_cfa_offset 20
 234              		.cfi_offset 4, -20
 235              		.cfi_offset 5, -16
 236              		.cfi_offset 6, -12
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 4746     		mov	r7, r8
 240 0004 80B4     		push	{r7}
 241              		.cfi_def_cfa_offset 24
 242              		.cfi_offset 8, -24
 243 0006 8046     		mov	r8, r0
 244 0008 0D00     		movs	r5, r1
 245 000a 1700     		movs	r7, r2
 246 000c 1E00     		movs	r6, r3
 247 000e 079C     		ldr	r4, [sp, #28]
 360:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 248              		.loc 1 360 0
 249 0010 0029     		cmp	r1, #0
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 22


 250 0012 01D1     		bne	.L19
 360:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 251              		.loc 1 360 0 is_stmt 0 discriminator 1
 252              		.syntax divided
 253              	@ 360 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 254 0014 72B6     		 cpsid i 
 255              	@ 0 "" 2
 256              		.thumb
 257              		.syntax unified
 258              	.L20:
 259 0016 FEE7     		b	.L20
 260              	.L19:
 362:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 261              		.loc 1 362 0 is_stmt 1
 262 0018 002C     		cmp	r4, #0
 263 001a 0BD0     		beq	.L18
 366:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 264              		.loc 1 366 0
 265 001c FFF7FEFF 		bl	prvCheckForValidListAndQueue
 266              	.LVL27:
 370:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 267              		.loc 1 370 0
 268 0020 4346     		mov	r3, r8
 269 0022 2360     		str	r3, [r4]
 371:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 270              		.loc 1 371 0
 271 0024 A561     		str	r5, [r4, #24]
 372:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 272              		.loc 1 372 0
 273 0026 E761     		str	r7, [r4, #28]
 373:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 274              		.loc 1 373 0
 275 0028 2662     		str	r6, [r4, #32]
 374:Source\FreeRTOS\10.0.1\Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 276              		.loc 1 374 0
 277 002a 069B     		ldr	r3, [sp, #24]
 278 002c 6362     		str	r3, [r4, #36]
 375:Source\FreeRTOS\10.0.1\Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 279              		.loc 1 375 0
 280 002e 201D     		adds	r0, r4, #4
 281 0030 FFF7FEFF 		bl	vListInitialiseItem
 282              	.LVL28:
 283              	.L18:
 378:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 284              		.loc 1 378 0
 285              		@ sp needed
 286              	.LVL29:
 287              	.LVL30:
 288              	.LVL31:
 289              	.LVL32:
 290 0034 04BC     		pop	{r2}
 291 0036 9046     		mov	r8, r2
 292 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
 293              		.cfi_endproc
 294              	.LFE38:
 295              		.size	prvInitialiseNewTimer, .-prvInitialiseNewTimer
 296 003a C046     		.section	.text.xTimerCreateTimerTask,"ax",%progbits
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 23


 297              		.align	2
 298              		.global	xTimerCreateTimerTask
 299              		.code	16
 300              		.thumb_func
 301              		.type	xTimerCreateTimerTask, %function
 302              	xTimerCreateTimerTask:
 303              	.LFB36:
 224:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xReturn = pdFAIL;
 304              		.loc 1 224 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308 0000 00B5     		push	{lr}
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 14, -4
 311 0002 83B0     		sub	sp, sp, #12
 312              		.cfi_def_cfa_offset 16
 313              	.LVL33:
 231:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 314              		.loc 1 231 0
 315 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 316              	.LVL34:
 233:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 317              		.loc 1 233 0
 318 0008 0B4B     		ldr	r3, .L27
 319 000a 9B68     		ldr	r3, [r3, #8]
 320 000c 002B     		cmp	r3, #0
 321 000e 0BD0     		beq	.L26
 257:Source\FreeRTOS\10.0.1\Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 322              		.loc 1 257 0
 323 0010 094B     		ldr	r3, .L27
 324 0012 3433     		adds	r3, r3, #52
 325 0014 0193     		str	r3, [sp, #4]
 326 0016 0323     		movs	r3, #3
 327 0018 0093     		str	r3, [sp]
 328 001a 0023     		movs	r3, #0
 329 001c 8022     		movs	r2, #128
 330 001e 0749     		ldr	r1, .L27+4
 331 0020 0748     		ldr	r0, .L27+8
 332 0022 FFF7FEFF 		bl	xTaskCreate
 333              	.LVL35:
 334 0026 00E0     		b	.L23
 335              	.LVL36:
 336              	.L26:
 225:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 337              		.loc 1 225 0
 338 0028 0020     		movs	r0, #0
 339              	.LVL37:
 340              	.L23:
 271:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xReturn;
 341              		.loc 1 271 0
 342 002a 0028     		cmp	r0, #0
 343 002c 01D1     		bne	.L24
 271:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xReturn;
 344              		.loc 1 271 0 is_stmt 0 discriminator 1
 345              		.syntax divided
 346              	@ 271 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 24


 347 002e 72B6     		 cpsid i 
 348              	@ 0 "" 2
 349              		.thumb
 350              		.syntax unified
 351              	.L25:
 352 0030 FEE7     		b	.L25
 353              	.L24:
 273:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 354              		.loc 1 273 0 is_stmt 1
 355 0032 03B0     		add	sp, sp, #12
 356              		@ sp needed
 357 0034 00BD     		pop	{pc}
 358              	.L28:
 359 0036 C046     		.align	2
 360              	.L27:
 361 0038 00000000 		.word	.LANCHOR0
 362 003c 08000000 		.word	.LC8
 363 0040 00000000 		.word	prvTimerTask
 364              		.cfi_endproc
 365              	.LFE36:
 366              		.size	xTimerCreateTimerTask, .-xTimerCreateTimerTask
 367              		.section	.text.xTimerCreate,"ax",%progbits
 368              		.align	2
 369              		.global	xTimerCreate
 370              		.code	16
 371              		.thumb_func
 372              		.type	xTimerCreate, %function
 373              	xTimerCreate:
 374              	.LFB37:
 283:Source\FreeRTOS\10.0.1\Source/timers.c **** 	Timer_t *pxNewTimer;
 375              		.loc 1 283 0
 376              		.cfi_startproc
 377              		@ args = 4, pretend = 0, frame = 8
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              	.LVL38:
 380 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 381              		.cfi_def_cfa_offset 20
 382              		.cfi_offset 4, -20
 383              		.cfi_offset 5, -16
 384              		.cfi_offset 6, -12
 385              		.cfi_offset 7, -8
 386              		.cfi_offset 14, -4
 387 0002 85B0     		sub	sp, sp, #20
 388              		.cfi_def_cfa_offset 40
 389 0004 0390     		str	r0, [sp, #12]
 390 0006 0D00     		movs	r5, r1
 391 0008 1600     		movs	r6, r2
 392 000a 1F00     		movs	r7, r3
 286:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 393              		.loc 1 286 0
 394 000c 2C20     		movs	r0, #44
 395              	.LVL39:
 396 000e FFF7FEFF 		bl	pvPortMalloc
 397              	.LVL40:
 398 0012 041E     		subs	r4, r0, #0
 399              	.LVL41:
 288:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 25


 400              		.loc 1 288 0
 401 0014 08D0     		beq	.L30
 290:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 402              		.loc 1 290 0
 403 0016 0190     		str	r0, [sp, #4]
 404 0018 0A9B     		ldr	r3, [sp, #40]
 405 001a 0093     		str	r3, [sp]
 406 001c 3B00     		movs	r3, r7
 407 001e 3200     		movs	r2, r6
 408 0020 2900     		movs	r1, r5
 409 0022 0398     		ldr	r0, [sp, #12]
 410              	.LVL42:
 411 0024 FFF7FEFF 		bl	prvInitialiseNewTimer
 412              	.LVL43:
 413              	.L30:
 303:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 414              		.loc 1 303 0
 415 0028 2000     		movs	r0, r4
 416 002a 05B0     		add	sp, sp, #20
 417              		@ sp needed
 418              	.LVL44:
 419              	.LVL45:
 420              	.LVL46:
 421              	.LVL47:
 422 002c F0BD     		pop	{r4, r5, r6, r7, pc}
 423              		.cfi_endproc
 424              	.LFE37:
 425              		.size	xTimerCreate, .-xTimerCreate
 426 002e C046     		.section	.text.xTimerGenericCommand,"ax",%progbits
 427              		.align	2
 428              		.global	xTimerGenericCommand
 429              		.code	16
 430              		.thumb_func
 431              		.type	xTimerGenericCommand, %function
 432              	xTimerGenericCommand:
 433              	.LFB39:
 382:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xReturn = pdFAIL;
 434              		.loc 1 382 0
 435              		.cfi_startproc
 436              		@ args = 4, pretend = 0, frame = 16
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              	.LVL48:
 439 0000 30B5     		push	{r4, r5, lr}
 440              		.cfi_def_cfa_offset 12
 441              		.cfi_offset 4, -12
 442              		.cfi_offset 5, -8
 443              		.cfi_offset 14, -4
 444 0002 85B0     		sub	sp, sp, #20
 445              		.cfi_def_cfa_offset 32
 446 0004 0400     		movs	r4, r0
 447 0006 1D00     		movs	r5, r3
 448              	.LVL49:
 386:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 449              		.loc 1 386 0
 450 0008 0028     		cmp	r0, #0
 451 000a 01D1     		bne	.L32
 386:Source\FreeRTOS\10.0.1\Source/timers.c **** 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 26


 452              		.loc 1 386 0 is_stmt 0 discriminator 1
 453              		.syntax divided
 454              	@ 386 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 455 000c 72B6     		 cpsid i 
 456              	@ 0 "" 2
 457              		.thumb
 458              		.syntax unified
 459              	.L33:
 460 000e FEE7     		b	.L33
 461              	.L32:
 390:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 462              		.loc 1 390 0 is_stmt 1
 463 0010 124B     		ldr	r3, .L38
 464              	.LVL50:
 465 0012 9868     		ldr	r0, [r3, #8]
 466              	.LVL51:
 467 0014 0028     		cmp	r0, #0
 468 0016 1ED0     		beq	.L37
 393:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 469              		.loc 1 393 0
 470 0018 0191     		str	r1, [sp, #4]
 394:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 471              		.loc 1 394 0
 472 001a 0292     		str	r2, [sp, #8]
 395:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 473              		.loc 1 395 0
 474 001c 0394     		str	r4, [sp, #12]
 397:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 475              		.loc 1 397 0
 476 001e 0529     		cmp	r1, #5
 477 0020 13DC     		bgt	.L35
 399:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 478              		.loc 1 399 0
 479 0022 FFF7FEFF 		bl	xTaskGetSchedulerState
 480              	.LVL52:
 481 0026 0228     		cmp	r0, #2
 482 0028 07D1     		bne	.L36
 401:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 483              		.loc 1 401 0
 484 002a 0C4B     		ldr	r3, .L38
 485 002c 9868     		ldr	r0, [r3, #8]
 486 002e 0023     		movs	r3, #0
 487 0030 089A     		ldr	r2, [sp, #32]
 488 0032 01A9     		add	r1, sp, #4
 489 0034 FFF7FEFF 		bl	xQueueGenericSend
 490              	.LVL53:
 491 0038 0EE0     		b	.L34
 492              	.LVL54:
 493              	.L36:
 405:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 494              		.loc 1 405 0
 495 003a 084B     		ldr	r3, .L38
 496 003c 9868     		ldr	r0, [r3, #8]
 497 003e 0023     		movs	r3, #0
 498 0040 0022     		movs	r2, #0
 499 0042 01A9     		add	r1, sp, #4
 500 0044 FFF7FEFF 		bl	xQueueGenericSend
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 27


 501              	.LVL55:
 502 0048 06E0     		b	.L34
 503              	.LVL56:
 504              	.L35:
 410:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 505              		.loc 1 410 0
 506 004a 0023     		movs	r3, #0
 507 004c 2A00     		movs	r2, r5
 508              	.LVL57:
 509 004e 01A9     		add	r1, sp, #4
 510              	.LVL58:
 511 0050 FFF7FEFF 		bl	xQueueGenericSendFromISR
 512              	.LVL59:
 513 0054 00E0     		b	.L34
 514              	.LVL60:
 515              	.L37:
 383:Source\FreeRTOS\10.0.1\Source/timers.c **** DaemonTaskMessage_t xMessage;
 516              		.loc 1 383 0
 517 0056 0020     		movs	r0, #0
 518              	.LVL61:
 519              	.L34:
 421:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 520              		.loc 1 421 0
 521 0058 05B0     		add	sp, sp, #20
 522              		@ sp needed
 523              	.LVL62:
 524              	.LVL63:
 525 005a 30BD     		pop	{r4, r5, pc}
 526              	.L39:
 527              		.align	2
 528              	.L38:
 529 005c 00000000 		.word	.LANCHOR0
 530              		.cfi_endproc
 531              	.LFE39:
 532              		.size	xTimerGenericCommand, .-xTimerGenericCommand
 533              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 534              		.align	2
 535              		.code	16
 536              		.thumb_func
 537              		.type	prvSwitchTimerLists, %function
 538              	prvSwitchTimerLists:
 539              	.LFB51:
 836:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 540              		.loc 1 836 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544 0000 70B5     		push	{r4, r5, r6, lr}
 545              		.cfi_def_cfa_offset 16
 546              		.cfi_offset 4, -16
 547              		.cfi_offset 5, -12
 548              		.cfi_offset 6, -8
 549              		.cfi_offset 14, -4
 550 0002 82B0     		sub	sp, sp, #8
 551              		.cfi_def_cfa_offset 24
 846:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 552              		.loc 1 846 0
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 28


 553 0004 23E0     		b	.L42
 554              	.L46:
 848:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 555              		.loc 1 848 0
 556 0006 DB68     		ldr	r3, [r3, #12]
 557 0008 1E68     		ldr	r6, [r3]
 558              	.LVL64:
 851:Source\FreeRTOS\10.0.1\Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 559              		.loc 1 851 0
 560 000a DC68     		ldr	r4, [r3, #12]
 561              	.LVL65:
 852:Source\FreeRTOS\10.0.1\Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 562              		.loc 1 852 0
 563 000c 251D     		adds	r5, r4, #4
 564 000e 2800     		movs	r0, r5
 565 0010 FFF7FEFF 		bl	uxListRemove
 566              	.LVL66:
 858:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 567              		.loc 1 858 0
 568 0014 2000     		movs	r0, r4
 569 0016 636A     		ldr	r3, [r4, #36]
 570 0018 9847     		blx	r3
 571              	.LVL67:
 860:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 572              		.loc 1 860 0
 573 001a E369     		ldr	r3, [r4, #28]
 574 001c 012B     		cmp	r3, #1
 575 001e 16D1     		bne	.L42
 868:Source\FreeRTOS\10.0.1\Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 576              		.loc 1 868 0
 577 0020 A369     		ldr	r3, [r4, #24]
 578 0022 F318     		adds	r3, r6, r3
 579              	.LVL68:
 869:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 580              		.loc 1 869 0
 581 0024 9E42     		cmp	r6, r3
 582 0026 07D2     		bcs	.L43
 871:Source\FreeRTOS\10.0.1\Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 583              		.loc 1 871 0
 584 0028 6360     		str	r3, [r4, #4]
 872:Source\FreeRTOS\10.0.1\Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 585              		.loc 1 872 0
 586 002a 2461     		str	r4, [r4, #16]
 873:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 587              		.loc 1 873 0
 588 002c 0D4B     		ldr	r3, .L47
 589              	.LVL69:
 590 002e 1868     		ldr	r0, [r3]
 591 0030 2900     		movs	r1, r5
 592 0032 FFF7FEFF 		bl	vListInsert
 593              	.LVL70:
 594 0036 0AE0     		b	.L42
 595              	.LVL71:
 596              	.L43:
 877:Source\FreeRTOS\10.0.1\Source/timers.c **** 				configASSERT( xResult );
 597              		.loc 1 877 0
 598 0038 0023     		movs	r3, #0
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 29


 599              	.LVL72:
 600 003a 0093     		str	r3, [sp]
 601              	.LVL73:
 602 003c 3200     		movs	r2, r6
 603 003e 0021     		movs	r1, #0
 604 0040 2000     		movs	r0, r4
 605 0042 FFF7FEFF 		bl	xTimerGenericCommand
 606              	.LVL74:
 878:Source\FreeRTOS\10.0.1\Source/timers.c **** 				( void ) xResult;
 607              		.loc 1 878 0
 608 0046 0028     		cmp	r0, #0
 609 0048 01D1     		bne	.L42
 878:Source\FreeRTOS\10.0.1\Source/timers.c **** 				( void ) xResult;
 610              		.loc 1 878 0 is_stmt 0 discriminator 1
 611              		.syntax divided
 612              	@ 878 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 613 004a 72B6     		 cpsid i 
 614              	@ 0 "" 2
 615              		.thumb
 616              		.syntax unified
 617              	.L45:
 618 004c FEE7     		b	.L45
 619              	.LVL75:
 620              	.L42:
 846:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 621              		.loc 1 846 0 is_stmt 1
 622 004e 054B     		ldr	r3, .L47
 623 0050 1B68     		ldr	r3, [r3]
 624 0052 1A68     		ldr	r2, [r3]
 625 0054 002A     		cmp	r2, #0
 626 0056 D6D1     		bne	.L46
 627              	.LVL76:
 889:Source\FreeRTOS\10.0.1\Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 628              		.loc 1 889 0
 629 0058 024A     		ldr	r2, .L47
 630 005a 5168     		ldr	r1, [r2, #4]
 631 005c 1160     		str	r1, [r2]
 890:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 632              		.loc 1 890 0
 633 005e 5360     		str	r3, [r2, #4]
 891:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 634              		.loc 1 891 0
 635 0060 02B0     		add	sp, sp, #8
 636              		@ sp needed
 637 0062 70BD     		pop	{r4, r5, r6, pc}
 638              	.L48:
 639              		.align	2
 640              	.L47:
 641 0064 00000000 		.word	.LANCHOR0
 642              		.cfi_endproc
 643              	.LFE51:
 644              		.size	prvSwitchTimerLists, .-prvSwitchTimerLists
 645              		.section	.text.prvSampleTimeNow,"ax",%progbits
 646              		.align	2
 647              		.code	16
 648              		.thumb_func
 649              		.type	prvSampleTimeNow, %function
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 30


 650              	prvSampleTimeNow:
 651              	.LFB48:
 625:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimeNow;
 652              		.loc 1 625 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              	.LVL77:
 657 0000 70B5     		push	{r4, r5, r6, lr}
 658              		.cfi_def_cfa_offset 16
 659              		.cfi_offset 4, -16
 660              		.cfi_offset 5, -12
 661              		.cfi_offset 6, -8
 662              		.cfi_offset 14, -4
 663 0002 0500     		movs	r5, r0
 629:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 664              		.loc 1 629 0
 665 0004 FFF7FEFF 		bl	xTaskGetTickCount
 666              	.LVL78:
 667 0008 0400     		movs	r4, r0
 668              	.LVL79:
 631:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 669              		.loc 1 631 0
 670 000a 074B     		ldr	r3, .L52
 671 000c 9B6B     		ldr	r3, [r3, #56]
 672 000e 9842     		cmp	r0, r3
 673 0010 04D2     		bcs	.L50
 633:Source\FreeRTOS\10.0.1\Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 674              		.loc 1 633 0
 675 0012 FFF7FEFF 		bl	prvSwitchTimerLists
 676              	.LVL80:
 634:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 677              		.loc 1 634 0
 678 0016 0123     		movs	r3, #1
 679 0018 2B60     		str	r3, [r5]
 680 001a 01E0     		b	.L51
 681              	.LVL81:
 682              	.L50:
 638:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 683              		.loc 1 638 0
 684 001c 0023     		movs	r3, #0
 685 001e 2B60     		str	r3, [r5]
 686              	.LVL82:
 687              	.L51:
 641:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 688              		.loc 1 641 0
 689 0020 014B     		ldr	r3, .L52
 690 0022 9C63     		str	r4, [r3, #56]
 644:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 691              		.loc 1 644 0
 692 0024 2000     		movs	r0, r4
 693              		@ sp needed
 694              	.LVL83:
 695              	.LVL84:
 696 0026 70BD     		pop	{r4, r5, r6, pc}
 697              	.L53:
 698              		.align	2
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 31


 699              	.L52:
 700 0028 00000000 		.word	.LANCHOR0
 701              		.cfi_endproc
 702              	.LFE48:
 703              		.size	prvSampleTimeNow, .-prvSampleTimeNow
 704              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 705              		.align	2
 706              		.code	16
 707              		.thumb_func
 708              		.type	prvProcessExpiredTimer, %function
 709              	prvProcessExpiredTimer:
 710              	.LFB44:
 463:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xResult;
 711              		.loc 1 463 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              	.LVL85:
 716 0000 70B5     		push	{r4, r5, r6, lr}
 717              		.cfi_def_cfa_offset 16
 718              		.cfi_offset 4, -16
 719              		.cfi_offset 5, -12
 720              		.cfi_offset 6, -8
 721              		.cfi_offset 14, -4
 722 0002 82B0     		sub	sp, sp, #8
 723              		.cfi_def_cfa_offset 24
 724 0004 0500     		movs	r5, r0
 725 0006 0E00     		movs	r6, r1
 465:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 726              		.loc 1 465 0
 727 0008 114B     		ldr	r3, .L57
 728 000a 1B68     		ldr	r3, [r3]
 729 000c DB68     		ldr	r3, [r3, #12]
 730 000e DC68     		ldr	r4, [r3, #12]
 731              	.LVL86:
 469:Source\FreeRTOS\10.0.1\Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 732              		.loc 1 469 0
 733 0010 201D     		adds	r0, r4, #4
 734              	.LVL87:
 735 0012 FFF7FEFF 		bl	uxListRemove
 736              	.LVL88:
 474:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 737              		.loc 1 474 0
 738 0016 E369     		ldr	r3, [r4, #28]
 739 0018 012B     		cmp	r3, #1
 740 001a 13D1     		bne	.L55
 479:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 741              		.loc 1 479 0
 742 001c A369     		ldr	r3, [r4, #24]
 743 001e 5919     		adds	r1, r3, r5
 744 0020 2B00     		movs	r3, r5
 745 0022 3200     		movs	r2, r6
 746 0024 2000     		movs	r0, r4
 747 0026 FFF7FEFF 		bl	prvInsertTimerInActiveList
 748              	.LVL89:
 749 002a 0028     		cmp	r0, #0
 750 002c 0AD0     		beq	.L55
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 32


 483:Source\FreeRTOS\10.0.1\Source/timers.c **** 			configASSERT( xResult );
 751              		.loc 1 483 0
 752 002e 0023     		movs	r3, #0
 753 0030 0093     		str	r3, [sp]
 754 0032 2A00     		movs	r2, r5
 755 0034 0021     		movs	r1, #0
 756 0036 2000     		movs	r0, r4
 757 0038 FFF7FEFF 		bl	xTimerGenericCommand
 758              	.LVL90:
 484:Source\FreeRTOS\10.0.1\Source/timers.c **** 			( void ) xResult;
 759              		.loc 1 484 0
 760 003c 0028     		cmp	r0, #0
 761 003e 01D1     		bne	.L55
 484:Source\FreeRTOS\10.0.1\Source/timers.c **** 			( void ) xResult;
 762              		.loc 1 484 0 is_stmt 0 discriminator 1
 763              		.syntax divided
 764              	@ 484 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 765 0040 72B6     		 cpsid i 
 766              	@ 0 "" 2
 767              		.thumb
 768              		.syntax unified
 769              	.L56:
 770 0042 FEE7     		b	.L56
 771              	.LVL91:
 772              	.L55:
 498:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 773              		.loc 1 498 0 is_stmt 1
 774 0044 636A     		ldr	r3, [r4, #36]
 775 0046 2000     		movs	r0, r4
 776 0048 9847     		blx	r3
 777              	.LVL92:
 499:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 778              		.loc 1 499 0
 779 004a 02B0     		add	sp, sp, #8
 780              		@ sp needed
 781              	.LVL93:
 782              	.LVL94:
 783              	.LVL95:
 784 004c 70BD     		pop	{r4, r5, r6, pc}
 785              	.L58:
 786 004e C046     		.align	2
 787              	.L57:
 788 0050 00000000 		.word	.LANCHOR0
 789              		.cfi_endproc
 790              	.LFE44:
 791              		.size	prvProcessExpiredTimer, .-prvProcessExpiredTimer
 792              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 793              		.align	2
 794              		.code	16
 795              		.thumb_func
 796              		.type	prvProcessTimerOrBlockTask, %function
 797              	prvProcessTimerOrBlockTask:
 798              	.LFB46:
 539:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimeNow;
 799              		.loc 1 539 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 33


 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              	.LVL96:
 804 0000 70B5     		push	{r4, r5, r6, lr}
 805              		.cfi_def_cfa_offset 16
 806              		.cfi_offset 4, -16
 807              		.cfi_offset 5, -12
 808              		.cfi_offset 6, -8
 809              		.cfi_offset 14, -4
 810 0002 82B0     		sub	sp, sp, #8
 811              		.cfi_def_cfa_offset 24
 812 0004 0500     		movs	r5, r0
 813 0006 0C00     		movs	r4, r1
 543:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 814              		.loc 1 543 0
 815 0008 FFF7FEFF 		bl	vTaskSuspendAll
 816              	.LVL97:
 550:Source\FreeRTOS\10.0.1\Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 817              		.loc 1 550 0
 818 000c 01A8     		add	r0, sp, #4
 819 000e FFF7FEFF 		bl	prvSampleTimeNow
 820              	.LVL98:
 821 0012 0600     		movs	r6, r0
 822              	.LVL99:
 551:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 823              		.loc 1 551 0
 824 0014 019B     		ldr	r3, [sp, #4]
 825 0016 002B     		cmp	r3, #0
 826 0018 1FD1     		bne	.L60
 554:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 827              		.loc 1 554 0
 828 001a 002C     		cmp	r4, #0
 829 001c 08D1     		bne	.L61
 554:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 830              		.loc 1 554 0 is_stmt 0 discriminator 1
 831 001e A842     		cmp	r0, r5
 832 0020 06D3     		bcc	.L61
 556:Source\FreeRTOS\10.0.1\Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 833              		.loc 1 556 0 is_stmt 1
 834 0022 FFF7FEFF 		bl	xTaskResumeAll
 835              	.LVL100:
 557:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 836              		.loc 1 557 0
 837 0026 3100     		movs	r1, r6
 838 0028 2800     		movs	r0, r5
 839 002a FFF7FEFF 		bl	prvProcessExpiredTimer
 840              	.LVL101:
 841 002e 16E0     		b	.L59
 842              	.LVL102:
 843              	.L61:
 567:Source\FreeRTOS\10.0.1\Source/timers.c **** 				{
 844              		.loc 1 567 0
 845 0030 002C     		cmp	r4, #0
 846 0032 05D0     		beq	.L63
 571:Source\FreeRTOS\10.0.1\Source/timers.c **** 				}
 847              		.loc 1 571 0
 848 0034 0B4B     		ldr	r3, .L64
 849 0036 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 34


 850 0038 1C68     		ldr	r4, [r3]
 851              	.LVL103:
 852 003a 6342     		rsbs	r3, r4, #0
 853 003c 5C41     		adcs	r4, r4, r3
 854 003e E4B2     		uxtb	r4, r4
 855              	.LVL104:
 856              	.L63:
 574:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 857              		.loc 1 574 0
 858 0040 A91B     		subs	r1, r5, r6
 859 0042 084B     		ldr	r3, .L64
 860 0044 9868     		ldr	r0, [r3, #8]
 861              	.LVL105:
 862 0046 2200     		movs	r2, r4
 863 0048 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 864              	.LVL106:
 576:Source\FreeRTOS\10.0.1\Source/timers.c **** 				{
 865              		.loc 1 576 0
 866 004c FFF7FEFF 		bl	xTaskResumeAll
 867              	.LVL107:
 868 0050 0028     		cmp	r0, #0
 869 0052 04D1     		bne	.L59
 582:Source\FreeRTOS\10.0.1\Source/timers.c **** 				}
 870              		.loc 1 582 0
 871 0054 FFF7FEFF 		bl	vPortYield
 872              	.LVL108:
 873 0058 01E0     		b	.L59
 874              	.LVL109:
 875              	.L60:
 592:Source\FreeRTOS\10.0.1\Source/timers.c **** 		}
 876              		.loc 1 592 0
 877 005a FFF7FEFF 		bl	xTaskResumeAll
 878              	.LVL110:
 879              	.L59:
 595:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 880              		.loc 1 595 0
 881 005e 02B0     		add	sp, sp, #8
 882              		@ sp needed
 883              	.LVL111:
 884              	.LVL112:
 885              	.LVL113:
 886 0060 70BD     		pop	{r4, r5, r6, pc}
 887              	.L65:
 888 0062 C046     		.align	2
 889              	.L64:
 890 0064 00000000 		.word	.LANCHOR0
 891              		.cfi_endproc
 892              	.LFE46:
 893              		.size	prvProcessTimerOrBlockTask, .-prvProcessTimerOrBlockTask
 894              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 895              		.align	2
 896              		.code	16
 897              		.thumb_func
 898              		.type	prvProcessReceivedCommands, %function
 899              	prvProcessReceivedCommands:
 900              	.LFB50:
 689:Source\FreeRTOS\10.0.1\Source/timers.c **** DaemonTaskMessage_t xMessage;
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 35


 901              		.loc 1 689 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 16
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905 0000 10B5     		push	{r4, lr}
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 4, -8
 908              		.cfi_offset 14, -4
 909 0002 86B0     		sub	sp, sp, #24
 910              		.cfi_def_cfa_offset 32
 695:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 911              		.loc 1 695 0
 912 0004 44E0     		b	.L68
 913              	.L79:
 721:Source\FreeRTOS\10.0.1\Source/timers.c **** 		{
 914              		.loc 1 721 0
 915 0006 039B     		ldr	r3, [sp, #12]
 916 0008 002B     		cmp	r3, #0
 917 000a 41DB     		blt	.L68
 725:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 918              		.loc 1 725 0
 919 000c 059C     		ldr	r4, [sp, #20]
 920              	.LVL114:
 727:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 921              		.loc 1 727 0
 922 000e 6369     		ldr	r3, [r4, #20]
 923 0010 002B     		cmp	r3, #0
 924 0012 02D0     		beq	.L69
 730:Source\FreeRTOS\10.0.1\Source/timers.c **** 			}
 925              		.loc 1 730 0
 926 0014 201D     		adds	r0, r4, #4
 927 0016 FFF7FEFF 		bl	uxListRemove
 928              	.LVL115:
 929              	.L69:
 745:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 930              		.loc 1 745 0
 931 001a 02A8     		add	r0, sp, #8
 932 001c FFF7FEFF 		bl	prvSampleTimeNow
 933              	.LVL116:
 747:Source\FreeRTOS\10.0.1\Source/timers.c **** 			{
 934              		.loc 1 747 0
 935 0020 039B     		ldr	r3, [sp, #12]
 936 0022 092B     		cmp	r3, #9
 937 0024 34D8     		bhi	.L68
 938 0026 9B00     		lsls	r3, r3, #2
 939 0028 1E4A     		ldr	r2, .L80
 940 002a D358     		ldr	r3, [r2, r3]
 941 002c 9F46     		mov	pc, r3
 942              		.section	.rodata
 943              		.align	2
 944              	.L72:
 945 0000 2E000000 		.word	.L71
 946 0004 2E000000 		.word	.L71
 947 0008 2E000000 		.word	.L71
 948 000c 90000000 		.word	.L68
 949 0010 70000000 		.word	.L73
 950 0014 8A000000 		.word	.L74
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 36


 951 0018 2E000000 		.word	.L71
 952 001c 2E000000 		.word	.L71
 953 0020 90000000 		.word	.L68
 954 0024 70000000 		.word	.L73
 955              		.section	.text.prvProcessReceivedCommands
 956              	.L71:
 755:Source\FreeRTOS\10.0.1\Source/timers.c **** 					{
 957              		.loc 1 755 0
 958 002e 049B     		ldr	r3, [sp, #16]
 959 0030 A269     		ldr	r2, [r4, #24]
 960 0032 9446     		mov	ip, r2
 961 0034 6344     		add	r3, r3, ip
 962 0036 1900     		movs	r1, r3
 963 0038 049B     		ldr	r3, [sp, #16]
 964 003a 0200     		movs	r2, r0
 965 003c 2000     		movs	r0, r4
 966              	.LVL117:
 967 003e FFF7FEFF 		bl	prvInsertTimerInActiveList
 968              	.LVL118:
 969 0042 0028     		cmp	r0, #0
 970 0044 24D0     		beq	.L68
 759:Source\FreeRTOS\10.0.1\Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 971              		.loc 1 759 0
 972 0046 2000     		movs	r0, r4
 973 0048 636A     		ldr	r3, [r4, #36]
 974 004a 9847     		blx	r3
 975              	.LVL119:
 762:Source\FreeRTOS\10.0.1\Source/timers.c **** 						{
 976              		.loc 1 762 0
 977 004c E369     		ldr	r3, [r4, #28]
 978 004e 012B     		cmp	r3, #1
 979 0050 1ED1     		bne	.L68
 764:Source\FreeRTOS\10.0.1\Source/timers.c **** 							configASSERT( xResult );
 980              		.loc 1 764 0
 981 0052 049B     		ldr	r3, [sp, #16]
 982 0054 A169     		ldr	r1, [r4, #24]
 983 0056 8C46     		mov	ip, r1
 984 0058 6344     		add	r3, r3, ip
 985 005a 1A00     		movs	r2, r3
 986 005c 0023     		movs	r3, #0
 987 005e 0093     		str	r3, [sp]
 988 0060 0021     		movs	r1, #0
 989 0062 2000     		movs	r0, r4
 990 0064 FFF7FEFF 		bl	xTimerGenericCommand
 991              	.LVL120:
 765:Source\FreeRTOS\10.0.1\Source/timers.c **** 							( void ) xResult;
 992              		.loc 1 765 0
 993 0068 0028     		cmp	r0, #0
 994 006a 11D1     		bne	.L68
 765:Source\FreeRTOS\10.0.1\Source/timers.c **** 							( void ) xResult;
 995              		.loc 1 765 0 is_stmt 0 discriminator 1
 996              		.syntax divided
 997              	@ 765 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 998 006c 72B6     		 cpsid i 
 999              	@ 0 "" 2
 1000              		.thumb
 1001              		.syntax unified
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 37


 1002              	.L76:
 1003 006e FEE7     		b	.L76
 1004              	.LVL121:
 1005              	.L73:
 787:Source\FreeRTOS\10.0.1\Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1006              		.loc 1 787 0 is_stmt 1
 1007 0070 0499     		ldr	r1, [sp, #16]
 1008 0072 A161     		str	r1, [r4, #24]
 788:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 1009              		.loc 1 788 0
 1010 0074 0029     		cmp	r1, #0
 1011 0076 01D1     		bne	.L77
 788:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 1012              		.loc 1 788 0 is_stmt 0 discriminator 1
 1013              		.syntax divided
 1014              	@ 788 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 1015 0078 72B6     		 cpsid i 
 1016              	@ 0 "" 2
 1017              		.thumb
 1018              		.syntax unified
 1019              	.L78:
 1020 007a FEE7     		b	.L78
 1021              	.L77:
 796:Source\FreeRTOS\10.0.1\Source/timers.c **** 					break;
 1022              		.loc 1 796 0 is_stmt 1
 1023 007c 4118     		adds	r1, r0, r1
 1024 007e 0300     		movs	r3, r0
 1025 0080 0200     		movs	r2, r0
 1026 0082 2000     		movs	r0, r4
 1027              	.LVL122:
 1028 0084 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1029              	.LVL123:
 797:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 1030              		.loc 1 797 0
 1031 0088 02E0     		b	.L68
 1032              	.LVL124:
 1033              	.L74:
 807:Source\FreeRTOS\10.0.1\Source/timers.c **** 					}
 1034              		.loc 1 807 0
 1035 008a 2000     		movs	r0, r4
 1036              	.LVL125:
 1037 008c FFF7FEFF 		bl	vPortFree
 1038              	.LVL126:
 1039              	.L68:
 695:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 1040              		.loc 1 695 0
 1041 0090 054B     		ldr	r3, .L80+4
 1042 0092 9868     		ldr	r0, [r3, #8]
 1043 0094 0022     		movs	r2, #0
 1044 0096 03A9     		add	r1, sp, #12
 1045 0098 FFF7FEFF 		bl	xQueueReceive
 1046              	.LVL127:
 1047 009c 0028     		cmp	r0, #0
 1048 009e B2D1     		bne	.L79
 832:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 1049              		.loc 1 832 0
 1050 00a0 06B0     		add	sp, sp, #24
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 38


 1051              		@ sp needed
 1052 00a2 10BD     		pop	{r4, pc}
 1053              	.L81:
 1054              		.align	2
 1055              	.L80:
 1056 00a4 00000000 		.word	.L72
 1057 00a8 00000000 		.word	.LANCHOR0
 1058              		.cfi_endproc
 1059              	.LFE50:
 1060              		.size	prvProcessReceivedCommands, .-prvProcessReceivedCommands
 1061              		.section	.text.prvTimerTask,"ax",%progbits
 1062              		.align	2
 1063              		.code	16
 1064              		.thumb_func
 1065              		.type	prvTimerTask, %function
 1066              	prvTimerTask:
 1067              	.LFB45:
 503:Source\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xNextExpireTime;
 1068              		.loc 1 503 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 8
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              	.LVL128:
 1073 0000 00B5     		push	{lr}
 1074              		.cfi_def_cfa_offset 4
 1075              		.cfi_offset 14, -4
 1076 0002 83B0     		sub	sp, sp, #12
 1077              		.cfi_def_cfa_offset 16
 1078              	.LVL129:
 1079              	.L83:
 526:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 1080              		.loc 1 526 0 discriminator 1
 1081 0004 01A8     		add	r0, sp, #4
 1082 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1083              	.LVL130:
 530:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 1084              		.loc 1 530 0 discriminator 1
 1085 000a 0199     		ldr	r1, [sp, #4]
 1086 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1087              	.LVL131:
 533:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 1088              		.loc 1 533 0 discriminator 1
 1089 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1090              	.LVL132:
 1091 0014 F6E7     		b	.L83
 1092              		.cfi_endproc
 1093              	.LFE45:
 1094              		.size	prvTimerTask, .-prvTimerTask
 1095 0016 C046     		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1096              		.align	2
 1097              		.global	xTimerGetTimerDaemonTaskHandle
 1098              		.code	16
 1099              		.thumb_func
 1100              		.type	xTimerGetTimerDaemonTaskHandle, %function
 1101              	xTimerGetTimerDaemonTaskHandle:
 1102              	.LFB40:
 425:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 39


 1103              		.loc 1 425 0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 0
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 1107              		@ link register save eliminated.
 428:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xTimerTaskHandle;
 1108              		.loc 1 428 0
 1109 0000 034B     		ldr	r3, .L87
 1110 0002 586B     		ldr	r0, [r3, #52]
 1111 0004 0028     		cmp	r0, #0
 1112 0006 01D1     		bne	.L85
 428:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xTimerTaskHandle;
 1113              		.loc 1 428 0 is_stmt 0 discriminator 1
 1114              		.syntax divided
 1115              	@ 428 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 1116 0008 72B6     		 cpsid i 
 1117              	@ 0 "" 2
 1118              		.thumb
 1119              		.syntax unified
 1120              	.L86:
 1121 000a FEE7     		b	.L86
 1122              	.L85:
 430:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 1123              		.loc 1 430 0 is_stmt 1
 1124              		@ sp needed
 1125 000c 7047     		bx	lr
 1126              	.L88:
 1127 000e C046     		.align	2
 1128              	.L87:
 1129 0010 00000000 		.word	.LANCHOR0
 1130              		.cfi_endproc
 1131              	.LFE40:
 1132              		.size	xTimerGetTimerDaemonTaskHandle, .-xTimerGetTimerDaemonTaskHandle
 1133              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1134              		.align	2
 1135              		.global	xTimerGetPeriod
 1136              		.code	16
 1137              		.thumb_func
 1138              		.type	xTimerGetPeriod, %function
 1139              	xTimerGetPeriod:
 1140              	.LFB41:
 434:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1141              		.loc 1 434 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              		@ link register save eliminated.
 1146              	.LVL133:
 437:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1147              		.loc 1 437 0
 1148 0000 0028     		cmp	r0, #0
 1149 0002 01D1     		bne	.L90
 437:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1150              		.loc 1 437 0 is_stmt 0 discriminator 1
 1151              		.syntax divided
 1152              	@ 437 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 1153 0004 72B6     		 cpsid i 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 40


 1154              	@ 0 "" 2
 1155              		.thumb
 1156              		.syntax unified
 1157              	.L91:
 1158 0006 FEE7     		b	.L91
 1159              	.L90:
 438:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 1160              		.loc 1 438 0 is_stmt 1
 1161 0008 8069     		ldr	r0, [r0, #24]
 1162              	.LVL134:
 439:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 1163              		.loc 1 439 0
 1164              		@ sp needed
 1165 000a 7047     		bx	lr
 1166              		.cfi_endproc
 1167              	.LFE41:
 1168              		.size	xTimerGetPeriod, .-xTimerGetPeriod
 1169              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1170              		.align	2
 1171              		.global	xTimerGetExpiryTime
 1172              		.code	16
 1173              		.thumb_func
 1174              		.type	xTimerGetExpiryTime, %function
 1175              	xTimerGetExpiryTime:
 1176              	.LFB42:
 443:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 1177              		.loc 1 443 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 1182              	.LVL135:
 447:Source\FreeRTOS\10.0.1\Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1183              		.loc 1 447 0
 1184 0000 0028     		cmp	r0, #0
 1185 0002 01D1     		bne	.L93
 447:Source\FreeRTOS\10.0.1\Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1186              		.loc 1 447 0 is_stmt 0 discriminator 1
 1187              		.syntax divided
 1188              	@ 447 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 1189 0004 72B6     		 cpsid i 
 1190              	@ 0 "" 2
 1191              		.thumb
 1192              		.syntax unified
 1193              	.L94:
 1194 0006 FEE7     		b	.L94
 1195              	.L93:
 448:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xReturn;
 1196              		.loc 1 448 0 is_stmt 1
 1197 0008 4068     		ldr	r0, [r0, #4]
 1198              	.LVL136:
 450:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 1199              		.loc 1 450 0
 1200              		@ sp needed
 1201 000a 7047     		bx	lr
 1202              		.cfi_endproc
 1203              	.LFE42:
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 41


 1204              		.size	xTimerGetExpiryTime, .-xTimerGetExpiryTime
 1205              		.section	.text.pcTimerGetName,"ax",%progbits
 1206              		.align	2
 1207              		.global	pcTimerGetName
 1208              		.code	16
 1209              		.thumb_func
 1210              		.type	pcTimerGetName, %function
 1211              	pcTimerGetName:
 1212              	.LFB43:
 454:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1213              		.loc 1 454 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 1218              	.LVL137:
 457:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return pxTimer->pcTimerName;
 1219              		.loc 1 457 0
 1220 0000 0028     		cmp	r0, #0
 1221 0002 01D1     		bne	.L96
 457:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return pxTimer->pcTimerName;
 1222              		.loc 1 457 0 is_stmt 0 discriminator 1
 1223              		.syntax divided
 1224              	@ 457 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 1225 0004 72B6     		 cpsid i 
 1226              	@ 0 "" 2
 1227              		.thumb
 1228              		.syntax unified
 1229              	.L97:
 1230 0006 FEE7     		b	.L97
 1231              	.L96:
 458:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 1232              		.loc 1 458 0 is_stmt 1
 1233 0008 0068     		ldr	r0, [r0]
 1234              	.LVL138:
 459:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 1235              		.loc 1 459 0
 1236              		@ sp needed
 1237 000a 7047     		bx	lr
 1238              		.cfi_endproc
 1239              	.LFE43:
 1240              		.size	pcTimerGetName, .-pcTimerGetName
 1241              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1242              		.align	2
 1243              		.global	xTimerIsTimerActive
 1244              		.code	16
 1245              		.thumb_func
 1246              		.type	xTimerIsTimerActive, %function
 1247              	xTimerIsTimerActive:
 1248              	.LFB53:
 943:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 944:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 945:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 946:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 1249              		.loc 1 946 0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 42


 1252              		@ frame_needed = 0, uses_anonymous_args = 0
 1253              	.LVL139:
 1254 0000 10B5     		push	{r4, lr}
 1255              		.cfi_def_cfa_offset 8
 1256              		.cfi_offset 4, -8
 1257              		.cfi_offset 14, -4
 1258 0002 041E     		subs	r4, r0, #0
 1259              	.LVL140:
 947:Source\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerIsInActiveList;
 948:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 949:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 950:Source\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 1260              		.loc 1 950 0
 1261 0004 01D1     		bne	.L99
 1262              		.loc 1 950 0 is_stmt 0 discriminator 1
 1263              		.syntax divided
 1264              	@ 950 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 1265 0006 72B6     		 cpsid i 
 1266              	@ 0 "" 2
 1267              		.thumb
 1268              		.syntax unified
 1269              	.L100:
 1270 0008 FEE7     		b	.L100
 1271              	.L99:
 951:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 952:Source\FreeRTOS\10.0.1\Source/timers.c **** 	/* Is the timer in the list of active timers? */
 953:Source\FreeRTOS\10.0.1\Source/timers.c **** 	taskENTER_CRITICAL();
 1272              		.loc 1 953 0 is_stmt 1
 1273 000a FFF7FEFF 		bl	vPortEnterCritical
 1274              	.LVL141:
 954:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 955:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Checking to see if it is in the NULL list in effect checks to see if
 956:Source\FreeRTOS\10.0.1\Source/timers.c **** 		it is referenced from either the current or the overflow timer lists in
 957:Source\FreeRTOS\10.0.1\Source/timers.c **** 		one go, but the logic has to be reversed, hence the '!'. */
 958:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xTimerIsInActiveList = ( BaseType_t ) !( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListIte
 1275              		.loc 1 958 0
 1276 000e 6469     		ldr	r4, [r4, #20]
 1277              	.LVL142:
 1278 0010 631E     		subs	r3, r4, #1
 1279 0012 9C41     		sbcs	r4, r4, r3
 1280 0014 E4B2     		uxtb	r4, r4
 1281              	.LVL143:
 959:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 960:Source\FreeRTOS\10.0.1\Source/timers.c **** 	taskEXIT_CRITICAL();
 1282              		.loc 1 960 0
 1283 0016 FFF7FEFF 		bl	vPortExitCritical
 1284              	.LVL144:
 961:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 962:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return xTimerIsInActiveList;
 963:Source\FreeRTOS\10.0.1\Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1285              		.loc 1 963 0
 1286 001a 2000     		movs	r0, r4
 1287              		@ sp needed
 1288              	.LVL145:
 1289 001c 10BD     		pop	{r4, pc}
 1290              		.cfi_endproc
 1291              	.LFE53:
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 43


 1292              		.size	xTimerIsTimerActive, .-xTimerIsTimerActive
 1293 001e C046     		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1294              		.align	2
 1295              		.global	pvTimerGetTimerID
 1296              		.code	16
 1297              		.thumb_func
 1298              		.type	pvTimerGetTimerID, %function
 1299              	pvTimerGetTimerID:
 1300              	.LFB54:
 964:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 965:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 966:Source\FreeRTOS\10.0.1\Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 967:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 1301              		.loc 1 967 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              	.LVL146:
 1306 0000 10B5     		push	{r4, lr}
 1307              		.cfi_def_cfa_offset 8
 1308              		.cfi_offset 4, -8
 1309              		.cfi_offset 14, -4
 1310 0002 041E     		subs	r4, r0, #0
 1311              	.LVL147:
 968:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 969:Source\FreeRTOS\10.0.1\Source/timers.c **** void *pvReturn;
 970:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 971:Source\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 1312              		.loc 1 971 0
 1313 0004 01D1     		bne	.L102
 1314              		.loc 1 971 0 is_stmt 0 discriminator 1
 1315              		.syntax divided
 1316              	@ 971 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 1317 0006 72B6     		 cpsid i 
 1318              	@ 0 "" 2
 1319              		.thumb
 1320              		.syntax unified
 1321              	.L103:
 1322 0008 FEE7     		b	.L103
 1323              	.L102:
 972:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 973:Source\FreeRTOS\10.0.1\Source/timers.c **** 	taskENTER_CRITICAL();
 1324              		.loc 1 973 0 is_stmt 1
 1325 000a FFF7FEFF 		bl	vPortEnterCritical
 1326              	.LVL148:
 974:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 975:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1327              		.loc 1 975 0
 1328 000e 246A     		ldr	r4, [r4, #32]
 1329              	.LVL149:
 976:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 977:Source\FreeRTOS\10.0.1\Source/timers.c **** 	taskEXIT_CRITICAL();
 1330              		.loc 1 977 0
 1331 0010 FFF7FEFF 		bl	vPortExitCritical
 1332              	.LVL150:
 978:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 979:Source\FreeRTOS\10.0.1\Source/timers.c **** 	return pvReturn;
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 44


 980:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 1333              		.loc 1 980 0
 1334 0014 2000     		movs	r0, r4
 1335              		@ sp needed
 1336              	.LVL151:
 1337 0016 10BD     		pop	{r4, pc}
 1338              		.cfi_endproc
 1339              	.LFE54:
 1340              		.size	pvTimerGetTimerID, .-pvTimerGetTimerID
 1341              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1342              		.align	2
 1343              		.global	vTimerSetTimerID
 1344              		.code	16
 1345              		.thumb_func
 1346              		.type	vTimerSetTimerID, %function
 1347              	vTimerSetTimerID:
 1348              	.LFB55:
 981:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 982:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 983:Source\FreeRTOS\10.0.1\Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
 984:Source\FreeRTOS\10.0.1\Source/timers.c **** {
 1349              		.loc 1 984 0
 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 0
 1352              		@ frame_needed = 0, uses_anonymous_args = 0
 1353              	.LVL152:
 1354 0000 70B5     		push	{r4, r5, r6, lr}
 1355              		.cfi_def_cfa_offset 16
 1356              		.cfi_offset 4, -16
 1357              		.cfi_offset 5, -12
 1358              		.cfi_offset 6, -8
 1359              		.cfi_offset 14, -4
 1360 0002 0400     		movs	r4, r0
 1361 0004 0D00     		movs	r5, r1
 1362              	.LVL153:
 985:Source\FreeRTOS\10.0.1\Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 986:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 987:Source\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 1363              		.loc 1 987 0
 1364 0006 0028     		cmp	r0, #0
 1365 0008 01D1     		bne	.L105
 1366              		.loc 1 987 0 is_stmt 0 discriminator 1
 1367              		.syntax divided
 1368              	@ 987 "Source\FreeRTOS\10.0.1\Source\timers.c" 1
 1369 000a 72B6     		 cpsid i 
 1370              	@ 0 "" 2
 1371              		.thumb
 1372              		.syntax unified
 1373              	.L106:
 1374 000c FEE7     		b	.L106
 1375              	.L105:
 988:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 989:Source\FreeRTOS\10.0.1\Source/timers.c **** 	taskENTER_CRITICAL();
 1376              		.loc 1 989 0 is_stmt 1
 1377 000e FFF7FEFF 		bl	vPortEnterCritical
 1378              	.LVL154:
 990:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 45


 991:Source\FreeRTOS\10.0.1\Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1379              		.loc 1 991 0
 1380 0012 2562     		str	r5, [r4, #32]
 992:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 993:Source\FreeRTOS\10.0.1\Source/timers.c **** 	taskEXIT_CRITICAL();
 1381              		.loc 1 993 0
 1382 0014 FFF7FEFF 		bl	vPortExitCritical
 1383              	.LVL155:
 994:Source\FreeRTOS\10.0.1\Source/timers.c **** }
 1384              		.loc 1 994 0
 1385              		@ sp needed
 1386              	.LVL156:
 1387              	.LVL157:
 1388 0018 70BD     		pop	{r4, r5, r6, pc}
 1389              		.cfi_endproc
 1390              	.LFE55:
 1391              		.size	vTimerSetTimerID, .-vTimerSetTimerID
 1392 001a C046     		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 1393              		.align	2
 1394              		.global	uxTimerGetTimerNumber
 1395              		.code	16
 1396              		.thumb_func
 1397              		.type	uxTimerGetTimerNumber, %function
 1398              	uxTimerGetTimerNumber:
 1399              	.LFB56:
 995:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 996:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 997:Source\FreeRTOS\10.0.1\Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
 998:Source\FreeRTOS\10.0.1\Source/timers.c **** 
 999:Source\FreeRTOS\10.0.1\Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1000:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
1001:Source\FreeRTOS\10.0.1\Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1002:Source\FreeRTOS\10.0.1\Source/timers.c **** 	BaseType_t xReturn;
1003:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1004:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1005:Source\FreeRTOS\10.0.1\Source/timers.c **** 		daemon task. */
1006:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
1007:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1008:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1009:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1010:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1011:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
1012:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1013:Source\FreeRTOS\10.0.1\Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1014:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1015:Source\FreeRTOS\10.0.1\Source/timers.c **** 		return xReturn;
1016:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
1017:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1018:Source\FreeRTOS\10.0.1\Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1019:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
1020:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1021:Source\FreeRTOS\10.0.1\Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1022:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1023:Source\FreeRTOS\10.0.1\Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1024:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
1025:Source\FreeRTOS\10.0.1\Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1026:Source\FreeRTOS\10.0.1\Source/timers.c **** 	BaseType_t xReturn;
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 46


1027:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1028:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* This function can only be called after a timer has been created or
1029:Source\FreeRTOS\10.0.1\Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1030:Source\FreeRTOS\10.0.1\Source/timers.c **** 		queue does not exist. */
1031:Source\FreeRTOS\10.0.1\Source/timers.c **** 		configASSERT( xTimerQueue );
1032:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1033:Source\FreeRTOS\10.0.1\Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1034:Source\FreeRTOS\10.0.1\Source/timers.c **** 		daemon task. */
1035:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
1036:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1037:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1038:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1039:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1040:Source\FreeRTOS\10.0.1\Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
1041:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1042:Source\FreeRTOS\10.0.1\Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1043:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1044:Source\FreeRTOS\10.0.1\Source/timers.c **** 		return xReturn;
1045:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
1046:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1047:Source\FreeRTOS\10.0.1\Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1048:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
1049:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1050:Source\FreeRTOS\10.0.1\Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1051:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1052:Source\FreeRTOS\10.0.1\Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1053:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 1400              		.loc 1 1053 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404              		@ link register save eliminated.
 1405              	.LVL158:
1054:Source\FreeRTOS\10.0.1\Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
 1406              		.loc 1 1054 0
 1407 0000 806A     		ldr	r0, [r0, #40]
 1408              	.LVL159:
1055:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 1409              		.loc 1 1055 0
 1410              		@ sp needed
 1411 0002 7047     		bx	lr
 1412              		.cfi_endproc
 1413              	.LFE56:
 1414              		.size	uxTimerGetTimerNumber, .-uxTimerGetTimerNumber
 1415              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 1416              		.align	2
 1417              		.global	vTimerSetTimerNumber
 1418              		.code	16
 1419              		.thumb_func
 1420              		.type	vTimerSetTimerNumber, %function
 1421              	vTimerSetTimerNumber:
 1422              	.LFB57:
1056:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1057:Source\FreeRTOS\10.0.1\Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1058:Source\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
1059:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1060:Source\FreeRTOS\10.0.1\Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 47


1061:Source\FreeRTOS\10.0.1\Source/timers.c **** 
1062:Source\FreeRTOS\10.0.1\Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1063:Source\FreeRTOS\10.0.1\Source/timers.c **** 	{
 1423              		.loc 1 1063 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
 1427              		@ link register save eliminated.
 1428              	.LVL160:
1064:Source\FreeRTOS\10.0.1\Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1429              		.loc 1 1064 0
 1430 0000 8162     		str	r1, [r0, #40]
1065:Source\FreeRTOS\10.0.1\Source/timers.c **** 	}
 1431              		.loc 1 1065 0
 1432              		@ sp needed
 1433 0002 7047     		bx	lr
 1434              		.cfi_endproc
 1435              	.LFE57:
 1436              		.size	vTimerSetTimerNumber, .-vTimerSetTimerNumber
 1437              		.section	.rodata.str1.4,"aMS",%progbits,1
 1438              		.align	2
 1439              	.LC3:
 1440 0000 546D7251 		.ascii	"TmrQ\000"
 1440      00
 1441 0005 000000   		.space	3
 1442              	.LC8:
 1443 0008 546D7220 		.ascii	"Tmr Svc\000"
 1443      53766300 
 1444              		.bss
 1445              		.align	2
 1446              		.set	.LANCHOR0,. + 0
 1447              		.type	pxCurrentTimerList, %object
 1448              		.size	pxCurrentTimerList, 4
 1449              	pxCurrentTimerList:
 1450 0000 00000000 		.space	4
 1451              		.type	pxOverflowTimerList, %object
 1452              		.size	pxOverflowTimerList, 4
 1453              	pxOverflowTimerList:
 1454 0004 00000000 		.space	4
 1455              		.type	xTimerQueue, %object
 1456              		.size	xTimerQueue, 4
 1457              	xTimerQueue:
 1458 0008 00000000 		.space	4
 1459              		.type	xActiveTimerList1, %object
 1460              		.size	xActiveTimerList1, 20
 1461              	xActiveTimerList1:
 1462 000c 00000000 		.space	20
 1462      00000000 
 1462      00000000 
 1462      00000000 
 1462      00000000 
 1463              		.type	xActiveTimerList2, %object
 1464              		.size	xActiveTimerList2, 20
 1465              	xActiveTimerList2:
 1466 0020 00000000 		.space	20
 1466      00000000 
 1466      00000000 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 48


 1466      00000000 
 1466      00000000 
 1467              		.type	xTimerTaskHandle, %object
 1468              		.size	xTimerTaskHandle, 4
 1469              	xTimerTaskHandle:
 1470 0034 00000000 		.space	4
 1471              		.type	xLastTime.10590, %object
 1472              		.size	xLastTime.10590, 4
 1473              	xLastTime.10590:
 1474 0038 00000000 		.space	4
 1475              		.text
 1476              	.Letext0:
 1477              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1478              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1479              		.file 4 ".\\Source\\FreeRTOS\\10.0.1\\Source\\portable\\GCC\\CM0/portmacro.h"
 1480              		.file 5 ".\\Source\\FreeRTOS\\10.0.1\\Source\\include/list.h"
 1481              		.file 6 ".\\Source\\FreeRTOS\\10.0.1\\Source\\include/task.h"
 1482              		.file 7 ".\\Source\\FreeRTOS\\10.0.1\\Source\\include/queue.h"
 1483              		.file 8 ".\\Source\\FreeRTOS\\10.0.1\\Source\\include/timers.h"
 1484              		.file 9 ".\\Source\\FreeRTOS\\10.0.1\\Source\\include/portable.h"
 1485              		.section	.debug_info,"",%progbits
 1486              	.Ldebug_info0:
 1487 0000 DF0E0000 		.4byte	0xedf
 1488 0004 0400     		.2byte	0x4
 1489 0006 00000000 		.4byte	.Ldebug_abbrev0
 1490 000a 04       		.byte	0x4
 1491 000b 01       		.uleb128 0x1
 1492 000c 1D060000 		.4byte	.LASF128
 1493 0010 0C       		.byte	0xc
 1494 0011 8C080000 		.4byte	.LASF129
 1495 0015 9B030000 		.4byte	.LASF130
 1496 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1497 001d 00000000 		.4byte	0
 1498 0021 00000000 		.4byte	.Ldebug_line0
 1499 0025 02       		.uleb128 0x2
 1500 0026 04       		.byte	0x4
 1501 0027 07       		.byte	0x7
 1502 0028 F1060000 		.4byte	.LASF0
 1503 002c 03       		.uleb128 0x3
 1504 002d 04       		.byte	0x4
 1505 002e 05       		.byte	0x5
 1506 002f 696E7400 		.ascii	"int\000"
 1507 0033 02       		.uleb128 0x2
 1508 0034 08       		.byte	0x8
 1509 0035 05       		.byte	0x5
 1510 0036 25010000 		.4byte	.LASF1
 1511 003a 02       		.uleb128 0x2
 1512 003b 08       		.byte	0x8
 1513 003c 04       		.byte	0x4
 1514 003d AF060000 		.4byte	.LASF2
 1515 0041 02       		.uleb128 0x2
 1516 0042 01       		.byte	0x1
 1517 0043 06       		.byte	0x6
 1518 0044 33010000 		.4byte	.LASF3
 1519 0048 04       		.uleb128 0x4
 1520 0049 5B000000 		.4byte	.LASF8
 1521 004d 02       		.byte	0x2
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 49


 1522 004e 1D       		.byte	0x1d
 1523 004f 53000000 		.4byte	0x53
 1524 0053 02       		.uleb128 0x2
 1525 0054 01       		.byte	0x1
 1526 0055 08       		.byte	0x8
 1527 0056 1D050000 		.4byte	.LASF4
 1528 005a 02       		.uleb128 0x2
 1529 005b 02       		.byte	0x2
 1530 005c 05       		.byte	0x5
 1531 005d 57050000 		.4byte	.LASF5
 1532 0061 02       		.uleb128 0x2
 1533 0062 02       		.byte	0x2
 1534 0063 07       		.byte	0x7
 1535 0064 6B070000 		.4byte	.LASF6
 1536 0068 02       		.uleb128 0x2
 1537 0069 04       		.byte	0x4
 1538 006a 05       		.byte	0x5
 1539 006b 63010000 		.4byte	.LASF7
 1540 006f 04       		.uleb128 0x4
 1541 0070 4C070000 		.4byte	.LASF9
 1542 0074 02       		.byte	0x2
 1543 0075 41       		.byte	0x41
 1544 0076 7A000000 		.4byte	0x7a
 1545 007a 02       		.uleb128 0x2
 1546 007b 04       		.byte	0x4
 1547 007c 07       		.byte	0x7
 1548 007d A5020000 		.4byte	.LASF10
 1549 0081 02       		.uleb128 0x2
 1550 0082 08       		.byte	0x8
 1551 0083 07       		.byte	0x7
 1552 0084 4C010000 		.4byte	.LASF11
 1553 0088 02       		.uleb128 0x2
 1554 0089 04       		.byte	0x4
 1555 008a 07       		.byte	0x7
 1556 008b 72030000 		.4byte	.LASF12
 1557 008f 05       		.uleb128 0x5
 1558 0090 04       		.byte	0x4
 1559 0091 02       		.uleb128 0x2
 1560 0092 01       		.byte	0x1
 1561 0093 08       		.byte	0x8
 1562 0094 BB060000 		.4byte	.LASF13
 1563 0098 06       		.uleb128 0x6
 1564 0099 04       		.byte	0x4
 1565 009a 9E000000 		.4byte	0x9e
 1566 009e 07       		.uleb128 0x7
 1567 009f 91000000 		.4byte	0x91
 1568 00a3 04       		.uleb128 0x4
 1569 00a4 10080000 		.4byte	.LASF14
 1570 00a8 03       		.byte	0x3
 1571 00a9 18       		.byte	0x18
 1572 00aa 48000000 		.4byte	0x48
 1573 00ae 04       		.uleb128 0x4
 1574 00af D9050000 		.4byte	.LASF15
 1575 00b3 03       		.byte	0x3
 1576 00b4 30       		.byte	0x30
 1577 00b5 6F000000 		.4byte	0x6f
 1578 00b9 02       		.uleb128 0x2
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 50


 1579 00ba 04       		.byte	0x4
 1580 00bb 04       		.byte	0x4
 1581 00bc CE040000 		.4byte	.LASF16
 1582 00c0 02       		.uleb128 0x2
 1583 00c1 08       		.byte	0x8
 1584 00c2 04       		.byte	0x4
 1585 00c3 C4010000 		.4byte	.LASF17
 1586 00c7 04       		.uleb128 0x4
 1587 00c8 CB010000 		.4byte	.LASF18
 1588 00cc 04       		.byte	0x4
 1589 00cd 38       		.byte	0x38
 1590 00ce 68000000 		.4byte	0x68
 1591 00d2 04       		.uleb128 0x4
 1592 00d3 CD080000 		.4byte	.LASF19
 1593 00d7 04       		.byte	0x4
 1594 00d8 39       		.byte	0x39
 1595 00d9 7A000000 		.4byte	0x7a
 1596 00dd 04       		.uleb128 0x4
 1597 00de 40040000 		.4byte	.LASF20
 1598 00e2 04       		.byte	0x4
 1599 00e3 3F       		.byte	0x3f
 1600 00e4 AE000000 		.4byte	0xae
 1601 00e8 08       		.uleb128 0x8
 1602 00e9 B3080000 		.4byte	.LASF27
 1603 00ed 14       		.byte	0x14
 1604 00ee 05       		.byte	0x5
 1605 00ef 8B       		.byte	0x8b
 1606 00f0 31010000 		.4byte	0x131
 1607 00f4 09       		.uleb128 0x9
 1608 00f5 D4070000 		.4byte	.LASF21
 1609 00f9 05       		.byte	0x5
 1610 00fa 8E       		.byte	0x8e
 1611 00fb DD000000 		.4byte	0xdd
 1612 00ff 00       		.byte	0
 1613 0100 09       		.uleb128 0x9
 1614 0101 28080000 		.4byte	.LASF22
 1615 0105 05       		.byte	0x5
 1616 0106 8F       		.byte	0x8f
 1617 0107 31010000 		.4byte	0x131
 1618 010b 04       		.byte	0x4
 1619 010c 09       		.uleb128 0x9
 1620 010d 94040000 		.4byte	.LASF23
 1621 0111 05       		.byte	0x5
 1622 0112 90       		.byte	0x90
 1623 0113 31010000 		.4byte	0x131
 1624 0117 08       		.byte	0x8
 1625 0118 09       		.uleb128 0x9
 1626 0119 CC070000 		.4byte	.LASF24
 1627 011d 05       		.byte	0x5
 1628 011e 91       		.byte	0x91
 1629 011f 8F000000 		.4byte	0x8f
 1630 0123 0C       		.byte	0xc
 1631 0124 09       		.uleb128 0x9
 1632 0125 E5040000 		.4byte	.LASF25
 1633 0129 05       		.byte	0x5
 1634 012a 92       		.byte	0x92
 1635 012b 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 51


 1636 012f 10       		.byte	0x10
 1637 0130 00       		.byte	0
 1638 0131 06       		.uleb128 0x6
 1639 0132 04       		.byte	0x4
 1640 0133 E8000000 		.4byte	0xe8
 1641 0137 04       		.uleb128 0x4
 1642 0138 89040000 		.4byte	.LASF26
 1643 013c 05       		.byte	0x5
 1644 013d 95       		.byte	0x95
 1645 013e E8000000 		.4byte	0xe8
 1646 0142 08       		.uleb128 0x8
 1647 0143 BC070000 		.4byte	.LASF28
 1648 0147 0C       		.byte	0xc
 1649 0148 05       		.byte	0x5
 1650 0149 97       		.byte	0x97
 1651 014a 73010000 		.4byte	0x173
 1652 014e 09       		.uleb128 0x9
 1653 014f D4070000 		.4byte	.LASF21
 1654 0153 05       		.byte	0x5
 1655 0154 9A       		.byte	0x9a
 1656 0155 DD000000 		.4byte	0xdd
 1657 0159 00       		.byte	0
 1658 015a 09       		.uleb128 0x9
 1659 015b 28080000 		.4byte	.LASF22
 1660 015f 05       		.byte	0x5
 1661 0160 9B       		.byte	0x9b
 1662 0161 31010000 		.4byte	0x131
 1663 0165 04       		.byte	0x4
 1664 0166 09       		.uleb128 0x9
 1665 0167 94040000 		.4byte	.LASF23
 1666 016b 05       		.byte	0x5
 1667 016c 9C       		.byte	0x9c
 1668 016d 31010000 		.4byte	0x131
 1669 0171 08       		.byte	0x8
 1670 0172 00       		.byte	0
 1671 0173 04       		.uleb128 0x4
 1672 0174 32000000 		.4byte	.LASF29
 1673 0178 05       		.byte	0x5
 1674 0179 9E       		.byte	0x9e
 1675 017a 42010000 		.4byte	0x142
 1676 017e 08       		.uleb128 0x8
 1677 017f B5050000 		.4byte	.LASF30
 1678 0183 14       		.byte	0x14
 1679 0184 05       		.byte	0x5
 1680 0185 A3       		.byte	0xa3
 1681 0186 AF010000 		.4byte	0x1af
 1682 018a 09       		.uleb128 0x9
 1683 018b 95020000 		.4byte	.LASF31
 1684 018f 05       		.byte	0x5
 1685 0190 A6       		.byte	0xa6
 1686 0191 AF010000 		.4byte	0x1af
 1687 0195 00       		.byte	0
 1688 0196 09       		.uleb128 0x9
 1689 0197 DD040000 		.4byte	.LASF32
 1690 019b 05       		.byte	0x5
 1691 019c A7       		.byte	0xa7
 1692 019d B4010000 		.4byte	0x1b4
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 52


 1693 01a1 04       		.byte	0x4
 1694 01a2 09       		.uleb128 0x9
 1695 01a3 EE000000 		.4byte	.LASF33
 1696 01a7 05       		.byte	0x5
 1697 01a8 A8       		.byte	0xa8
 1698 01a9 73010000 		.4byte	0x173
 1699 01ad 08       		.byte	0x8
 1700 01ae 00       		.byte	0
 1701 01af 0A       		.uleb128 0xa
 1702 01b0 D2000000 		.4byte	0xd2
 1703 01b4 06       		.uleb128 0x6
 1704 01b5 04       		.byte	0x4
 1705 01b6 37010000 		.4byte	0x137
 1706 01ba 04       		.uleb128 0x4
 1707 01bb BB050000 		.4byte	.LASF34
 1708 01bf 05       		.byte	0x5
 1709 01c0 AA       		.byte	0xaa
 1710 01c1 7E010000 		.4byte	0x17e
 1711 01c5 04       		.uleb128 0x4
 1712 01c6 A2010000 		.4byte	.LASF35
 1713 01ca 06       		.byte	0x6
 1714 01cb 3D       		.byte	0x3d
 1715 01cc 8F000000 		.4byte	0x8f
 1716 01d0 07       		.uleb128 0x7
 1717 01d1 98000000 		.4byte	0x98
 1718 01d5 04       		.uleb128 0x4
 1719 01d6 F7000000 		.4byte	.LASF36
 1720 01da 07       		.byte	0x7
 1721 01db 2E       		.byte	0x2e
 1722 01dc 8F000000 		.4byte	0x8f
 1723 01e0 04       		.uleb128 0x4
 1724 01e1 B7020000 		.4byte	.LASF37
 1725 01e5 08       		.byte	0x8
 1726 01e6 4C       		.byte	0x4c
 1727 01e7 8F000000 		.4byte	0x8f
 1728 01eb 04       		.uleb128 0x4
 1729 01ec 0E070000 		.4byte	.LASF38
 1730 01f0 08       		.byte	0x8
 1731 01f1 51       		.byte	0x51
 1732 01f2 F6010000 		.4byte	0x1f6
 1733 01f6 06       		.uleb128 0x6
 1734 01f7 04       		.byte	0x4
 1735 01f8 FC010000 		.4byte	0x1fc
 1736 01fc 0B       		.uleb128 0xb
 1737 01fd 07020000 		.4byte	0x207
 1738 0201 0C       		.uleb128 0xc
 1739 0202 E0010000 		.4byte	0x1e0
 1740 0206 00       		.byte	0
 1741 0207 08       		.uleb128 0x8
 1742 0208 0D050000 		.4byte	.LASF39
 1743 020c 2C       		.byte	0x2c
 1744 020d 01       		.byte	0x1
 1745 020e 44       		.byte	0x44
 1746 020f 68020000 		.4byte	0x268
 1747 0213 09       		.uleb128 0x9
 1748 0214 F4020000 		.4byte	.LASF40
 1749 0218 01       		.byte	0x1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 53


 1750 0219 46       		.byte	0x46
 1751 021a 98000000 		.4byte	0x98
 1752 021e 00       		.byte	0
 1753 021f 09       		.uleb128 0x9
 1754 0220 A0000000 		.4byte	.LASF41
 1755 0224 01       		.byte	0x1
 1756 0225 47       		.byte	0x47
 1757 0226 37010000 		.4byte	0x137
 1758 022a 04       		.byte	0x4
 1759 022b 09       		.uleb128 0x9
 1760 022c 79020000 		.4byte	.LASF42
 1761 0230 01       		.byte	0x1
 1762 0231 48       		.byte	0x48
 1763 0232 DD000000 		.4byte	0xdd
 1764 0236 18       		.byte	0x18
 1765 0237 09       		.uleb128 0x9
 1766 0238 25000000 		.4byte	.LASF43
 1767 023c 01       		.byte	0x1
 1768 023d 49       		.byte	0x49
 1769 023e D2000000 		.4byte	0xd2
 1770 0242 1C       		.byte	0x1c
 1771 0243 09       		.uleb128 0x9
 1772 0244 68030000 		.4byte	.LASF44
 1773 0248 01       		.byte	0x1
 1774 0249 4A       		.byte	0x4a
 1775 024a 8F000000 		.4byte	0x8f
 1776 024e 20       		.byte	0x20
 1777 024f 09       		.uleb128 0x9
 1778 0250 DF070000 		.4byte	.LASF45
 1779 0254 01       		.byte	0x1
 1780 0255 4B       		.byte	0x4b
 1781 0256 EB010000 		.4byte	0x1eb
 1782 025a 24       		.byte	0x24
 1783 025b 09       		.uleb128 0x9
 1784 025c 60040000 		.4byte	.LASF46
 1785 0260 01       		.byte	0x1
 1786 0261 4D       		.byte	0x4d
 1787 0262 D2000000 		.4byte	0xd2
 1788 0266 28       		.byte	0x28
 1789 0267 00       		.byte	0
 1790 0268 04       		.uleb128 0x4
 1791 0269 33020000 		.4byte	.LASF47
 1792 026d 01       		.byte	0x1
 1793 026e 53       		.byte	0x53
 1794 026f 07020000 		.4byte	0x207
 1795 0273 04       		.uleb128 0x4
 1796 0274 A9070000 		.4byte	.LASF48
 1797 0278 01       		.byte	0x1
 1798 0279 57       		.byte	0x57
 1799 027a 68020000 		.4byte	0x268
 1800 027e 08       		.uleb128 0x8
 1801 027f 47020000 		.4byte	.LASF49
 1802 0283 08       		.byte	0x8
 1803 0284 01       		.byte	0x1
 1804 0285 5E       		.byte	0x5e
 1805 0286 A3020000 		.4byte	0x2a3
 1806 028a 09       		.uleb128 0x9
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 54


 1807 028b FF040000 		.4byte	.LASF50
 1808 028f 01       		.byte	0x1
 1809 0290 60       		.byte	0x60
 1810 0291 DD000000 		.4byte	0xdd
 1811 0295 00       		.byte	0
 1812 0296 09       		.uleb128 0x9
 1813 0297 E2050000 		.4byte	.LASF51
 1814 029b 01       		.byte	0x1
 1815 029c 61       		.byte	0x61
 1816 029d A3020000 		.4byte	0x2a3
 1817 02a1 04       		.byte	0x4
 1818 02a2 00       		.byte	0
 1819 02a3 06       		.uleb128 0x6
 1820 02a4 04       		.byte	0x4
 1821 02a5 73020000 		.4byte	0x273
 1822 02a9 04       		.uleb128 0x4
 1823 02aa 65000000 		.4byte	.LASF52
 1824 02ae 01       		.byte	0x1
 1825 02af 62       		.byte	0x62
 1826 02b0 7E020000 		.4byte	0x27e
 1827 02b4 0D       		.uleb128 0xd
 1828 02b5 08       		.byte	0x8
 1829 02b6 01       		.byte	0x1
 1830 02b7 71       		.byte	0x71
 1831 02b8 C8020000 		.4byte	0x2c8
 1832 02bc 0E       		.uleb128 0xe
 1833 02bd F2010000 		.4byte	.LASF131
 1834 02c1 01       		.byte	0x1
 1835 02c2 73       		.byte	0x73
 1836 02c3 A9020000 		.4byte	0x2a9
 1837 02c7 00       		.byte	0
 1838 02c8 08       		.uleb128 0x8
 1839 02c9 D6010000 		.4byte	.LASF53
 1840 02cd 0C       		.byte	0xc
 1841 02ce 01       		.byte	0x1
 1842 02cf 6E       		.byte	0x6e
 1843 02d0 EB020000 		.4byte	0x2eb
 1844 02d4 09       		.uleb128 0x9
 1845 02d5 8B070000 		.4byte	.LASF54
 1846 02d9 01       		.byte	0x1
 1847 02da 70       		.byte	0x70
 1848 02db C7000000 		.4byte	0xc7
 1849 02df 00       		.byte	0
 1850 02e0 0F       		.uleb128 0xf
 1851 02e1 7500     		.ascii	"u\000"
 1852 02e3 01       		.byte	0x1
 1853 02e4 7A       		.byte	0x7a
 1854 02e5 B4020000 		.4byte	0x2b4
 1855 02e9 04       		.byte	0x4
 1856 02ea 00       		.byte	0
 1857 02eb 04       		.uleb128 0x4
 1858 02ec 03020000 		.4byte	.LASF55
 1859 02f0 01       		.byte	0x1
 1860 02f1 7B       		.byte	0x7b
 1861 02f2 C8020000 		.4byte	0x2c8
 1862 02f6 10       		.uleb128 0x10
 1863 02f7 4B040000 		.4byte	.LASF56
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 55


 1864 02fb 01       		.byte	0x1
 1865 02fc 5602     		.2byte	0x256
 1866 02fe DD000000 		.4byte	0xdd
 1867 0302 00000000 		.4byte	.LFB47
 1868 0306 20000000 		.4byte	.LFE47-.LFB47
 1869 030a 01       		.uleb128 0x1
 1870 030b 9C       		.byte	0x9c
 1871 030c 31030000 		.4byte	0x331
 1872 0310 11       		.uleb128 0x11
 1873 0311 12030000 		.4byte	.LASF58
 1874 0315 01       		.byte	0x1
 1875 0316 5602     		.2byte	0x256
 1876 0318 37030000 		.4byte	0x337
 1877 031c 00000000 		.4byte	.LLST0
 1878 0320 12       		.uleb128 0x12
 1879 0321 18080000 		.4byte	.LASF62
 1880 0325 01       		.byte	0x1
 1881 0326 5802     		.2byte	0x258
 1882 0328 DD000000 		.4byte	0xdd
 1883 032c 3A000000 		.4byte	.LLST1
 1884 0330 00       		.byte	0
 1885 0331 06       		.uleb128 0x6
 1886 0332 04       		.byte	0x4
 1887 0333 C7000000 		.4byte	0xc7
 1888 0337 07       		.uleb128 0x7
 1889 0338 31030000 		.4byte	0x331
 1890 033c 10       		.uleb128 0x10
 1891 033d D3000000 		.4byte	.LASF57
 1892 0341 01       		.byte	0x1
 1893 0342 8702     		.2byte	0x287
 1894 0344 C7000000 		.4byte	0xc7
 1895 0348 00000000 		.4byte	.LFB49
 1896 034c 44000000 		.4byte	.LFE49-.LFB49
 1897 0350 01       		.uleb128 0x1
 1898 0351 9C       		.byte	0x9c
 1899 0352 D1030000 		.4byte	0x3d1
 1900 0356 11       		.uleb128 0x11
 1901 0357 E2050000 		.4byte	.LASF51
 1902 035b 01       		.byte	0x1
 1903 035c 8702     		.2byte	0x287
 1904 035e D1030000 		.4byte	0x3d1
 1905 0362 58000000 		.4byte	.LLST2
 1906 0366 11       		.uleb128 0x11
 1907 0367 58030000 		.4byte	.LASF59
 1908 036b 01       		.byte	0x1
 1909 036c 8702     		.2byte	0x287
 1910 036e D6030000 		.4byte	0x3d6
 1911 0372 DE000000 		.4byte	.LLST3
 1912 0376 11       		.uleb128 0x11
 1913 0377 2B050000 		.4byte	.LASF60
 1914 037b 01       		.byte	0x1
 1915 037c 8702     		.2byte	0x287
 1916 037e D6030000 		.4byte	0x3d6
 1917 0382 55010000 		.4byte	.LLST4
 1918 0386 11       		.uleb128 0x11
 1919 0387 2F030000 		.4byte	.LASF61
 1920 038b 01       		.byte	0x1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 56


 1921 038c 8702     		.2byte	0x287
 1922 038e D6030000 		.4byte	0x3d6
 1923 0392 A8010000 		.4byte	.LLST5
 1924 0396 12       		.uleb128 0x12
 1925 0397 80010000 		.4byte	.LASF63
 1926 039b 01       		.byte	0x1
 1927 039c 8902     		.2byte	0x289
 1928 039e C7000000 		.4byte	0xc7
 1929 03a2 FB010000 		.4byte	.LLST6
 1930 03a6 13       		.uleb128 0x13
 1931 03a7 1C000000 		.4byte	.LVL10
 1932 03ab F70D0000 		.4byte	0xdf7
 1933 03af BD030000 		.4byte	0x3bd
 1934 03b3 14       		.uleb128 0x14
 1935 03b4 01       		.uleb128 0x1
 1936 03b5 51       		.byte	0x51
 1937 03b6 05       		.uleb128 0x5
 1938 03b7 F3       		.byte	0xf3
 1939 03b8 01       		.uleb128 0x1
 1940 03b9 50       		.byte	0x50
 1941 03ba 23       		.byte	0x23
 1942 03bb 04       		.uleb128 0x4
 1943 03bc 00       		.byte	0
 1944 03bd 15       		.uleb128 0x15
 1945 03be 32000000 		.4byte	.LVL15
 1946 03c2 F70D0000 		.4byte	0xdf7
 1947 03c6 14       		.uleb128 0x14
 1948 03c7 01       		.uleb128 0x1
 1949 03c8 51       		.byte	0x51
 1950 03c9 05       		.uleb128 0x5
 1951 03ca F3       		.byte	0xf3
 1952 03cb 01       		.uleb128 0x1
 1953 03cc 50       		.byte	0x50
 1954 03cd 23       		.byte	0x23
 1955 03ce 04       		.uleb128 0x4
 1956 03cf 00       		.byte	0
 1957 03d0 00       		.byte	0
 1958 03d1 07       		.uleb128 0x7
 1959 03d2 A3020000 		.4byte	0x2a3
 1960 03d6 07       		.uleb128 0x7
 1961 03d7 DD000000 		.4byte	0xdd
 1962 03db 16       		.uleb128 0x16
 1963 03dc ED080000 		.4byte	.LASF64
 1964 03e0 01       		.byte	0x1
 1965 03e1 7E03     		.2byte	0x37e
 1966 03e3 00000000 		.4byte	.LFB52
 1967 03e7 4C000000 		.4byte	.LFE52-.LFB52
 1968 03eb 01       		.uleb128 0x1
 1969 03ec 9C       		.byte	0x9c
 1970 03ed 60040000 		.4byte	0x460
 1971 03f1 17       		.uleb128 0x17
 1972 03f2 06000000 		.4byte	.LVL20
 1973 03f6 030E0000 		.4byte	0xe03
 1974 03fa 13       		.uleb128 0x13
 1975 03fb 1A000000 		.4byte	.LVL21
 1976 03ff 0E0E0000 		.4byte	0xe0e
 1977 0403 0E040000 		.4byte	0x40e
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 57


 1978 0407 14       		.uleb128 0x14
 1979 0408 01       		.uleb128 0x1
 1980 0409 50       		.byte	0x50
 1981 040a 02       		.uleb128 0x2
 1982 040b 76       		.byte	0x76
 1983 040c 00       		.sleb128 0
 1984 040d 00       		.byte	0
 1985 040e 13       		.uleb128 0x13
 1986 040f 24000000 		.4byte	.LVL22
 1987 0413 0E0E0000 		.4byte	0xe0e
 1988 0417 22040000 		.4byte	0x422
 1989 041b 14       		.uleb128 0x14
 1990 041c 01       		.uleb128 0x1
 1991 041d 50       		.byte	0x50
 1992 041e 02       		.uleb128 0x2
 1993 041f 75       		.byte	0x75
 1994 0420 00       		.sleb128 0
 1995 0421 00       		.byte	0
 1996 0422 13       		.uleb128 0x13
 1997 0423 32000000 		.4byte	.LVL23
 1998 0427 1A0E0000 		.4byte	0xe1a
 1999 042b 3F040000 		.4byte	0x43f
 2000 042f 14       		.uleb128 0x14
 2001 0430 01       		.uleb128 0x1
 2002 0431 50       		.byte	0x50
 2003 0432 01       		.uleb128 0x1
 2004 0433 3A       		.byte	0x3a
 2005 0434 14       		.uleb128 0x14
 2006 0435 01       		.uleb128 0x1
 2007 0436 51       		.byte	0x51
 2008 0437 01       		.uleb128 0x1
 2009 0438 3C       		.byte	0x3c
 2010 0439 14       		.uleb128 0x14
 2011 043a 01       		.uleb128 0x1
 2012 043b 52       		.byte	0x52
 2013 043c 01       		.uleb128 0x1
 2014 043d 30       		.byte	0x30
 2015 043e 00       		.byte	0
 2016 043f 13       		.uleb128 0x13
 2017 0440 3E000000 		.4byte	.LVL24
 2018 0444 260E0000 		.4byte	0xe26
 2019 0448 56040000 		.4byte	0x456
 2020 044c 14       		.uleb128 0x14
 2021 044d 01       		.uleb128 0x1
 2022 044e 51       		.byte	0x51
 2023 044f 05       		.uleb128 0x5
 2024 0450 03       		.byte	0x3
 2025 0451 00000000 		.4byte	.LC3
 2026 0455 00       		.byte	0
 2027 0456 17       		.uleb128 0x17
 2028 0457 42000000 		.4byte	.LVL25
 2029 045b 320E0000 		.4byte	0xe32
 2030 045f 00       		.byte	0
 2031 0460 16       		.uleb128 0x16
 2032 0461 76080000 		.4byte	.LASF65
 2033 0465 01       		.byte	0x1
 2034 0466 6001     		.2byte	0x160
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 58


 2035 0468 00000000 		.4byte	.LFB38
 2036 046c 3A000000 		.4byte	.LFE38-.LFB38
 2037 0470 01       		.uleb128 0x1
 2038 0471 9C       		.byte	0x9c
 2039 0472 EE040000 		.4byte	0x4ee
 2040 0476 11       		.uleb128 0x11
 2041 0477 F4020000 		.4byte	.LASF40
 2042 047b 01       		.byte	0x1
 2043 047c 6001     		.2byte	0x160
 2044 047e D0010000 		.4byte	0x1d0
 2045 0482 1A020000 		.4byte	.LLST7
 2046 0486 11       		.uleb128 0x11
 2047 0487 79020000 		.4byte	.LASF42
 2048 048b 01       		.byte	0x1
 2049 048c 6101     		.2byte	0x161
 2050 048e D6030000 		.4byte	0x3d6
 2051 0492 46020000 		.4byte	.LLST8
 2052 0496 11       		.uleb128 0x11
 2053 0497 25000000 		.4byte	.LASF43
 2054 049b 01       		.byte	0x1
 2055 049c 6201     		.2byte	0x162
 2056 049e EE040000 		.4byte	0x4ee
 2057 04a2 72020000 		.4byte	.LLST9
 2058 04a6 11       		.uleb128 0x11
 2059 04a7 68030000 		.4byte	.LASF44
 2060 04ab 01       		.byte	0x1
 2061 04ac 6301     		.2byte	0x163
 2062 04ae F3040000 		.4byte	0x4f3
 2063 04b2 9E020000 		.4byte	.LLST10
 2064 04b6 18       		.uleb128 0x18
 2065 04b7 DF070000 		.4byte	.LASF45
 2066 04bb 01       		.byte	0x1
 2067 04bc 6401     		.2byte	0x164
 2068 04be EB010000 		.4byte	0x1eb
 2069 04c2 02       		.uleb128 0x2
 2070 04c3 91       		.byte	0x91
 2071 04c4 00       		.sleb128 0
 2072 04c5 18       		.uleb128 0x18
 2073 04c6 E6060000 		.4byte	.LASF66
 2074 04ca 01       		.byte	0x1
 2075 04cb 6501     		.2byte	0x165
 2076 04cd A3020000 		.4byte	0x2a3
 2077 04d1 02       		.uleb128 0x2
 2078 04d2 91       		.byte	0x91
 2079 04d3 04       		.sleb128 4
 2080 04d4 17       		.uleb128 0x17
 2081 04d5 20000000 		.4byte	.LVL27
 2082 04d9 DB030000 		.4byte	0x3db
 2083 04dd 15       		.uleb128 0x15
 2084 04de 34000000 		.4byte	.LVL28
 2085 04e2 3D0E0000 		.4byte	0xe3d
 2086 04e6 14       		.uleb128 0x14
 2087 04e7 01       		.uleb128 0x1
 2088 04e8 50       		.byte	0x50
 2089 04e9 02       		.uleb128 0x2
 2090 04ea 74       		.byte	0x74
 2091 04eb 04       		.sleb128 4
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 59


 2092 04ec 00       		.byte	0
 2093 04ed 00       		.byte	0
 2094 04ee 07       		.uleb128 0x7
 2095 04ef D2000000 		.4byte	0xd2
 2096 04f3 07       		.uleb128 0x7
 2097 04f4 8F000000 		.4byte	0x8f
 2098 04f8 19       		.uleb128 0x19
 2099 04f9 8B050000 		.4byte	.LASF68
 2100 04fd 01       		.byte	0x1
 2101 04fe DF       		.byte	0xdf
 2102 04ff C7000000 		.4byte	0xc7
 2103 0503 00000000 		.4byte	.LFB36
 2104 0507 44000000 		.4byte	.LFE36-.LFB36
 2105 050b 01       		.uleb128 0x1
 2106 050c 9C       		.byte	0x9c
 2107 050d 61050000 		.4byte	0x561
 2108 0511 1A       		.uleb128 0x1a
 2109 0512 8D020000 		.4byte	.LASF67
 2110 0516 01       		.byte	0x1
 2111 0517 E1       		.byte	0xe1
 2112 0518 C7000000 		.4byte	0xc7
 2113 051c CA020000 		.4byte	.LLST11
 2114 0520 17       		.uleb128 0x17
 2115 0521 08000000 		.4byte	.LVL34
 2116 0525 DB030000 		.4byte	0x3db
 2117 0529 15       		.uleb128 0x15
 2118 052a 26000000 		.4byte	.LVL35
 2119 052e 490E0000 		.4byte	0xe49
 2120 0532 14       		.uleb128 0x14
 2121 0533 01       		.uleb128 0x1
 2122 0534 50       		.byte	0x50
 2123 0535 05       		.uleb128 0x5
 2124 0536 03       		.byte	0x3
 2125 0537 00000000 		.4byte	prvTimerTask
 2126 053b 14       		.uleb128 0x14
 2127 053c 01       		.uleb128 0x1
 2128 053d 51       		.byte	0x51
 2129 053e 05       		.uleb128 0x5
 2130 053f 03       		.byte	0x3
 2131 0540 08000000 		.4byte	.LC8
 2132 0544 14       		.uleb128 0x14
 2133 0545 01       		.uleb128 0x1
 2134 0546 52       		.byte	0x52
 2135 0547 02       		.uleb128 0x2
 2136 0548 08       		.byte	0x8
 2137 0549 80       		.byte	0x80
 2138 054a 14       		.uleb128 0x14
 2139 054b 01       		.uleb128 0x1
 2140 054c 53       		.byte	0x53
 2141 054d 01       		.uleb128 0x1
 2142 054e 30       		.byte	0x30
 2143 054f 14       		.uleb128 0x14
 2144 0550 02       		.uleb128 0x2
 2145 0551 7D       		.byte	0x7d
 2146 0552 00       		.sleb128 0
 2147 0553 01       		.uleb128 0x1
 2148 0554 33       		.byte	0x33
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 60


 2149 0555 14       		.uleb128 0x14
 2150 0556 02       		.uleb128 0x2
 2151 0557 7D       		.byte	0x7d
 2152 0558 04       		.sleb128 4
 2153 0559 05       		.uleb128 0x5
 2154 055a 03       		.byte	0x3
 2155 055b 34000000 		.4byte	.LANCHOR0+52
 2156 055f 00       		.byte	0
 2157 0560 00       		.byte	0
 2158 0561 1B       		.uleb128 0x1b
 2159 0562 7E070000 		.4byte	.LASF69
 2160 0566 01       		.byte	0x1
 2161 0567 1601     		.2byte	0x116
 2162 0569 E0010000 		.4byte	0x1e0
 2163 056d 00000000 		.4byte	.LFB37
 2164 0571 2E000000 		.4byte	.LFE37-.LFB37
 2165 0575 01       		.uleb128 0x1
 2166 0576 9C       		.byte	0x9c
 2167 0577 21060000 		.4byte	0x621
 2168 057b 11       		.uleb128 0x11
 2169 057c F4020000 		.4byte	.LASF40
 2170 0580 01       		.byte	0x1
 2171 0581 1601     		.2byte	0x116
 2172 0583 D0010000 		.4byte	0x1d0
 2173 0587 00030000 		.4byte	.LLST12
 2174 058b 11       		.uleb128 0x11
 2175 058c 79020000 		.4byte	.LASF42
 2176 0590 01       		.byte	0x1
 2177 0591 1701     		.2byte	0x117
 2178 0593 D6030000 		.4byte	0x3d6
 2179 0597 1F030000 		.4byte	.LLST13
 2180 059b 11       		.uleb128 0x11
 2181 059c 25000000 		.4byte	.LASF43
 2182 05a0 01       		.byte	0x1
 2183 05a1 1801     		.2byte	0x118
 2184 05a3 EE040000 		.4byte	0x4ee
 2185 05a7 4B030000 		.4byte	.LLST14
 2186 05ab 11       		.uleb128 0x11
 2187 05ac 68030000 		.4byte	.LASF44
 2188 05b0 01       		.byte	0x1
 2189 05b1 1901     		.2byte	0x119
 2190 05b3 F3040000 		.4byte	0x4f3
 2191 05b7 77030000 		.4byte	.LLST15
 2192 05bb 18       		.uleb128 0x18
 2193 05bc DF070000 		.4byte	.LASF45
 2194 05c0 01       		.byte	0x1
 2195 05c1 1A01     		.2byte	0x11a
 2196 05c3 EB010000 		.4byte	0x1eb
 2197 05c7 02       		.uleb128 0x2
 2198 05c8 91       		.byte	0x91
 2199 05c9 00       		.sleb128 0
 2200 05ca 12       		.uleb128 0x12
 2201 05cb E6060000 		.4byte	.LASF66
 2202 05cf 01       		.byte	0x1
 2203 05d0 1C01     		.2byte	0x11c
 2204 05d2 A3020000 		.4byte	0x2a3
 2205 05d6 A3030000 		.4byte	.LLST16
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 61


 2206 05da 13       		.uleb128 0x13
 2207 05db 12000000 		.4byte	.LVL40
 2208 05df 550E0000 		.4byte	0xe55
 2209 05e3 EE050000 		.4byte	0x5ee
 2210 05e7 14       		.uleb128 0x14
 2211 05e8 01       		.uleb128 0x1
 2212 05e9 50       		.byte	0x50
 2213 05ea 02       		.uleb128 0x2
 2214 05eb 08       		.byte	0x8
 2215 05ec 2C       		.byte	0x2c
 2216 05ed 00       		.byte	0
 2217 05ee 15       		.uleb128 0x15
 2218 05ef 28000000 		.4byte	.LVL43
 2219 05f3 60040000 		.4byte	0x460
 2220 05f7 14       		.uleb128 0x14
 2221 05f8 01       		.uleb128 0x1
 2222 05f9 50       		.byte	0x50
 2223 05fa 03       		.uleb128 0x3
 2224 05fb 91       		.byte	0x91
 2225 05fc 64       		.sleb128 -28
 2226 05fd 06       		.byte	0x6
 2227 05fe 14       		.uleb128 0x14
 2228 05ff 01       		.uleb128 0x1
 2229 0600 51       		.byte	0x51
 2230 0601 02       		.uleb128 0x2
 2231 0602 75       		.byte	0x75
 2232 0603 00       		.sleb128 0
 2233 0604 14       		.uleb128 0x14
 2234 0605 01       		.uleb128 0x1
 2235 0606 52       		.byte	0x52
 2236 0607 02       		.uleb128 0x2
 2237 0608 76       		.byte	0x76
 2238 0609 00       		.sleb128 0
 2239 060a 14       		.uleb128 0x14
 2240 060b 01       		.uleb128 0x1
 2241 060c 53       		.byte	0x53
 2242 060d 02       		.uleb128 0x2
 2243 060e 77       		.byte	0x77
 2244 060f 00       		.sleb128 0
 2245 0610 14       		.uleb128 0x14
 2246 0611 02       		.uleb128 0x2
 2247 0612 7D       		.byte	0x7d
 2248 0613 00       		.sleb128 0
 2249 0614 03       		.uleb128 0x3
 2250 0615 91       		.byte	0x91
 2251 0616 00       		.sleb128 0
 2252 0617 06       		.byte	0x6
 2253 0618 14       		.uleb128 0x14
 2254 0619 02       		.uleb128 0x2
 2255 061a 7D       		.byte	0x7d
 2256 061b 04       		.sleb128 4
 2257 061c 02       		.uleb128 0x2
 2258 061d 74       		.byte	0x74
 2259 061e 00       		.sleb128 0
 2260 061f 00       		.byte	0
 2261 0620 00       		.byte	0
 2262 0621 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 62


 2263 0622 AF010000 		.4byte	.LASF70
 2264 0626 01       		.byte	0x1
 2265 0627 7D01     		.2byte	0x17d
 2266 0629 C7000000 		.4byte	0xc7
 2267 062d 00000000 		.4byte	.LFB39
 2268 0631 60000000 		.4byte	.LFE39-.LFB39
 2269 0635 01       		.uleb128 0x1
 2270 0636 9C       		.byte	0x9c
 2271 0637 0C070000 		.4byte	0x70c
 2272 063b 11       		.uleb128 0x11
 2273 063c EB010000 		.4byte	.LASF71
 2274 0640 01       		.byte	0x1
 2275 0641 7D01     		.2byte	0x17d
 2276 0643 E0010000 		.4byte	0x1e0
 2277 0647 CC030000 		.4byte	.LLST17
 2278 064b 11       		.uleb128 0x11
 2279 064c 9F040000 		.4byte	.LASF72
 2280 0650 01       		.byte	0x1
 2281 0651 7D01     		.2byte	0x17d
 2282 0653 0C070000 		.4byte	0x70c
 2283 0657 F8030000 		.4byte	.LLST18
 2284 065b 11       		.uleb128 0x11
 2285 065c BF040000 		.4byte	.LASF73
 2286 0660 01       		.byte	0x1
 2287 0661 7D01     		.2byte	0x17d
 2288 0663 D6030000 		.4byte	0x3d6
 2289 0667 57040000 		.4byte	.LLST19
 2290 066b 11       		.uleb128 0x11
 2291 066c 41000000 		.4byte	.LASF74
 2292 0670 01       		.byte	0x1
 2293 0671 7D01     		.2byte	0x17d
 2294 0673 37030000 		.4byte	0x337
 2295 0677 B6040000 		.4byte	.LLST20
 2296 067b 18       		.uleb128 0x18
 2297 067c 3F010000 		.4byte	.LASF75
 2298 0680 01       		.byte	0x1
 2299 0681 7D01     		.2byte	0x17d
 2300 0683 D6030000 		.4byte	0x3d6
 2301 0687 02       		.uleb128 0x2
 2302 0688 91       		.byte	0x91
 2303 0689 00       		.sleb128 0
 2304 068a 12       		.uleb128 0x12
 2305 068b 8D020000 		.4byte	.LASF67
 2306 068f 01       		.byte	0x1
 2307 0690 7F01     		.2byte	0x17f
 2308 0692 C7000000 		.4byte	0xc7
 2309 0696 E2040000 		.4byte	.LLST21
 2310 069a 1C       		.uleb128 0x1c
 2311 069b 4E050000 		.4byte	.LASF76
 2312 069f 01       		.byte	0x1
 2313 06a0 8001     		.2byte	0x180
 2314 06a2 EB020000 		.4byte	0x2eb
 2315 06a6 02       		.uleb128 0x2
 2316 06a7 91       		.byte	0x91
 2317 06a8 64       		.sleb128 -28
 2318 06a9 17       		.uleb128 0x17
 2319 06aa 26000000 		.4byte	.LVL52
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 63


 2320 06ae 600E0000 		.4byte	0xe60
 2321 06b2 13       		.uleb128 0x13
 2322 06b3 38000000 		.4byte	.LVL53
 2323 06b7 6C0E0000 		.4byte	0xe6c
 2324 06bb D2060000 		.4byte	0x6d2
 2325 06bf 14       		.uleb128 0x14
 2326 06c0 01       		.uleb128 0x1
 2327 06c1 51       		.byte	0x51
 2328 06c2 02       		.uleb128 0x2
 2329 06c3 91       		.byte	0x91
 2330 06c4 64       		.sleb128 -28
 2331 06c5 14       		.uleb128 0x14
 2332 06c6 01       		.uleb128 0x1
 2333 06c7 52       		.byte	0x52
 2334 06c8 03       		.uleb128 0x3
 2335 06c9 91       		.byte	0x91
 2336 06ca 00       		.sleb128 0
 2337 06cb 06       		.byte	0x6
 2338 06cc 14       		.uleb128 0x14
 2339 06cd 01       		.uleb128 0x1
 2340 06ce 53       		.byte	0x53
 2341 06cf 01       		.uleb128 0x1
 2342 06d0 30       		.byte	0x30
 2343 06d1 00       		.byte	0
 2344 06d2 13       		.uleb128 0x13
 2345 06d3 48000000 		.4byte	.LVL55
 2346 06d7 6C0E0000 		.4byte	0xe6c
 2347 06db F0060000 		.4byte	0x6f0
 2348 06df 14       		.uleb128 0x14
 2349 06e0 01       		.uleb128 0x1
 2350 06e1 51       		.byte	0x51
 2351 06e2 02       		.uleb128 0x2
 2352 06e3 91       		.byte	0x91
 2353 06e4 64       		.sleb128 -28
 2354 06e5 14       		.uleb128 0x14
 2355 06e6 01       		.uleb128 0x1
 2356 06e7 52       		.byte	0x52
 2357 06e8 01       		.uleb128 0x1
 2358 06e9 30       		.byte	0x30
 2359 06ea 14       		.uleb128 0x14
 2360 06eb 01       		.uleb128 0x1
 2361 06ec 53       		.byte	0x53
 2362 06ed 01       		.uleb128 0x1
 2363 06ee 30       		.byte	0x30
 2364 06ef 00       		.byte	0
 2365 06f0 15       		.uleb128 0x15
 2366 06f1 54000000 		.4byte	.LVL59
 2367 06f5 780E0000 		.4byte	0xe78
 2368 06f9 14       		.uleb128 0x14
 2369 06fa 01       		.uleb128 0x1
 2370 06fb 51       		.byte	0x51
 2371 06fc 02       		.uleb128 0x2
 2372 06fd 91       		.byte	0x91
 2373 06fe 64       		.sleb128 -28
 2374 06ff 14       		.uleb128 0x14
 2375 0700 01       		.uleb128 0x1
 2376 0701 52       		.byte	0x52
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 64


 2377 0702 02       		.uleb128 0x2
 2378 0703 75       		.byte	0x75
 2379 0704 00       		.sleb128 0
 2380 0705 14       		.uleb128 0x14
 2381 0706 01       		.uleb128 0x1
 2382 0707 53       		.byte	0x53
 2383 0708 01       		.uleb128 0x1
 2384 0709 30       		.byte	0x30
 2385 070a 00       		.byte	0
 2386 070b 00       		.byte	0
 2387 070c 07       		.uleb128 0x7
 2388 070d C7000000 		.4byte	0xc7
 2389 0711 16       		.uleb128 0x16
 2390 0712 6C010000 		.4byte	.LASF77
 2391 0716 01       		.byte	0x1
 2392 0717 4303     		.2byte	0x343
 2393 0719 00000000 		.4byte	.LFB51
 2394 071d 68000000 		.4byte	.LFE51-.LFB51
 2395 0721 01       		.uleb128 0x1
 2396 0722 9C       		.byte	0x9c
 2397 0723 D4070000 		.4byte	0x7d4
 2398 0727 12       		.uleb128 0x12
 2399 0728 18080000 		.4byte	.LASF62
 2400 072c 01       		.byte	0x1
 2401 072d 4503     		.2byte	0x345
 2402 072f DD000000 		.4byte	0xdd
 2403 0733 46050000 		.4byte	.LLST22
 2404 0737 12       		.uleb128 0x12
 2405 0738 E8020000 		.4byte	.LASF78
 2406 073c 01       		.byte	0x1
 2407 073d 4503     		.2byte	0x345
 2408 073f DD000000 		.4byte	0xdd
 2409 0743 59050000 		.4byte	.LLST23
 2410 0747 1C       		.uleb128 0x1c
 2411 0748 64070000 		.4byte	.LASF79
 2412 074c 01       		.byte	0x1
 2413 074d 4603     		.2byte	0x346
 2414 074f D4070000 		.4byte	0x7d4
 2415 0753 01       		.uleb128 0x1
 2416 0754 53       		.byte	0x53
 2417 0755 12       		.uleb128 0x12
 2418 0756 E2050000 		.4byte	.LASF51
 2419 075a 01       		.byte	0x1
 2420 075b 4703     		.2byte	0x347
 2421 075d A3020000 		.4byte	0x2a3
 2422 0761 94050000 		.4byte	.LLST24
 2423 0765 12       		.uleb128 0x12
 2424 0766 46050000 		.4byte	.LASF80
 2425 076a 01       		.byte	0x1
 2426 076b 4803     		.2byte	0x348
 2427 076d C7000000 		.4byte	0xc7
 2428 0771 A7050000 		.4byte	.LLST25
 2429 0775 13       		.uleb128 0x13
 2430 0776 14000000 		.4byte	.LVL66
 2431 077a 840E0000 		.4byte	0xe84
 2432 077e 89070000 		.4byte	0x789
 2433 0782 14       		.uleb128 0x14
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 65


 2434 0783 01       		.uleb128 0x1
 2435 0784 50       		.byte	0x50
 2436 0785 02       		.uleb128 0x2
 2437 0786 75       		.byte	0x75
 2438 0787 00       		.sleb128 0
 2439 0788 00       		.byte	0
 2440 0789 1D       		.uleb128 0x1d
 2441 078a 1A000000 		.4byte	.LVL67
 2442 078e 99070000 		.4byte	0x799
 2443 0792 14       		.uleb128 0x14
 2444 0793 01       		.uleb128 0x1
 2445 0794 50       		.byte	0x50
 2446 0795 02       		.uleb128 0x2
 2447 0796 74       		.byte	0x74
 2448 0797 00       		.sleb128 0
 2449 0798 00       		.byte	0
 2450 0799 13       		.uleb128 0x13
 2451 079a 36000000 		.4byte	.LVL70
 2452 079e F70D0000 		.4byte	0xdf7
 2453 07a2 AD070000 		.4byte	0x7ad
 2454 07a6 14       		.uleb128 0x14
 2455 07a7 01       		.uleb128 0x1
 2456 07a8 51       		.byte	0x51
 2457 07a9 02       		.uleb128 0x2
 2458 07aa 75       		.byte	0x75
 2459 07ab 00       		.sleb128 0
 2460 07ac 00       		.byte	0
 2461 07ad 15       		.uleb128 0x15
 2462 07ae 46000000 		.4byte	.LVL74
 2463 07b2 21060000 		.4byte	0x621
 2464 07b6 14       		.uleb128 0x14
 2465 07b7 01       		.uleb128 0x1
 2466 07b8 50       		.byte	0x50
 2467 07b9 02       		.uleb128 0x2
 2468 07ba 74       		.byte	0x74
 2469 07bb 00       		.sleb128 0
 2470 07bc 14       		.uleb128 0x14
 2471 07bd 01       		.uleb128 0x1
 2472 07be 51       		.byte	0x51
 2473 07bf 01       		.uleb128 0x1
 2474 07c0 30       		.byte	0x30
 2475 07c1 14       		.uleb128 0x14
 2476 07c2 01       		.uleb128 0x1
 2477 07c3 52       		.byte	0x52
 2478 07c4 02       		.uleb128 0x2
 2479 07c5 76       		.byte	0x76
 2480 07c6 00       		.sleb128 0
 2481 07c7 14       		.uleb128 0x14
 2482 07c8 01       		.uleb128 0x1
 2483 07c9 53       		.byte	0x53
 2484 07ca 01       		.uleb128 0x1
 2485 07cb 30       		.byte	0x30
 2486 07cc 14       		.uleb128 0x14
 2487 07cd 02       		.uleb128 0x2
 2488 07ce 7D       		.byte	0x7d
 2489 07cf 00       		.sleb128 0
 2490 07d0 01       		.uleb128 0x1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 66


 2491 07d1 30       		.byte	0x30
 2492 07d2 00       		.byte	0
 2493 07d3 00       		.byte	0
 2494 07d4 06       		.uleb128 0x6
 2495 07d5 04       		.byte	0x4
 2496 07d6 BA010000 		.4byte	0x1ba
 2497 07da 10       		.uleb128 0x10
 2498 07db 91010000 		.4byte	.LASF81
 2499 07df 01       		.byte	0x1
 2500 07e0 7002     		.2byte	0x270
 2501 07e2 DD000000 		.4byte	0xdd
 2502 07e6 00000000 		.4byte	.LFB48
 2503 07ea 2C000000 		.4byte	.LFE48-.LFB48
 2504 07ee 01       		.uleb128 0x1
 2505 07ef 9C       		.byte	0x9c
 2506 07f0 39080000 		.4byte	0x839
 2507 07f4 11       		.uleb128 0x11
 2508 07f5 76000000 		.4byte	.LASF82
 2509 07f9 01       		.byte	0x1
 2510 07fa 7002     		.2byte	0x270
 2511 07fc 37030000 		.4byte	0x337
 2512 0800 BA050000 		.4byte	.LLST26
 2513 0804 12       		.uleb128 0x12
 2514 0805 2B050000 		.4byte	.LASF60
 2515 0809 01       		.byte	0x1
 2516 080a 7202     		.2byte	0x272
 2517 080c DD000000 		.4byte	0xdd
 2518 0810 E6050000 		.4byte	.LLST27
 2519 0814 1C       		.uleb128 0x1c
 2520 0815 06080000 		.4byte	.LASF83
 2521 0819 01       		.byte	0x1
 2522 081a 7302     		.2byte	0x273
 2523 081c DD000000 		.4byte	0xdd
 2524 0820 05       		.uleb128 0x5
 2525 0821 03       		.byte	0x3
 2526 0822 38000000 		.4byte	xLastTime.10590
 2527 0826 17       		.uleb128 0x17
 2528 0827 08000000 		.4byte	.LVL78
 2529 082b 900E0000 		.4byte	0xe90
 2530 082f 17       		.uleb128 0x17
 2531 0830 16000000 		.4byte	.LVL80
 2532 0834 11070000 		.4byte	0x711
 2533 0838 00       		.byte	0
 2534 0839 16       		.uleb128 0x16
 2535 083a EA050000 		.4byte	.LASF84
 2536 083e 01       		.byte	0x1
 2537 083f CE01     		.2byte	0x1ce
 2538 0841 00000000 		.4byte	.LFB44
 2539 0845 54000000 		.4byte	.LFE44-.LFB44
 2540 0849 01       		.uleb128 0x1
 2541 084a 9C       		.byte	0x9c
 2542 084b FA080000 		.4byte	0x8fa
 2543 084f 11       		.uleb128 0x11
 2544 0850 18080000 		.4byte	.LASF62
 2545 0854 01       		.byte	0x1
 2546 0855 CE01     		.2byte	0x1ce
 2547 0857 D6030000 		.4byte	0x3d6
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 67


 2548 085b 25060000 		.4byte	.LLST28
 2549 085f 11       		.uleb128 0x11
 2550 0860 2B050000 		.4byte	.LASF60
 2551 0864 01       		.byte	0x1
 2552 0865 CE01     		.2byte	0x1ce
 2553 0867 D6030000 		.4byte	0x3d6
 2554 086b 51060000 		.4byte	.LLST29
 2555 086f 12       		.uleb128 0x12
 2556 0870 46050000 		.4byte	.LASF80
 2557 0874 01       		.byte	0x1
 2558 0875 D001     		.2byte	0x1d0
 2559 0877 C7000000 		.4byte	0xc7
 2560 087b 7D060000 		.4byte	.LLST30
 2561 087f 12       		.uleb128 0x12
 2562 0880 E2050000 		.4byte	.LASF51
 2563 0884 01       		.byte	0x1
 2564 0885 D101     		.2byte	0x1d1
 2565 0887 D1030000 		.4byte	0x3d1
 2566 088b 90060000 		.4byte	.LLST31
 2567 088f 13       		.uleb128 0x13
 2568 0890 16000000 		.4byte	.LVL88
 2569 0894 840E0000 		.4byte	0xe84
 2570 0898 A3080000 		.4byte	0x8a3
 2571 089c 14       		.uleb128 0x14
 2572 089d 01       		.uleb128 0x1
 2573 089e 50       		.byte	0x50
 2574 089f 02       		.uleb128 0x2
 2575 08a0 74       		.byte	0x74
 2576 08a1 04       		.sleb128 4
 2577 08a2 00       		.byte	0
 2578 08a3 13       		.uleb128 0x13
 2579 08a4 2A000000 		.4byte	.LVL89
 2580 08a8 3C030000 		.4byte	0x33c
 2581 08ac C3080000 		.4byte	0x8c3
 2582 08b0 14       		.uleb128 0x14
 2583 08b1 01       		.uleb128 0x1
 2584 08b2 50       		.byte	0x50
 2585 08b3 02       		.uleb128 0x2
 2586 08b4 74       		.byte	0x74
 2587 08b5 00       		.sleb128 0
 2588 08b6 14       		.uleb128 0x14
 2589 08b7 01       		.uleb128 0x1
 2590 08b8 52       		.byte	0x52
 2591 08b9 02       		.uleb128 0x2
 2592 08ba 76       		.byte	0x76
 2593 08bb 00       		.sleb128 0
 2594 08bc 14       		.uleb128 0x14
 2595 08bd 01       		.uleb128 0x1
 2596 08be 53       		.byte	0x53
 2597 08bf 02       		.uleb128 0x2
 2598 08c0 75       		.byte	0x75
 2599 08c1 00       		.sleb128 0
 2600 08c2 00       		.byte	0
 2601 08c3 13       		.uleb128 0x13
 2602 08c4 3C000000 		.4byte	.LVL90
 2603 08c8 21060000 		.4byte	0x621
 2604 08cc ED080000 		.4byte	0x8ed
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 68


 2605 08d0 14       		.uleb128 0x14
 2606 08d1 01       		.uleb128 0x1
 2607 08d2 50       		.byte	0x50
 2608 08d3 02       		.uleb128 0x2
 2609 08d4 74       		.byte	0x74
 2610 08d5 00       		.sleb128 0
 2611 08d6 14       		.uleb128 0x14
 2612 08d7 01       		.uleb128 0x1
 2613 08d8 51       		.byte	0x51
 2614 08d9 01       		.uleb128 0x1
 2615 08da 30       		.byte	0x30
 2616 08db 14       		.uleb128 0x14
 2617 08dc 01       		.uleb128 0x1
 2618 08dd 52       		.byte	0x52
 2619 08de 02       		.uleb128 0x2
 2620 08df 75       		.byte	0x75
 2621 08e0 00       		.sleb128 0
 2622 08e1 14       		.uleb128 0x14
 2623 08e2 01       		.uleb128 0x1
 2624 08e3 53       		.byte	0x53
 2625 08e4 01       		.uleb128 0x1
 2626 08e5 30       		.byte	0x30
 2627 08e6 14       		.uleb128 0x14
 2628 08e7 02       		.uleb128 0x2
 2629 08e8 7D       		.byte	0x7d
 2630 08e9 00       		.sleb128 0
 2631 08ea 01       		.uleb128 0x1
 2632 08eb 30       		.byte	0x30
 2633 08ec 00       		.byte	0
 2634 08ed 1E       		.uleb128 0x1e
 2635 08ee 4A000000 		.4byte	.LVL92
 2636 08f2 14       		.uleb128 0x14
 2637 08f3 01       		.uleb128 0x1
 2638 08f4 50       		.byte	0x50
 2639 08f5 02       		.uleb128 0x2
 2640 08f6 74       		.byte	0x74
 2641 08f7 00       		.sleb128 0
 2642 08f8 00       		.byte	0
 2643 08f9 00       		.byte	0
 2644 08fa 16       		.uleb128 0x16
 2645 08fb 61050000 		.4byte	.LASF85
 2646 08ff 01       		.byte	0x1
 2647 0900 1A02     		.2byte	0x21a
 2648 0902 00000000 		.4byte	.LFB46
 2649 0906 68000000 		.4byte	.LFE46-.LFB46
 2650 090a 01       		.uleb128 0x1
 2651 090b 9C       		.byte	0x9c
 2652 090c C8090000 		.4byte	0x9c8
 2653 0910 11       		.uleb128 0x11
 2654 0911 18080000 		.4byte	.LASF62
 2655 0915 01       		.byte	0x1
 2656 0916 1A02     		.2byte	0x21a
 2657 0918 D6030000 		.4byte	0x3d6
 2658 091c A3060000 		.4byte	.LLST32
 2659 0920 11       		.uleb128 0x11
 2660 0921 F1040000 		.4byte	.LASF86
 2661 0925 01       		.byte	0x1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 69


 2662 0926 1A02     		.2byte	0x21a
 2663 0928 C7000000 		.4byte	0xc7
 2664 092c CF060000 		.4byte	.LLST33
 2665 0930 12       		.uleb128 0x12
 2666 0931 2B050000 		.4byte	.LASF60
 2667 0935 01       		.byte	0x1
 2668 0936 1C02     		.2byte	0x21c
 2669 0938 DD000000 		.4byte	0xdd
 2670 093c 06070000 		.4byte	.LLST34
 2671 0940 1C       		.uleb128 0x1c
 2672 0941 3F080000 		.4byte	.LASF87
 2673 0945 01       		.byte	0x1
 2674 0946 1D02     		.2byte	0x21d
 2675 0948 C7000000 		.4byte	0xc7
 2676 094c 02       		.uleb128 0x2
 2677 094d 91       		.byte	0x91
 2678 094e 6C       		.sleb128 -20
 2679 094f 17       		.uleb128 0x17
 2680 0950 0C000000 		.4byte	.LVL97
 2681 0954 9C0E0000 		.4byte	0xe9c
 2682 0958 13       		.uleb128 0x13
 2683 0959 12000000 		.4byte	.LVL98
 2684 095d DA070000 		.4byte	0x7da
 2685 0961 6C090000 		.4byte	0x96c
 2686 0965 14       		.uleb128 0x14
 2687 0966 01       		.uleb128 0x1
 2688 0967 50       		.byte	0x50
 2689 0968 02       		.uleb128 0x2
 2690 0969 91       		.byte	0x91
 2691 096a 6C       		.sleb128 -20
 2692 096b 00       		.byte	0
 2693 096c 17       		.uleb128 0x17
 2694 096d 26000000 		.4byte	.LVL100
 2695 0971 A80E0000 		.4byte	0xea8
 2696 0975 13       		.uleb128 0x13
 2697 0976 2E000000 		.4byte	.LVL101
 2698 097a 39080000 		.4byte	0x839
 2699 097e 8F090000 		.4byte	0x98f
 2700 0982 14       		.uleb128 0x14
 2701 0983 01       		.uleb128 0x1
 2702 0984 50       		.byte	0x50
 2703 0985 02       		.uleb128 0x2
 2704 0986 75       		.byte	0x75
 2705 0987 00       		.sleb128 0
 2706 0988 14       		.uleb128 0x14
 2707 0989 01       		.uleb128 0x1
 2708 098a 51       		.byte	0x51
 2709 098b 02       		.uleb128 0x2
 2710 098c 76       		.byte	0x76
 2711 098d 00       		.sleb128 0
 2712 098e 00       		.byte	0
 2713 098f 13       		.uleb128 0x13
 2714 0990 4C000000 		.4byte	.LVL106
 2715 0994 B40E0000 		.4byte	0xeb4
 2716 0998 AC090000 		.4byte	0x9ac
 2717 099c 14       		.uleb128 0x14
 2718 099d 01       		.uleb128 0x1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 70


 2719 099e 51       		.byte	0x51
 2720 099f 05       		.uleb128 0x5
 2721 09a0 75       		.byte	0x75
 2722 09a1 00       		.sleb128 0
 2723 09a2 76       		.byte	0x76
 2724 09a3 00       		.sleb128 0
 2725 09a4 1C       		.byte	0x1c
 2726 09a5 14       		.uleb128 0x14
 2727 09a6 01       		.uleb128 0x1
 2728 09a7 52       		.byte	0x52
 2729 09a8 02       		.uleb128 0x2
 2730 09a9 74       		.byte	0x74
 2731 09aa 00       		.sleb128 0
 2732 09ab 00       		.byte	0
 2733 09ac 17       		.uleb128 0x17
 2734 09ad 50000000 		.4byte	.LVL107
 2735 09b1 A80E0000 		.4byte	0xea8
 2736 09b5 17       		.uleb128 0x17
 2737 09b6 58000000 		.4byte	.LVL108
 2738 09ba C00E0000 		.4byte	0xec0
 2739 09be 17       		.uleb128 0x17
 2740 09bf 5E000000 		.4byte	.LVL110
 2741 09c3 A80E0000 		.4byte	0xea8
 2742 09c7 00       		.byte	0
 2743 09c8 16       		.uleb128 0x16
 2744 09c9 6E040000 		.4byte	.LASF88
 2745 09cd 01       		.byte	0x1
 2746 09ce B002     		.2byte	0x2b0
 2747 09d0 00000000 		.4byte	.LFB50
 2748 09d4 AC000000 		.4byte	.LFE50-.LFB50
 2749 09d8 01       		.uleb128 0x1
 2750 09d9 9C       		.byte	0x9c
 2751 09da DA0A0000 		.4byte	0xada
 2752 09de 1C       		.uleb128 0x1c
 2753 09df 4E050000 		.4byte	.LASF76
 2754 09e3 01       		.byte	0x1
 2755 09e4 B202     		.2byte	0x2b2
 2756 09e6 EB020000 		.4byte	0x2eb
 2757 09ea 02       		.uleb128 0x2
 2758 09eb 91       		.byte	0x91
 2759 09ec 6C       		.sleb128 -20
 2760 09ed 12       		.uleb128 0x12
 2761 09ee E2050000 		.4byte	.LASF51
 2762 09f2 01       		.byte	0x1
 2763 09f3 B302     		.2byte	0x2b3
 2764 09f5 A3020000 		.4byte	0x2a3
 2765 09f9 50070000 		.4byte	.LLST35
 2766 09fd 1C       		.uleb128 0x1c
 2767 09fe 3F080000 		.4byte	.LASF87
 2768 0a02 01       		.byte	0x1
 2769 0a03 B402     		.2byte	0x2b4
 2770 0a05 C7000000 		.4byte	0xc7
 2771 0a09 02       		.uleb128 0x2
 2772 0a0a 91       		.byte	0x91
 2773 0a0b 68       		.sleb128 -24
 2774 0a0c 12       		.uleb128 0x12
 2775 0a0d 46050000 		.4byte	.LASF80
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 71


 2776 0a11 01       		.byte	0x1
 2777 0a12 B402     		.2byte	0x2b4
 2778 0a14 C7000000 		.4byte	0xc7
 2779 0a18 63070000 		.4byte	.LLST36
 2780 0a1c 12       		.uleb128 0x12
 2781 0a1d 2B050000 		.4byte	.LASF60
 2782 0a21 01       		.byte	0x1
 2783 0a22 B502     		.2byte	0x2b5
 2784 0a24 DD000000 		.4byte	0xdd
 2785 0a28 76070000 		.4byte	.LLST37
 2786 0a2c 13       		.uleb128 0x13
 2787 0a2d 1A000000 		.4byte	.LVL115
 2788 0a31 840E0000 		.4byte	0xe84
 2789 0a35 400A0000 		.4byte	0xa40
 2790 0a39 14       		.uleb128 0x14
 2791 0a3a 01       		.uleb128 0x1
 2792 0a3b 50       		.byte	0x50
 2793 0a3c 02       		.uleb128 0x2
 2794 0a3d 74       		.byte	0x74
 2795 0a3e 04       		.sleb128 4
 2796 0a3f 00       		.byte	0
 2797 0a40 13       		.uleb128 0x13
 2798 0a41 20000000 		.4byte	.LVL116
 2799 0a45 DA070000 		.4byte	0x7da
 2800 0a49 540A0000 		.4byte	0xa54
 2801 0a4d 14       		.uleb128 0x14
 2802 0a4e 01       		.uleb128 0x1
 2803 0a4f 50       		.byte	0x50
 2804 0a50 02       		.uleb128 0x2
 2805 0a51 91       		.byte	0x91
 2806 0a52 68       		.sleb128 -24
 2807 0a53 00       		.byte	0
 2808 0a54 13       		.uleb128 0x13
 2809 0a55 42000000 		.4byte	.LVL118
 2810 0a59 3C030000 		.4byte	0x33c
 2811 0a5d 680A0000 		.4byte	0xa68
 2812 0a61 14       		.uleb128 0x14
 2813 0a62 01       		.uleb128 0x1
 2814 0a63 50       		.byte	0x50
 2815 0a64 02       		.uleb128 0x2
 2816 0a65 74       		.byte	0x74
 2817 0a66 00       		.sleb128 0
 2818 0a67 00       		.byte	0
 2819 0a68 1D       		.uleb128 0x1d
 2820 0a69 4C000000 		.4byte	.LVL119
 2821 0a6d 780A0000 		.4byte	0xa78
 2822 0a71 14       		.uleb128 0x14
 2823 0a72 01       		.uleb128 0x1
 2824 0a73 50       		.byte	0x50
 2825 0a74 02       		.uleb128 0x2
 2826 0a75 74       		.byte	0x74
 2827 0a76 00       		.sleb128 0
 2828 0a77 00       		.byte	0
 2829 0a78 13       		.uleb128 0x13
 2830 0a79 68000000 		.4byte	.LVL120
 2831 0a7d 21060000 		.4byte	0x621
 2832 0a81 9C0A0000 		.4byte	0xa9c
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 72


 2833 0a85 14       		.uleb128 0x14
 2834 0a86 01       		.uleb128 0x1
 2835 0a87 50       		.byte	0x50
 2836 0a88 02       		.uleb128 0x2
 2837 0a89 74       		.byte	0x74
 2838 0a8a 00       		.sleb128 0
 2839 0a8b 14       		.uleb128 0x14
 2840 0a8c 01       		.uleb128 0x1
 2841 0a8d 51       		.byte	0x51
 2842 0a8e 01       		.uleb128 0x1
 2843 0a8f 30       		.byte	0x30
 2844 0a90 14       		.uleb128 0x14
 2845 0a91 01       		.uleb128 0x1
 2846 0a92 53       		.byte	0x53
 2847 0a93 01       		.uleb128 0x1
 2848 0a94 30       		.byte	0x30
 2849 0a95 14       		.uleb128 0x14
 2850 0a96 02       		.uleb128 0x2
 2851 0a97 7D       		.byte	0x7d
 2852 0a98 00       		.sleb128 0
 2853 0a99 01       		.uleb128 0x1
 2854 0a9a 30       		.byte	0x30
 2855 0a9b 00       		.byte	0
 2856 0a9c 13       		.uleb128 0x13
 2857 0a9d 88000000 		.4byte	.LVL123
 2858 0aa1 3C030000 		.4byte	0x33c
 2859 0aa5 B00A0000 		.4byte	0xab0
 2860 0aa9 14       		.uleb128 0x14
 2861 0aaa 01       		.uleb128 0x1
 2862 0aab 50       		.byte	0x50
 2863 0aac 02       		.uleb128 0x2
 2864 0aad 74       		.byte	0x74
 2865 0aae 00       		.sleb128 0
 2866 0aaf 00       		.byte	0
 2867 0ab0 13       		.uleb128 0x13
 2868 0ab1 90000000 		.4byte	.LVL126
 2869 0ab5 CB0E0000 		.4byte	0xecb
 2870 0ab9 C40A0000 		.4byte	0xac4
 2871 0abd 14       		.uleb128 0x14
 2872 0abe 01       		.uleb128 0x1
 2873 0abf 50       		.byte	0x50
 2874 0ac0 02       		.uleb128 0x2
 2875 0ac1 74       		.byte	0x74
 2876 0ac2 00       		.sleb128 0
 2877 0ac3 00       		.byte	0
 2878 0ac4 15       		.uleb128 0x15
 2879 0ac5 9C000000 		.4byte	.LVL127
 2880 0ac9 D60E0000 		.4byte	0xed6
 2881 0acd 14       		.uleb128 0x14
 2882 0ace 01       		.uleb128 0x1
 2883 0acf 51       		.byte	0x51
 2884 0ad0 02       		.uleb128 0x2
 2885 0ad1 91       		.byte	0x91
 2886 0ad2 6C       		.sleb128 -20
 2887 0ad3 14       		.uleb128 0x14
 2888 0ad4 01       		.uleb128 0x1
 2889 0ad5 52       		.byte	0x52
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 73


 2890 0ad6 01       		.uleb128 0x1
 2891 0ad7 30       		.byte	0x30
 2892 0ad8 00       		.byte	0
 2893 0ad9 00       		.byte	0
 2894 0ada 1F       		.uleb128 0x1f
 2895 0adb 05010000 		.4byte	.LASF89
 2896 0adf 01       		.byte	0x1
 2897 0ae0 F601     		.2byte	0x1f6
 2898 0ae2 00000000 		.4byte	.LFB45
 2899 0ae6 16000000 		.4byte	.LFE45-.LFB45
 2900 0aea 01       		.uleb128 0x1
 2901 0aeb 9C       		.byte	0x9c
 2902 0aec 460B0000 		.4byte	0xb46
 2903 0af0 11       		.uleb128 0x11
 2904 0af1 DB020000 		.4byte	.LASF90
 2905 0af5 01       		.byte	0x1
 2906 0af6 F601     		.2byte	0x1f6
 2907 0af8 8F000000 		.4byte	0x8f
 2908 0afc B5070000 		.4byte	.LLST38
 2909 0b00 12       		.uleb128 0x12
 2910 0b01 18080000 		.4byte	.LASF62
 2911 0b05 01       		.byte	0x1
 2912 0b06 F801     		.2byte	0x1f8
 2913 0b08 DD000000 		.4byte	0xdd
 2914 0b0c D6070000 		.4byte	.LLST39
 2915 0b10 1C       		.uleb128 0x1c
 2916 0b11 F1040000 		.4byte	.LASF86
 2917 0b15 01       		.byte	0x1
 2918 0b16 F901     		.2byte	0x1f9
 2919 0b18 C7000000 		.4byte	0xc7
 2920 0b1c 02       		.uleb128 0x2
 2921 0b1d 91       		.byte	0x91
 2922 0b1e 74       		.sleb128 -12
 2923 0b1f 13       		.uleb128 0x13
 2924 0b20 0A000000 		.4byte	.LVL130
 2925 0b24 F6020000 		.4byte	0x2f6
 2926 0b28 330B0000 		.4byte	0xb33
 2927 0b2c 14       		.uleb128 0x14
 2928 0b2d 01       		.uleb128 0x1
 2929 0b2e 50       		.byte	0x50
 2930 0b2f 02       		.uleb128 0x2
 2931 0b30 91       		.byte	0x91
 2932 0b31 74       		.sleb128 -12
 2933 0b32 00       		.byte	0
 2934 0b33 17       		.uleb128 0x17
 2935 0b34 10000000 		.4byte	.LVL131
 2936 0b38 FA080000 		.4byte	0x8fa
 2937 0b3c 17       		.uleb128 0x17
 2938 0b3d 14000000 		.4byte	.LVL132
 2939 0b41 C8090000 		.4byte	0x9c8
 2940 0b45 00       		.byte	0
 2941 0b46 20       		.uleb128 0x20
 2942 0b47 5A020000 		.4byte	.LASF132
 2943 0b4b 01       		.byte	0x1
 2944 0b4c A801     		.2byte	0x1a8
 2945 0b4e C5010000 		.4byte	0x1c5
 2946 0b52 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 74


 2947 0b56 14000000 		.4byte	.LFE40-.LFB40
 2948 0b5a 01       		.uleb128 0x1
 2949 0b5b 9C       		.byte	0x9c
 2950 0b5c 1B       		.uleb128 0x1b
 2951 0b5d FE060000 		.4byte	.LASF91
 2952 0b61 01       		.byte	0x1
 2953 0b62 B101     		.2byte	0x1b1
 2954 0b64 DD000000 		.4byte	0xdd
 2955 0b68 00000000 		.4byte	.LFB41
 2956 0b6c 0C000000 		.4byte	.LFE41-.LFB41
 2957 0b70 01       		.uleb128 0x1
 2958 0b71 9C       		.byte	0x9c
 2959 0b72 970B0000 		.4byte	0xb97
 2960 0b76 11       		.uleb128 0x11
 2961 0b77 EB010000 		.4byte	.LASF71
 2962 0b7b 01       		.byte	0x1
 2963 0b7c B101     		.2byte	0x1b1
 2964 0b7e E0010000 		.4byte	0x1e0
 2965 0b82 E9070000 		.4byte	.LLST40
 2966 0b86 12       		.uleb128 0x12
 2967 0b87 E2050000 		.4byte	.LASF51
 2968 0b8b 01       		.byte	0x1
 2969 0b8c B301     		.2byte	0x1b3
 2970 0b8e A3020000 		.4byte	0x2a3
 2971 0b92 0A080000 		.4byte	.LLST41
 2972 0b96 00       		.byte	0
 2973 0b97 1B       		.uleb128 0x1b
 2974 0b98 C0060000 		.4byte	.LASF92
 2975 0b9c 01       		.byte	0x1
 2976 0b9d BA01     		.2byte	0x1ba
 2977 0b9f DD000000 		.4byte	0xdd
 2978 0ba3 00000000 		.4byte	.LFB42
 2979 0ba7 0C000000 		.4byte	.LFE42-.LFB42
 2980 0bab 01       		.uleb128 0x1
 2981 0bac 9C       		.byte	0x9c
 2982 0bad E00B0000 		.4byte	0xbe0
 2983 0bb1 11       		.uleb128 0x11
 2984 0bb2 EB010000 		.4byte	.LASF71
 2985 0bb6 01       		.byte	0x1
 2986 0bb7 BA01     		.2byte	0x1ba
 2987 0bb9 E0010000 		.4byte	0x1e0
 2988 0bbd 2B080000 		.4byte	.LLST42
 2989 0bc1 12       		.uleb128 0x12
 2990 0bc2 E2050000 		.4byte	.LASF51
 2991 0bc6 01       		.byte	0x1
 2992 0bc7 BC01     		.2byte	0x1bc
 2993 0bc9 A3020000 		.4byte	0x2a3
 2994 0bcd 4C080000 		.4byte	.LLST43
 2995 0bd1 1C       		.uleb128 0x1c
 2996 0bd2 8D020000 		.4byte	.LASF67
 2997 0bd6 01       		.byte	0x1
 2998 0bd7 BD01     		.2byte	0x1bd
 2999 0bd9 DD000000 		.4byte	0xdd
 3000 0bdd 01       		.uleb128 0x1
 3001 0bde 50       		.byte	0x50
 3002 0bdf 00       		.byte	0
 3003 0be0 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 75


 3004 0be1 BE080000 		.4byte	.LASF93
 3005 0be5 01       		.byte	0x1
 3006 0be6 C501     		.2byte	0x1c5
 3007 0be8 98000000 		.4byte	0x98
 3008 0bec 00000000 		.4byte	.LFB43
 3009 0bf0 0C000000 		.4byte	.LFE43-.LFB43
 3010 0bf4 01       		.uleb128 0x1
 3011 0bf5 9C       		.byte	0x9c
 3012 0bf6 1B0C0000 		.4byte	0xc1b
 3013 0bfa 11       		.uleb128 0x11
 3014 0bfb EB010000 		.4byte	.LASF71
 3015 0bff 01       		.byte	0x1
 3016 0c00 C501     		.2byte	0x1c5
 3017 0c02 E0010000 		.4byte	0x1e0
 3018 0c06 6D080000 		.4byte	.LLST44
 3019 0c0a 12       		.uleb128 0x12
 3020 0c0b E2050000 		.4byte	.LASF51
 3021 0c0f 01       		.byte	0x1
 3022 0c10 C701     		.2byte	0x1c7
 3023 0c12 A3020000 		.4byte	0x2a3
 3024 0c16 8E080000 		.4byte	.LLST45
 3025 0c1a 00       		.byte	0
 3026 0c1b 1B       		.uleb128 0x1b
 3027 0c1c D9080000 		.4byte	.LASF94
 3028 0c20 01       		.byte	0x1
 3029 0c21 B103     		.2byte	0x3b1
 3030 0c23 C7000000 		.4byte	0xc7
 3031 0c27 00000000 		.4byte	.LFB53
 3032 0c2b 1E000000 		.4byte	.LFE53-.LFB53
 3033 0c2f 01       		.uleb128 0x1
 3034 0c30 9C       		.byte	0x9c
 3035 0c31 780C0000 		.4byte	0xc78
 3036 0c35 11       		.uleb128 0x11
 3037 0c36 EB010000 		.4byte	.LASF71
 3038 0c3a 01       		.byte	0x1
 3039 0c3b B103     		.2byte	0x3b1
 3040 0c3d E0010000 		.4byte	0x1e0
 3041 0c41 AF080000 		.4byte	.LLST46
 3042 0c45 12       		.uleb128 0x12
 3043 0c46 37070000 		.4byte	.LASF95
 3044 0c4a 01       		.byte	0x1
 3045 0c4b B303     		.2byte	0x3b3
 3046 0c4d C7000000 		.4byte	0xc7
 3047 0c51 DB080000 		.4byte	.LLST47
 3048 0c55 12       		.uleb128 0x12
 3049 0c56 E2050000 		.4byte	.LASF51
 3050 0c5a 01       		.byte	0x1
 3051 0c5b B403     		.2byte	0x3b4
 3052 0c5d A3020000 		.4byte	0x2a3
 3053 0c61 F9080000 		.4byte	.LLST48
 3054 0c65 17       		.uleb128 0x17
 3055 0c66 0E000000 		.4byte	.LVL141
 3056 0c6a 030E0000 		.4byte	0xe03
 3057 0c6e 17       		.uleb128 0x17
 3058 0c6f 1A000000 		.4byte	.LVL144
 3059 0c73 320E0000 		.4byte	0xe32
 3060 0c77 00       		.byte	0
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 76


 3061 0c78 1B       		.uleb128 0x1b
 3062 0c79 34050000 		.4byte	.LASF96
 3063 0c7d 01       		.byte	0x1
 3064 0c7e C603     		.2byte	0x3c6
 3065 0c80 8F000000 		.4byte	0x8f
 3066 0c84 00000000 		.4byte	.LFB54
 3067 0c88 18000000 		.4byte	.LFE54-.LFB54
 3068 0c8c 01       		.uleb128 0x1
 3069 0c8d 9C       		.byte	0x9c
 3070 0c8e D50C0000 		.4byte	0xcd5
 3071 0c92 11       		.uleb128 0x11
 3072 0c93 EB010000 		.4byte	.LASF71
 3073 0c97 01       		.byte	0x1
 3074 0c98 C603     		.2byte	0x3c6
 3075 0c9a D50C0000 		.4byte	0xcd5
 3076 0c9e 25090000 		.4byte	.LLST49
 3077 0ca2 12       		.uleb128 0x12
 3078 0ca3 E2050000 		.4byte	.LASF51
 3079 0ca7 01       		.byte	0x1
 3080 0ca8 C803     		.2byte	0x3c8
 3081 0caa D1030000 		.4byte	0x3d1
 3082 0cae 51090000 		.4byte	.LLST50
 3083 0cb2 12       		.uleb128 0x12
 3084 0cb3 D4040000 		.4byte	.LASF97
 3085 0cb7 01       		.byte	0x1
 3086 0cb8 C903     		.2byte	0x3c9
 3087 0cba 8F000000 		.4byte	0x8f
 3088 0cbe 7D090000 		.4byte	.LLST51
 3089 0cc2 17       		.uleb128 0x17
 3090 0cc3 0E000000 		.4byte	.LVL148
 3091 0cc7 030E0000 		.4byte	0xe03
 3092 0ccb 17       		.uleb128 0x17
 3093 0ccc 14000000 		.4byte	.LVL150
 3094 0cd0 320E0000 		.4byte	0xe32
 3095 0cd4 00       		.byte	0
 3096 0cd5 07       		.uleb128 0x7
 3097 0cd6 E0010000 		.4byte	0x1e0
 3098 0cda 21       		.uleb128 0x21
 3099 0cdb 8F000000 		.4byte	.LASF100
 3100 0cdf 01       		.byte	0x1
 3101 0ce0 D703     		.2byte	0x3d7
 3102 0ce2 00000000 		.4byte	.LFB55
 3103 0ce6 1A000000 		.4byte	.LFE55-.LFB55
 3104 0cea 01       		.uleb128 0x1
 3105 0ceb 9C       		.byte	0x9c
 3106 0cec 330D0000 		.4byte	0xd33
 3107 0cf0 11       		.uleb128 0x11
 3108 0cf1 EB010000 		.4byte	.LASF71
 3109 0cf5 01       		.byte	0x1
 3110 0cf6 D703     		.2byte	0x3d7
 3111 0cf8 E0010000 		.4byte	0x1e0
 3112 0cfc 9B090000 		.4byte	.LLST52
 3113 0d00 11       		.uleb128 0x11
 3114 0d01 17020000 		.4byte	.LASF98
 3115 0d05 01       		.byte	0x1
 3116 0d06 D703     		.2byte	0x3d7
 3117 0d08 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 77


 3118 0d0c C7090000 		.4byte	.LLST53
 3119 0d10 12       		.uleb128 0x12
 3120 0d11 E2050000 		.4byte	.LASF51
 3121 0d15 01       		.byte	0x1
 3122 0d16 D903     		.2byte	0x3d9
 3123 0d18 D1030000 		.4byte	0x3d1
 3124 0d1c F3090000 		.4byte	.LLST54
 3125 0d20 17       		.uleb128 0x17
 3126 0d21 12000000 		.4byte	.LVL154
 3127 0d25 030E0000 		.4byte	0xe03
 3128 0d29 17       		.uleb128 0x17
 3129 0d2a 18000000 		.4byte	.LVL155
 3130 0d2e 320E0000 		.4byte	0xe32
 3131 0d32 00       		.byte	0
 3132 0d33 1B       		.uleb128 0x1b
 3133 0d34 C5020000 		.4byte	.LASF99
 3134 0d38 01       		.byte	0x1
 3135 0d39 1C04     		.2byte	0x41c
 3136 0d3b D2000000 		.4byte	0xd2
 3137 0d3f 00000000 		.4byte	.LFB56
 3138 0d43 04000000 		.4byte	.LFE56-.LFB56
 3139 0d47 01       		.uleb128 0x1
 3140 0d48 9C       		.byte	0x9c
 3141 0d49 5E0D0000 		.4byte	0xd5e
 3142 0d4d 11       		.uleb128 0x11
 3143 0d4e EB010000 		.4byte	.LASF71
 3144 0d52 01       		.byte	0x1
 3145 0d53 1C04     		.2byte	0x41c
 3146 0d55 E0010000 		.4byte	0x1e0
 3147 0d59 1F0A0000 		.4byte	.LLST55
 3148 0d5d 00       		.byte	0
 3149 0d5e 21       		.uleb128 0x21
 3150 0d5f AA040000 		.4byte	.LASF101
 3151 0d63 01       		.byte	0x1
 3152 0d64 2604     		.2byte	0x426
 3153 0d66 00000000 		.4byte	.LFB57
 3154 0d6a 04000000 		.4byte	.LFE57-.LFB57
 3155 0d6e 01       		.uleb128 0x1
 3156 0d6f 9C       		.byte	0x9c
 3157 0d70 910D0000 		.4byte	0xd91
 3158 0d74 18       		.uleb128 0x18
 3159 0d75 EB010000 		.4byte	.LASF71
 3160 0d79 01       		.byte	0x1
 3161 0d7a 2604     		.2byte	0x426
 3162 0d7c E0010000 		.4byte	0x1e0
 3163 0d80 01       		.uleb128 0x1
 3164 0d81 50       		.byte	0x50
 3165 0d82 18       		.uleb128 0x18
 3166 0d83 60040000 		.4byte	.LASF46
 3167 0d87 01       		.byte	0x1
 3168 0d88 2604     		.2byte	0x426
 3169 0d8a D2000000 		.4byte	0xd2
 3170 0d8e 01       		.uleb128 0x1
 3171 0d8f 51       		.byte	0x51
 3172 0d90 00       		.byte	0
 3173 0d91 22       		.uleb128 0x22
 3174 0d92 AF000000 		.4byte	.LASF102
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 78


 3175 0d96 01       		.byte	0x1
 3176 0d97 83       		.byte	0x83
 3177 0d98 BA010000 		.4byte	0x1ba
 3178 0d9c 05       		.uleb128 0x5
 3179 0d9d 03       		.byte	0x3
 3180 0d9e 0C000000 		.4byte	xActiveTimerList1
 3181 0da2 22       		.uleb128 0x22
 3182 0da3 C1000000 		.4byte	.LASF103
 3183 0da7 01       		.byte	0x1
 3184 0da8 84       		.byte	0x84
 3185 0da9 BA010000 		.4byte	0x1ba
 3186 0dad 05       		.uleb128 0x5
 3187 0dae 03       		.byte	0x3
 3188 0daf 20000000 		.4byte	xActiveTimerList2
 3189 0db3 22       		.uleb128 0x22
 3190 0db4 12010000 		.4byte	.LASF104
 3191 0db8 01       		.byte	0x1
 3192 0db9 85       		.byte	0x85
 3193 0dba D4070000 		.4byte	0x7d4
 3194 0dbe 05       		.uleb128 0x5
 3195 0dbf 03       		.byte	0x3
 3196 0dc0 00000000 		.4byte	pxCurrentTimerList
 3197 0dc4 22       		.uleb128 0x22
 3198 0dc5 F2070000 		.4byte	.LASF105
 3199 0dc9 01       		.byte	0x1
 3200 0dca 86       		.byte	0x86
 3201 0dcb D4070000 		.4byte	0x7d4
 3202 0dcf 05       		.uleb128 0x5
 3203 0dd0 03       		.byte	0x3
 3204 0dd1 04000000 		.4byte	pxOverflowTimerList
 3205 0dd5 22       		.uleb128 0x22
 3206 0dd6 00000000 		.4byte	.LASF106
 3207 0dda 01       		.byte	0x1
 3208 0ddb 89       		.byte	0x89
 3209 0ddc D5010000 		.4byte	0x1d5
 3210 0de0 05       		.uleb128 0x5
 3211 0de1 03       		.byte	0x3
 3212 0de2 08000000 		.4byte	xTimerQueue
 3213 0de6 22       		.uleb128 0x22
 3214 0de7 26070000 		.4byte	.LASF107
 3215 0deb 01       		.byte	0x1
 3216 0dec 8A       		.byte	0x8a
 3217 0ded C5010000 		.4byte	0x1c5
 3218 0df1 05       		.uleb128 0x5
 3219 0df2 03       		.byte	0x3
 3220 0df3 34000000 		.4byte	xTimerTaskHandle
 3221 0df7 23       		.uleb128 0x23
 3222 0df8 01060000 		.4byte	.LASF108
 3223 0dfc 01060000 		.4byte	.LASF108
 3224 0e00 05       		.byte	0x5
 3225 0e01 7001     		.2byte	0x170
 3226 0e03 24       		.uleb128 0x24
 3227 0e04 96070000 		.4byte	.LASF109
 3228 0e08 96070000 		.4byte	.LASF109
 3229 0e0c 04       		.byte	0x4
 3230 0e0d 5A       		.byte	0x5a
 3231 0e0e 23       		.uleb128 0x23
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 79


 3232 0e0f 2F080000 		.4byte	.LASF110
 3233 0e13 2F080000 		.4byte	.LASF110
 3234 0e17 05       		.byte	0x5
 3235 0e18 5801     		.2byte	0x158
 3236 0e1a 23       		.uleb128 0x23
 3237 0e1b A1050000 		.4byte	.LASF111
 3238 0e1f A1050000 		.4byte	.LASF111
 3239 0e23 07       		.byte	0x7
 3240 0e24 D605     		.2byte	0x5d6
 3241 0e26 23       		.uleb128 0x23
 3242 0e27 7B030000 		.4byte	.LASF112
 3243 0e2b 7B030000 		.4byte	.LASF112
 3244 0e2f 07       		.byte	0x7
 3245 0e30 B005     		.2byte	0x5b0
 3246 0e32 24       		.uleb128 0x24
 3247 0e33 D4060000 		.4byte	.LASF113
 3248 0e37 D4060000 		.4byte	.LASF113
 3249 0e3b 04       		.byte	0x4
 3250 0e3c 5B       		.byte	0x5b
 3251 0e3d 23       		.uleb128 0x23
 3252 0e3e 1F020000 		.4byte	.LASF114
 3253 0e42 1F020000 		.4byte	.LASF114
 3254 0e46 05       		.byte	0x5
 3255 0e47 6301     		.2byte	0x163
 3256 0e49 23       		.uleb128 0x23
 3257 0e4a 8F030000 		.4byte	.LASF115
 3258 0e4e 8F030000 		.4byte	.LASF115
 3259 0e52 06       		.byte	0x6
 3260 0e53 4101     		.2byte	0x141
 3261 0e55 24       		.uleb128 0x24
 3262 0e56 3A020000 		.4byte	.LASF116
 3263 0e5a 3A020000 		.4byte	.LASF116
 3264 0e5e 09       		.byte	0x9
 3265 0e5f 81       		.byte	0x81
 3266 0e60 23       		.uleb128 0x23
 3267 0e61 C2050000 		.4byte	.LASF117
 3268 0e65 C2050000 		.4byte	.LASF117
 3269 0e69 06       		.byte	0x6
 3270 0e6a D208     		.2byte	0x8d2
 3271 0e6c 23       		.uleb128 0x23
 3272 0e6d 00030000 		.4byte	.LASF118
 3273 0e71 00030000 		.4byte	.LASF118
 3274 0e75 07       		.byte	0x7
 3275 0e76 8802     		.2byte	0x288
 3276 0e78 23       		.uleb128 0x23
 3277 0e79 0C000000 		.4byte	.LASF119
 3278 0e7d 0C000000 		.4byte	.LASF119
 3279 0e81 07       		.byte	0x7
 3280 0e82 0D05     		.2byte	0x50d
 3281 0e84 23       		.uleb128 0x23
 3282 0e85 57070000 		.4byte	.LASF120
 3283 0e89 57070000 		.4byte	.LASF120
 3284 0e8d 05       		.byte	0x5
 3285 0e8e 9401     		.2byte	0x194
 3286 0e90 23       		.uleb128 0x23
 3287 0e91 3C030000 		.4byte	.LASF121
 3288 0e95 3C030000 		.4byte	.LASF121
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 80


 3289 0e99 06       		.byte	0x6
 3290 0e9a 3E05     		.2byte	0x53e
 3291 0e9c 23       		.uleb128 0x23
 3292 0e9d 0D060000 		.4byte	.LASF122
 3293 0ea1 0D060000 		.4byte	.LASF122
 3294 0ea5 06       		.byte	0x6
 3295 0ea6 F904     		.2byte	0x4f9
 3296 0ea8 23       		.uleb128 0x23
 3297 0ea9 7C050000 		.4byte	.LASF123
 3298 0ead 7C050000 		.4byte	.LASF123
 3299 0eb1 06       		.byte	0x6
 3300 0eb2 2F05     		.2byte	0x52f
 3301 0eb4 23       		.uleb128 0x23
 3302 0eb5 57080000 		.4byte	.LASF124
 3303 0eb9 57080000 		.4byte	.LASF124
 3304 0ebd 07       		.byte	0x7
 3305 0ebe 6906     		.2byte	0x669
 3306 0ec0 24       		.uleb128 0x24
 3307 0ec1 B1070000 		.4byte	.LASF125
 3308 0ec5 B1070000 		.4byte	.LASF125
 3309 0ec9 04       		.byte	0x4
 3310 0eca 50       		.byte	0x50
 3311 0ecb 24       		.uleb128 0x24
 3312 0ecc 4E030000 		.4byte	.LASF126
 3313 0ed0 4E030000 		.4byte	.LASF126
 3314 0ed4 09       		.byte	0x9
 3315 0ed5 82       		.byte	0x82
 3316 0ed6 23       		.uleb128 0x23
 3317 0ed7 21030000 		.4byte	.LASF127
 3318 0edb 21030000 		.4byte	.LASF127
 3319 0edf 07       		.byte	0x7
 3320 0ee0 6203     		.2byte	0x362
 3321 0ee2 00       		.byte	0
 3322              		.section	.debug_abbrev,"",%progbits
 3323              	.Ldebug_abbrev0:
 3324 0000 01       		.uleb128 0x1
 3325 0001 11       		.uleb128 0x11
 3326 0002 01       		.byte	0x1
 3327 0003 25       		.uleb128 0x25
 3328 0004 0E       		.uleb128 0xe
 3329 0005 13       		.uleb128 0x13
 3330 0006 0B       		.uleb128 0xb
 3331 0007 03       		.uleb128 0x3
 3332 0008 0E       		.uleb128 0xe
 3333 0009 1B       		.uleb128 0x1b
 3334 000a 0E       		.uleb128 0xe
 3335 000b 55       		.uleb128 0x55
 3336 000c 17       		.uleb128 0x17
 3337 000d 11       		.uleb128 0x11
 3338 000e 01       		.uleb128 0x1
 3339 000f 10       		.uleb128 0x10
 3340 0010 17       		.uleb128 0x17
 3341 0011 00       		.byte	0
 3342 0012 00       		.byte	0
 3343 0013 02       		.uleb128 0x2
 3344 0014 24       		.uleb128 0x24
 3345 0015 00       		.byte	0
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 81


 3346 0016 0B       		.uleb128 0xb
 3347 0017 0B       		.uleb128 0xb
 3348 0018 3E       		.uleb128 0x3e
 3349 0019 0B       		.uleb128 0xb
 3350 001a 03       		.uleb128 0x3
 3351 001b 0E       		.uleb128 0xe
 3352 001c 00       		.byte	0
 3353 001d 00       		.byte	0
 3354 001e 03       		.uleb128 0x3
 3355 001f 24       		.uleb128 0x24
 3356 0020 00       		.byte	0
 3357 0021 0B       		.uleb128 0xb
 3358 0022 0B       		.uleb128 0xb
 3359 0023 3E       		.uleb128 0x3e
 3360 0024 0B       		.uleb128 0xb
 3361 0025 03       		.uleb128 0x3
 3362 0026 08       		.uleb128 0x8
 3363 0027 00       		.byte	0
 3364 0028 00       		.byte	0
 3365 0029 04       		.uleb128 0x4
 3366 002a 16       		.uleb128 0x16
 3367 002b 00       		.byte	0
 3368 002c 03       		.uleb128 0x3
 3369 002d 0E       		.uleb128 0xe
 3370 002e 3A       		.uleb128 0x3a
 3371 002f 0B       		.uleb128 0xb
 3372 0030 3B       		.uleb128 0x3b
 3373 0031 0B       		.uleb128 0xb
 3374 0032 49       		.uleb128 0x49
 3375 0033 13       		.uleb128 0x13
 3376 0034 00       		.byte	0
 3377 0035 00       		.byte	0
 3378 0036 05       		.uleb128 0x5
 3379 0037 0F       		.uleb128 0xf
 3380 0038 00       		.byte	0
 3381 0039 0B       		.uleb128 0xb
 3382 003a 0B       		.uleb128 0xb
 3383 003b 00       		.byte	0
 3384 003c 00       		.byte	0
 3385 003d 06       		.uleb128 0x6
 3386 003e 0F       		.uleb128 0xf
 3387 003f 00       		.byte	0
 3388 0040 0B       		.uleb128 0xb
 3389 0041 0B       		.uleb128 0xb
 3390 0042 49       		.uleb128 0x49
 3391 0043 13       		.uleb128 0x13
 3392 0044 00       		.byte	0
 3393 0045 00       		.byte	0
 3394 0046 07       		.uleb128 0x7
 3395 0047 26       		.uleb128 0x26
 3396 0048 00       		.byte	0
 3397 0049 49       		.uleb128 0x49
 3398 004a 13       		.uleb128 0x13
 3399 004b 00       		.byte	0
 3400 004c 00       		.byte	0
 3401 004d 08       		.uleb128 0x8
 3402 004e 13       		.uleb128 0x13
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 82


 3403 004f 01       		.byte	0x1
 3404 0050 03       		.uleb128 0x3
 3405 0051 0E       		.uleb128 0xe
 3406 0052 0B       		.uleb128 0xb
 3407 0053 0B       		.uleb128 0xb
 3408 0054 3A       		.uleb128 0x3a
 3409 0055 0B       		.uleb128 0xb
 3410 0056 3B       		.uleb128 0x3b
 3411 0057 0B       		.uleb128 0xb
 3412 0058 01       		.uleb128 0x1
 3413 0059 13       		.uleb128 0x13
 3414 005a 00       		.byte	0
 3415 005b 00       		.byte	0
 3416 005c 09       		.uleb128 0x9
 3417 005d 0D       		.uleb128 0xd
 3418 005e 00       		.byte	0
 3419 005f 03       		.uleb128 0x3
 3420 0060 0E       		.uleb128 0xe
 3421 0061 3A       		.uleb128 0x3a
 3422 0062 0B       		.uleb128 0xb
 3423 0063 3B       		.uleb128 0x3b
 3424 0064 0B       		.uleb128 0xb
 3425 0065 49       		.uleb128 0x49
 3426 0066 13       		.uleb128 0x13
 3427 0067 38       		.uleb128 0x38
 3428 0068 0B       		.uleb128 0xb
 3429 0069 00       		.byte	0
 3430 006a 00       		.byte	0
 3431 006b 0A       		.uleb128 0xa
 3432 006c 35       		.uleb128 0x35
 3433 006d 00       		.byte	0
 3434 006e 49       		.uleb128 0x49
 3435 006f 13       		.uleb128 0x13
 3436 0070 00       		.byte	0
 3437 0071 00       		.byte	0
 3438 0072 0B       		.uleb128 0xb
 3439 0073 15       		.uleb128 0x15
 3440 0074 01       		.byte	0x1
 3441 0075 27       		.uleb128 0x27
 3442 0076 19       		.uleb128 0x19
 3443 0077 01       		.uleb128 0x1
 3444 0078 13       		.uleb128 0x13
 3445 0079 00       		.byte	0
 3446 007a 00       		.byte	0
 3447 007b 0C       		.uleb128 0xc
 3448 007c 05       		.uleb128 0x5
 3449 007d 00       		.byte	0
 3450 007e 49       		.uleb128 0x49
 3451 007f 13       		.uleb128 0x13
 3452 0080 00       		.byte	0
 3453 0081 00       		.byte	0
 3454 0082 0D       		.uleb128 0xd
 3455 0083 17       		.uleb128 0x17
 3456 0084 01       		.byte	0x1
 3457 0085 0B       		.uleb128 0xb
 3458 0086 0B       		.uleb128 0xb
 3459 0087 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 83


 3460 0088 0B       		.uleb128 0xb
 3461 0089 3B       		.uleb128 0x3b
 3462 008a 0B       		.uleb128 0xb
 3463 008b 01       		.uleb128 0x1
 3464 008c 13       		.uleb128 0x13
 3465 008d 00       		.byte	0
 3466 008e 00       		.byte	0
 3467 008f 0E       		.uleb128 0xe
 3468 0090 0D       		.uleb128 0xd
 3469 0091 00       		.byte	0
 3470 0092 03       		.uleb128 0x3
 3471 0093 0E       		.uleb128 0xe
 3472 0094 3A       		.uleb128 0x3a
 3473 0095 0B       		.uleb128 0xb
 3474 0096 3B       		.uleb128 0x3b
 3475 0097 0B       		.uleb128 0xb
 3476 0098 49       		.uleb128 0x49
 3477 0099 13       		.uleb128 0x13
 3478 009a 00       		.byte	0
 3479 009b 00       		.byte	0
 3480 009c 0F       		.uleb128 0xf
 3481 009d 0D       		.uleb128 0xd
 3482 009e 00       		.byte	0
 3483 009f 03       		.uleb128 0x3
 3484 00a0 08       		.uleb128 0x8
 3485 00a1 3A       		.uleb128 0x3a
 3486 00a2 0B       		.uleb128 0xb
 3487 00a3 3B       		.uleb128 0x3b
 3488 00a4 0B       		.uleb128 0xb
 3489 00a5 49       		.uleb128 0x49
 3490 00a6 13       		.uleb128 0x13
 3491 00a7 38       		.uleb128 0x38
 3492 00a8 0B       		.uleb128 0xb
 3493 00a9 00       		.byte	0
 3494 00aa 00       		.byte	0
 3495 00ab 10       		.uleb128 0x10
 3496 00ac 2E       		.uleb128 0x2e
 3497 00ad 01       		.byte	0x1
 3498 00ae 03       		.uleb128 0x3
 3499 00af 0E       		.uleb128 0xe
 3500 00b0 3A       		.uleb128 0x3a
 3501 00b1 0B       		.uleb128 0xb
 3502 00b2 3B       		.uleb128 0x3b
 3503 00b3 05       		.uleb128 0x5
 3504 00b4 27       		.uleb128 0x27
 3505 00b5 19       		.uleb128 0x19
 3506 00b6 49       		.uleb128 0x49
 3507 00b7 13       		.uleb128 0x13
 3508 00b8 11       		.uleb128 0x11
 3509 00b9 01       		.uleb128 0x1
 3510 00ba 12       		.uleb128 0x12
 3511 00bb 06       		.uleb128 0x6
 3512 00bc 40       		.uleb128 0x40
 3513 00bd 18       		.uleb128 0x18
 3514 00be 9742     		.uleb128 0x2117
 3515 00c0 19       		.uleb128 0x19
 3516 00c1 01       		.uleb128 0x1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 84


 3517 00c2 13       		.uleb128 0x13
 3518 00c3 00       		.byte	0
 3519 00c4 00       		.byte	0
 3520 00c5 11       		.uleb128 0x11
 3521 00c6 05       		.uleb128 0x5
 3522 00c7 00       		.byte	0
 3523 00c8 03       		.uleb128 0x3
 3524 00c9 0E       		.uleb128 0xe
 3525 00ca 3A       		.uleb128 0x3a
 3526 00cb 0B       		.uleb128 0xb
 3527 00cc 3B       		.uleb128 0x3b
 3528 00cd 05       		.uleb128 0x5
 3529 00ce 49       		.uleb128 0x49
 3530 00cf 13       		.uleb128 0x13
 3531 00d0 02       		.uleb128 0x2
 3532 00d1 17       		.uleb128 0x17
 3533 00d2 00       		.byte	0
 3534 00d3 00       		.byte	0
 3535 00d4 12       		.uleb128 0x12
 3536 00d5 34       		.uleb128 0x34
 3537 00d6 00       		.byte	0
 3538 00d7 03       		.uleb128 0x3
 3539 00d8 0E       		.uleb128 0xe
 3540 00d9 3A       		.uleb128 0x3a
 3541 00da 0B       		.uleb128 0xb
 3542 00db 3B       		.uleb128 0x3b
 3543 00dc 05       		.uleb128 0x5
 3544 00dd 49       		.uleb128 0x49
 3545 00de 13       		.uleb128 0x13
 3546 00df 02       		.uleb128 0x2
 3547 00e0 17       		.uleb128 0x17
 3548 00e1 00       		.byte	0
 3549 00e2 00       		.byte	0
 3550 00e3 13       		.uleb128 0x13
 3551 00e4 898201   		.uleb128 0x4109
 3552 00e7 01       		.byte	0x1
 3553 00e8 11       		.uleb128 0x11
 3554 00e9 01       		.uleb128 0x1
 3555 00ea 31       		.uleb128 0x31
 3556 00eb 13       		.uleb128 0x13
 3557 00ec 01       		.uleb128 0x1
 3558 00ed 13       		.uleb128 0x13
 3559 00ee 00       		.byte	0
 3560 00ef 00       		.byte	0
 3561 00f0 14       		.uleb128 0x14
 3562 00f1 8A8201   		.uleb128 0x410a
 3563 00f4 00       		.byte	0
 3564 00f5 02       		.uleb128 0x2
 3565 00f6 18       		.uleb128 0x18
 3566 00f7 9142     		.uleb128 0x2111
 3567 00f9 18       		.uleb128 0x18
 3568 00fa 00       		.byte	0
 3569 00fb 00       		.byte	0
 3570 00fc 15       		.uleb128 0x15
 3571 00fd 898201   		.uleb128 0x4109
 3572 0100 01       		.byte	0x1
 3573 0101 11       		.uleb128 0x11
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 85


 3574 0102 01       		.uleb128 0x1
 3575 0103 31       		.uleb128 0x31
 3576 0104 13       		.uleb128 0x13
 3577 0105 00       		.byte	0
 3578 0106 00       		.byte	0
 3579 0107 16       		.uleb128 0x16
 3580 0108 2E       		.uleb128 0x2e
 3581 0109 01       		.byte	0x1
 3582 010a 03       		.uleb128 0x3
 3583 010b 0E       		.uleb128 0xe
 3584 010c 3A       		.uleb128 0x3a
 3585 010d 0B       		.uleb128 0xb
 3586 010e 3B       		.uleb128 0x3b
 3587 010f 05       		.uleb128 0x5
 3588 0110 27       		.uleb128 0x27
 3589 0111 19       		.uleb128 0x19
 3590 0112 11       		.uleb128 0x11
 3591 0113 01       		.uleb128 0x1
 3592 0114 12       		.uleb128 0x12
 3593 0115 06       		.uleb128 0x6
 3594 0116 40       		.uleb128 0x40
 3595 0117 18       		.uleb128 0x18
 3596 0118 9742     		.uleb128 0x2117
 3597 011a 19       		.uleb128 0x19
 3598 011b 01       		.uleb128 0x1
 3599 011c 13       		.uleb128 0x13
 3600 011d 00       		.byte	0
 3601 011e 00       		.byte	0
 3602 011f 17       		.uleb128 0x17
 3603 0120 898201   		.uleb128 0x4109
 3604 0123 00       		.byte	0
 3605 0124 11       		.uleb128 0x11
 3606 0125 01       		.uleb128 0x1
 3607 0126 31       		.uleb128 0x31
 3608 0127 13       		.uleb128 0x13
 3609 0128 00       		.byte	0
 3610 0129 00       		.byte	0
 3611 012a 18       		.uleb128 0x18
 3612 012b 05       		.uleb128 0x5
 3613 012c 00       		.byte	0
 3614 012d 03       		.uleb128 0x3
 3615 012e 0E       		.uleb128 0xe
 3616 012f 3A       		.uleb128 0x3a
 3617 0130 0B       		.uleb128 0xb
 3618 0131 3B       		.uleb128 0x3b
 3619 0132 05       		.uleb128 0x5
 3620 0133 49       		.uleb128 0x49
 3621 0134 13       		.uleb128 0x13
 3622 0135 02       		.uleb128 0x2
 3623 0136 18       		.uleb128 0x18
 3624 0137 00       		.byte	0
 3625 0138 00       		.byte	0
 3626 0139 19       		.uleb128 0x19
 3627 013a 2E       		.uleb128 0x2e
 3628 013b 01       		.byte	0x1
 3629 013c 3F       		.uleb128 0x3f
 3630 013d 19       		.uleb128 0x19
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 86


 3631 013e 03       		.uleb128 0x3
 3632 013f 0E       		.uleb128 0xe
 3633 0140 3A       		.uleb128 0x3a
 3634 0141 0B       		.uleb128 0xb
 3635 0142 3B       		.uleb128 0x3b
 3636 0143 0B       		.uleb128 0xb
 3637 0144 27       		.uleb128 0x27
 3638 0145 19       		.uleb128 0x19
 3639 0146 49       		.uleb128 0x49
 3640 0147 13       		.uleb128 0x13
 3641 0148 11       		.uleb128 0x11
 3642 0149 01       		.uleb128 0x1
 3643 014a 12       		.uleb128 0x12
 3644 014b 06       		.uleb128 0x6
 3645 014c 40       		.uleb128 0x40
 3646 014d 18       		.uleb128 0x18
 3647 014e 9742     		.uleb128 0x2117
 3648 0150 19       		.uleb128 0x19
 3649 0151 01       		.uleb128 0x1
 3650 0152 13       		.uleb128 0x13
 3651 0153 00       		.byte	0
 3652 0154 00       		.byte	0
 3653 0155 1A       		.uleb128 0x1a
 3654 0156 34       		.uleb128 0x34
 3655 0157 00       		.byte	0
 3656 0158 03       		.uleb128 0x3
 3657 0159 0E       		.uleb128 0xe
 3658 015a 3A       		.uleb128 0x3a
 3659 015b 0B       		.uleb128 0xb
 3660 015c 3B       		.uleb128 0x3b
 3661 015d 0B       		.uleb128 0xb
 3662 015e 49       		.uleb128 0x49
 3663 015f 13       		.uleb128 0x13
 3664 0160 02       		.uleb128 0x2
 3665 0161 17       		.uleb128 0x17
 3666 0162 00       		.byte	0
 3667 0163 00       		.byte	0
 3668 0164 1B       		.uleb128 0x1b
 3669 0165 2E       		.uleb128 0x2e
 3670 0166 01       		.byte	0x1
 3671 0167 3F       		.uleb128 0x3f
 3672 0168 19       		.uleb128 0x19
 3673 0169 03       		.uleb128 0x3
 3674 016a 0E       		.uleb128 0xe
 3675 016b 3A       		.uleb128 0x3a
 3676 016c 0B       		.uleb128 0xb
 3677 016d 3B       		.uleb128 0x3b
 3678 016e 05       		.uleb128 0x5
 3679 016f 27       		.uleb128 0x27
 3680 0170 19       		.uleb128 0x19
 3681 0171 49       		.uleb128 0x49
 3682 0172 13       		.uleb128 0x13
 3683 0173 11       		.uleb128 0x11
 3684 0174 01       		.uleb128 0x1
 3685 0175 12       		.uleb128 0x12
 3686 0176 06       		.uleb128 0x6
 3687 0177 40       		.uleb128 0x40
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 87


 3688 0178 18       		.uleb128 0x18
 3689 0179 9742     		.uleb128 0x2117
 3690 017b 19       		.uleb128 0x19
 3691 017c 01       		.uleb128 0x1
 3692 017d 13       		.uleb128 0x13
 3693 017e 00       		.byte	0
 3694 017f 00       		.byte	0
 3695 0180 1C       		.uleb128 0x1c
 3696 0181 34       		.uleb128 0x34
 3697 0182 00       		.byte	0
 3698 0183 03       		.uleb128 0x3
 3699 0184 0E       		.uleb128 0xe
 3700 0185 3A       		.uleb128 0x3a
 3701 0186 0B       		.uleb128 0xb
 3702 0187 3B       		.uleb128 0x3b
 3703 0188 05       		.uleb128 0x5
 3704 0189 49       		.uleb128 0x49
 3705 018a 13       		.uleb128 0x13
 3706 018b 02       		.uleb128 0x2
 3707 018c 18       		.uleb128 0x18
 3708 018d 00       		.byte	0
 3709 018e 00       		.byte	0
 3710 018f 1D       		.uleb128 0x1d
 3711 0190 898201   		.uleb128 0x4109
 3712 0193 01       		.byte	0x1
 3713 0194 11       		.uleb128 0x11
 3714 0195 01       		.uleb128 0x1
 3715 0196 01       		.uleb128 0x1
 3716 0197 13       		.uleb128 0x13
 3717 0198 00       		.byte	0
 3718 0199 00       		.byte	0
 3719 019a 1E       		.uleb128 0x1e
 3720 019b 898201   		.uleb128 0x4109
 3721 019e 01       		.byte	0x1
 3722 019f 11       		.uleb128 0x11
 3723 01a0 01       		.uleb128 0x1
 3724 01a1 00       		.byte	0
 3725 01a2 00       		.byte	0
 3726 01a3 1F       		.uleb128 0x1f
 3727 01a4 2E       		.uleb128 0x2e
 3728 01a5 01       		.byte	0x1
 3729 01a6 03       		.uleb128 0x3
 3730 01a7 0E       		.uleb128 0xe
 3731 01a8 3A       		.uleb128 0x3a
 3732 01a9 0B       		.uleb128 0xb
 3733 01aa 3B       		.uleb128 0x3b
 3734 01ab 05       		.uleb128 0x5
 3735 01ac 27       		.uleb128 0x27
 3736 01ad 19       		.uleb128 0x19
 3737 01ae 8701     		.uleb128 0x87
 3738 01b0 19       		.uleb128 0x19
 3739 01b1 11       		.uleb128 0x11
 3740 01b2 01       		.uleb128 0x1
 3741 01b3 12       		.uleb128 0x12
 3742 01b4 06       		.uleb128 0x6
 3743 01b5 40       		.uleb128 0x40
 3744 01b6 18       		.uleb128 0x18
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 88


 3745 01b7 9742     		.uleb128 0x2117
 3746 01b9 19       		.uleb128 0x19
 3747 01ba 01       		.uleb128 0x1
 3748 01bb 13       		.uleb128 0x13
 3749 01bc 00       		.byte	0
 3750 01bd 00       		.byte	0
 3751 01be 20       		.uleb128 0x20
 3752 01bf 2E       		.uleb128 0x2e
 3753 01c0 00       		.byte	0
 3754 01c1 3F       		.uleb128 0x3f
 3755 01c2 19       		.uleb128 0x19
 3756 01c3 03       		.uleb128 0x3
 3757 01c4 0E       		.uleb128 0xe
 3758 01c5 3A       		.uleb128 0x3a
 3759 01c6 0B       		.uleb128 0xb
 3760 01c7 3B       		.uleb128 0x3b
 3761 01c8 05       		.uleb128 0x5
 3762 01c9 27       		.uleb128 0x27
 3763 01ca 19       		.uleb128 0x19
 3764 01cb 49       		.uleb128 0x49
 3765 01cc 13       		.uleb128 0x13
 3766 01cd 11       		.uleb128 0x11
 3767 01ce 01       		.uleb128 0x1
 3768 01cf 12       		.uleb128 0x12
 3769 01d0 06       		.uleb128 0x6
 3770 01d1 40       		.uleb128 0x40
 3771 01d2 18       		.uleb128 0x18
 3772 01d3 9742     		.uleb128 0x2117
 3773 01d5 19       		.uleb128 0x19
 3774 01d6 00       		.byte	0
 3775 01d7 00       		.byte	0
 3776 01d8 21       		.uleb128 0x21
 3777 01d9 2E       		.uleb128 0x2e
 3778 01da 01       		.byte	0x1
 3779 01db 3F       		.uleb128 0x3f
 3780 01dc 19       		.uleb128 0x19
 3781 01dd 03       		.uleb128 0x3
 3782 01de 0E       		.uleb128 0xe
 3783 01df 3A       		.uleb128 0x3a
 3784 01e0 0B       		.uleb128 0xb
 3785 01e1 3B       		.uleb128 0x3b
 3786 01e2 05       		.uleb128 0x5
 3787 01e3 27       		.uleb128 0x27
 3788 01e4 19       		.uleb128 0x19
 3789 01e5 11       		.uleb128 0x11
 3790 01e6 01       		.uleb128 0x1
 3791 01e7 12       		.uleb128 0x12
 3792 01e8 06       		.uleb128 0x6
 3793 01e9 40       		.uleb128 0x40
 3794 01ea 18       		.uleb128 0x18
 3795 01eb 9742     		.uleb128 0x2117
 3796 01ed 19       		.uleb128 0x19
 3797 01ee 01       		.uleb128 0x1
 3798 01ef 13       		.uleb128 0x13
 3799 01f0 00       		.byte	0
 3800 01f1 00       		.byte	0
 3801 01f2 22       		.uleb128 0x22
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 89


 3802 01f3 34       		.uleb128 0x34
 3803 01f4 00       		.byte	0
 3804 01f5 03       		.uleb128 0x3
 3805 01f6 0E       		.uleb128 0xe
 3806 01f7 3A       		.uleb128 0x3a
 3807 01f8 0B       		.uleb128 0xb
 3808 01f9 3B       		.uleb128 0x3b
 3809 01fa 0B       		.uleb128 0xb
 3810 01fb 49       		.uleb128 0x49
 3811 01fc 13       		.uleb128 0x13
 3812 01fd 02       		.uleb128 0x2
 3813 01fe 18       		.uleb128 0x18
 3814 01ff 00       		.byte	0
 3815 0200 00       		.byte	0
 3816 0201 23       		.uleb128 0x23
 3817 0202 2E       		.uleb128 0x2e
 3818 0203 00       		.byte	0
 3819 0204 3F       		.uleb128 0x3f
 3820 0205 19       		.uleb128 0x19
 3821 0206 3C       		.uleb128 0x3c
 3822 0207 19       		.uleb128 0x19
 3823 0208 6E       		.uleb128 0x6e
 3824 0209 0E       		.uleb128 0xe
 3825 020a 03       		.uleb128 0x3
 3826 020b 0E       		.uleb128 0xe
 3827 020c 3A       		.uleb128 0x3a
 3828 020d 0B       		.uleb128 0xb
 3829 020e 3B       		.uleb128 0x3b
 3830 020f 05       		.uleb128 0x5
 3831 0210 00       		.byte	0
 3832 0211 00       		.byte	0
 3833 0212 24       		.uleb128 0x24
 3834 0213 2E       		.uleb128 0x2e
 3835 0214 00       		.byte	0
 3836 0215 3F       		.uleb128 0x3f
 3837 0216 19       		.uleb128 0x19
 3838 0217 3C       		.uleb128 0x3c
 3839 0218 19       		.uleb128 0x19
 3840 0219 6E       		.uleb128 0x6e
 3841 021a 0E       		.uleb128 0xe
 3842 021b 03       		.uleb128 0x3
 3843 021c 0E       		.uleb128 0xe
 3844 021d 3A       		.uleb128 0x3a
 3845 021e 0B       		.uleb128 0xb
 3846 021f 3B       		.uleb128 0x3b
 3847 0220 0B       		.uleb128 0xb
 3848 0221 00       		.byte	0
 3849 0222 00       		.byte	0
 3850 0223 00       		.byte	0
 3851              		.section	.debug_loc,"",%progbits
 3852              	.Ldebug_loc0:
 3853              	.LLST0:
 3854 0000 00000000 		.4byte	.LVL0
 3855 0004 14000000 		.4byte	.LVL1
 3856 0008 0100     		.2byte	0x1
 3857 000a 50       		.byte	0x50
 3858 000b 14000000 		.4byte	.LVL1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 90


 3859 000f 16000000 		.4byte	.LVL2
 3860 0013 0400     		.2byte	0x4
 3861 0015 F3       		.byte	0xf3
 3862 0016 01       		.uleb128 0x1
 3863 0017 50       		.byte	0x50
 3864 0018 9F       		.byte	0x9f
 3865 0019 16000000 		.4byte	.LVL2
 3866 001d 18000000 		.4byte	.LVL3
 3867 0021 0100     		.2byte	0x1
 3868 0023 50       		.byte	0x50
 3869 0024 18000000 		.4byte	.LVL3
 3870 0028 20000000 		.4byte	.LFE47
 3871 002c 0400     		.2byte	0x4
 3872 002e F3       		.byte	0xf3
 3873 002f 01       		.uleb128 0x1
 3874 0030 50       		.byte	0x50
 3875 0031 9F       		.byte	0x9f
 3876 0032 00000000 		.4byte	0
 3877 0036 00000000 		.4byte	0
 3878              	.LLST1:
 3879 003a 14000000 		.4byte	.LVL1
 3880 003e 16000000 		.4byte	.LVL2
 3881 0042 0100     		.2byte	0x1
 3882 0044 50       		.byte	0x50
 3883 0045 18000000 		.4byte	.LVL3
 3884 0049 20000000 		.4byte	.LFE47
 3885 004d 0100     		.2byte	0x1
 3886 004f 50       		.byte	0x50
 3887 0050 00000000 		.4byte	0
 3888 0054 00000000 		.4byte	0
 3889              	.LLST2:
 3890 0058 00000000 		.4byte	.LVL4
 3891 005c 18000000 		.4byte	.LVL9
 3892 0060 0100     		.2byte	0x1
 3893 0062 50       		.byte	0x50
 3894 0063 18000000 		.4byte	.LVL9
 3895 0067 1B000000 		.4byte	.LVL10-1
 3896 006b 0300     		.2byte	0x3
 3897 006d 71       		.byte	0x71
 3898 006e 7C       		.sleb128 -4
 3899 006f 9F       		.byte	0x9f
 3900 0070 1B000000 		.4byte	.LVL10-1
 3901 0074 20000000 		.4byte	.LVL11
 3902 0078 0400     		.2byte	0x4
 3903 007a F3       		.byte	0xf3
 3904 007b 01       		.uleb128 0x1
 3905 007c 50       		.byte	0x50
 3906 007d 9F       		.byte	0x9f
 3907 007e 20000000 		.4byte	.LVL11
 3908 0082 2E000000 		.4byte	.LVL14
 3909 0086 0100     		.2byte	0x1
 3910 0088 50       		.byte	0x50
 3911 0089 2E000000 		.4byte	.LVL14
 3912 008d 31000000 		.4byte	.LVL15-1
 3913 0091 0300     		.2byte	0x3
 3914 0093 71       		.byte	0x71
 3915 0094 7C       		.sleb128 -4
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 91


 3916 0095 9F       		.byte	0x9f
 3917 0096 31000000 		.4byte	.LVL15-1
 3918 009a 36000000 		.4byte	.LVL16
 3919 009e 0400     		.2byte	0x4
 3920 00a0 F3       		.byte	0xf3
 3921 00a1 01       		.uleb128 0x1
 3922 00a2 50       		.byte	0x50
 3923 00a3 9F       		.byte	0x9f
 3924 00a4 36000000 		.4byte	.LVL16
 3925 00a8 38000000 		.4byte	.LVL17
 3926 00ac 0100     		.2byte	0x1
 3927 00ae 50       		.byte	0x50
 3928 00af 38000000 		.4byte	.LVL17
 3929 00b3 3A000000 		.4byte	.LVL18
 3930 00b7 0400     		.2byte	0x4
 3931 00b9 F3       		.byte	0xf3
 3932 00ba 01       		.uleb128 0x1
 3933 00bb 50       		.byte	0x50
 3934 00bc 9F       		.byte	0x9f
 3935 00bd 3A000000 		.4byte	.LVL18
 3936 00c1 3C000000 		.4byte	.LVL19
 3937 00c5 0100     		.2byte	0x1
 3938 00c7 50       		.byte	0x50
 3939 00c8 3C000000 		.4byte	.LVL19
 3940 00cc 44000000 		.4byte	.LFE49
 3941 00d0 0400     		.2byte	0x4
 3942 00d2 F3       		.byte	0xf3
 3943 00d3 01       		.uleb128 0x1
 3944 00d4 50       		.byte	0x50
 3945 00d5 9F       		.byte	0x9f
 3946 00d6 00000000 		.4byte	0
 3947 00da 00000000 		.4byte	0
 3948              	.LLST3:
 3949 00de 00000000 		.4byte	.LVL4
 3950 00e2 14000000 		.4byte	.LVL8
 3951 00e6 0100     		.2byte	0x1
 3952 00e8 51       		.byte	0x51
 3953 00e9 14000000 		.4byte	.LVL8
 3954 00ed 1B000000 		.4byte	.LVL10-1
 3955 00f1 0200     		.2byte	0x2
 3956 00f3 71       		.byte	0x71
 3957 00f4 00       		.sleb128 0
 3958 00f5 1B000000 		.4byte	.LVL10-1
 3959 00f9 20000000 		.4byte	.LVL11
 3960 00fd 0400     		.2byte	0x4
 3961 00ff F3       		.byte	0xf3
 3962 0100 01       		.uleb128 0x1
 3963 0101 51       		.byte	0x51
 3964 0102 9F       		.byte	0x9f
 3965 0103 20000000 		.4byte	.LVL11
 3966 0107 2A000000 		.4byte	.LVL12
 3967 010b 0100     		.2byte	0x1
 3968 010d 51       		.byte	0x51
 3969 010e 2A000000 		.4byte	.LVL12
 3970 0112 2E000000 		.4byte	.LVL14
 3971 0116 0200     		.2byte	0x2
 3972 0118 70       		.byte	0x70
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 92


 3973 0119 04       		.sleb128 4
 3974 011a 2E000000 		.4byte	.LVL14
 3975 011e 31000000 		.4byte	.LVL15-1
 3976 0122 0200     		.2byte	0x2
 3977 0124 71       		.byte	0x71
 3978 0125 00       		.sleb128 0
 3979 0126 31000000 		.4byte	.LVL15-1
 3980 012a 36000000 		.4byte	.LVL16
 3981 012e 0400     		.2byte	0x4
 3982 0130 F3       		.byte	0xf3
 3983 0131 01       		.uleb128 0x1
 3984 0132 51       		.byte	0x51
 3985 0133 9F       		.byte	0x9f
 3986 0134 36000000 		.4byte	.LVL16
 3987 0138 3C000000 		.4byte	.LVL19
 3988 013c 0100     		.2byte	0x1
 3989 013e 51       		.byte	0x51
 3990 013f 3C000000 		.4byte	.LVL19
 3991 0143 44000000 		.4byte	.LFE49
 3992 0147 0400     		.2byte	0x4
 3993 0149 F3       		.byte	0xf3
 3994 014a 01       		.uleb128 0x1
 3995 014b 51       		.byte	0x51
 3996 014c 9F       		.byte	0x9f
 3997 014d 00000000 		.4byte	0
 3998 0151 00000000 		.4byte	0
 3999              	.LLST4:
 4000 0155 00000000 		.4byte	.LVL4
 4001 0159 0C000000 		.4byte	.LVL6
 4002 015d 0100     		.2byte	0x1
 4003 015f 52       		.byte	0x52
 4004 0160 0C000000 		.4byte	.LVL6
 4005 0164 20000000 		.4byte	.LVL11
 4006 0168 0400     		.2byte	0x4
 4007 016a F3       		.byte	0xf3
 4008 016b 01       		.uleb128 0x1
 4009 016c 52       		.byte	0x52
 4010 016d 9F       		.byte	0x9f
 4011 016e 20000000 		.4byte	.LVL11
 4012 0172 31000000 		.4byte	.LVL15-1
 4013 0176 0100     		.2byte	0x1
 4014 0178 52       		.byte	0x52
 4015 0179 31000000 		.4byte	.LVL15-1
 4016 017d 3A000000 		.4byte	.LVL18
 4017 0181 0400     		.2byte	0x4
 4018 0183 F3       		.byte	0xf3
 4019 0184 01       		.uleb128 0x1
 4020 0185 52       		.byte	0x52
 4021 0186 9F       		.byte	0x9f
 4022 0187 3A000000 		.4byte	.LVL18
 4023 018b 3C000000 		.4byte	.LVL19
 4024 018f 0100     		.2byte	0x1
 4025 0191 52       		.byte	0x52
 4026 0192 3C000000 		.4byte	.LVL19
 4027 0196 44000000 		.4byte	.LFE49
 4028 019a 0400     		.2byte	0x4
 4029 019c F3       		.byte	0xf3
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 93


 4030 019d 01       		.uleb128 0x1
 4031 019e 52       		.byte	0x52
 4032 019f 9F       		.byte	0x9f
 4033 01a0 00000000 		.4byte	0
 4034 01a4 00000000 		.4byte	0
 4035              	.LLST5:
 4036 01a8 00000000 		.4byte	.LVL4
 4037 01ac 0E000000 		.4byte	.LVL7
 4038 01b0 0100     		.2byte	0x1
 4039 01b2 53       		.byte	0x53
 4040 01b3 0E000000 		.4byte	.LVL7
 4041 01b7 20000000 		.4byte	.LVL11
 4042 01bb 0400     		.2byte	0x4
 4043 01bd F3       		.byte	0xf3
 4044 01be 01       		.uleb128 0x1
 4045 01bf 53       		.byte	0x53
 4046 01c0 9F       		.byte	0x9f
 4047 01c1 20000000 		.4byte	.LVL11
 4048 01c5 2C000000 		.4byte	.LVL13
 4049 01c9 0100     		.2byte	0x1
 4050 01cb 53       		.byte	0x53
 4051 01cc 2C000000 		.4byte	.LVL13
 4052 01d0 3A000000 		.4byte	.LVL18
 4053 01d4 0400     		.2byte	0x4
 4054 01d6 F3       		.byte	0xf3
 4055 01d7 01       		.uleb128 0x1
 4056 01d8 53       		.byte	0x53
 4057 01d9 9F       		.byte	0x9f
 4058 01da 3A000000 		.4byte	.LVL18
 4059 01de 3C000000 		.4byte	.LVL19
 4060 01e2 0100     		.2byte	0x1
 4061 01e4 53       		.byte	0x53
 4062 01e5 3C000000 		.4byte	.LVL19
 4063 01e9 44000000 		.4byte	.LFE49
 4064 01ed 0400     		.2byte	0x4
 4065 01ef F3       		.byte	0xf3
 4066 01f0 01       		.uleb128 0x1
 4067 01f1 53       		.byte	0x53
 4068 01f2 9F       		.byte	0x9f
 4069 01f3 00000000 		.4byte	0
 4070 01f7 00000000 		.4byte	0
 4071              	.LLST6:
 4072 01fb 02000000 		.4byte	.LVL5
 4073 01ff 3C000000 		.4byte	.LVL19
 4074 0203 0200     		.2byte	0x2
 4075 0205 30       		.byte	0x30
 4076 0206 9F       		.byte	0x9f
 4077 0207 3C000000 		.4byte	.LVL19
 4078 020b 44000000 		.4byte	.LFE49
 4079 020f 0100     		.2byte	0x1
 4080 0211 50       		.byte	0x50
 4081 0212 00000000 		.4byte	0
 4082 0216 00000000 		.4byte	0
 4083              	.LLST7:
 4084 021a 00000000 		.4byte	.LVL26
 4085 021e 1F000000 		.4byte	.LVL27-1
 4086 0222 0100     		.2byte	0x1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 94


 4087 0224 50       		.byte	0x50
 4088 0225 1F000000 		.4byte	.LVL27-1
 4089 0229 34000000 		.4byte	.LVL32
 4090 022d 0100     		.2byte	0x1
 4091 022f 58       		.byte	0x58
 4092 0230 34000000 		.4byte	.LVL32
 4093 0234 3A000000 		.4byte	.LFE38
 4094 0238 0400     		.2byte	0x4
 4095 023a F3       		.byte	0xf3
 4096 023b 01       		.uleb128 0x1
 4097 023c 50       		.byte	0x50
 4098 023d 9F       		.byte	0x9f
 4099 023e 00000000 		.4byte	0
 4100 0242 00000000 		.4byte	0
 4101              	.LLST8:
 4102 0246 00000000 		.4byte	.LVL26
 4103 024a 1F000000 		.4byte	.LVL27-1
 4104 024e 0100     		.2byte	0x1
 4105 0250 51       		.byte	0x51
 4106 0251 1F000000 		.4byte	.LVL27-1
 4107 0255 34000000 		.4byte	.LVL29
 4108 0259 0100     		.2byte	0x1
 4109 025b 55       		.byte	0x55
 4110 025c 34000000 		.4byte	.LVL29
 4111 0260 3A000000 		.4byte	.LFE38
 4112 0264 0400     		.2byte	0x4
 4113 0266 F3       		.byte	0xf3
 4114 0267 01       		.uleb128 0x1
 4115 0268 51       		.byte	0x51
 4116 0269 9F       		.byte	0x9f
 4117 026a 00000000 		.4byte	0
 4118 026e 00000000 		.4byte	0
 4119              	.LLST9:
 4120 0272 00000000 		.4byte	.LVL26
 4121 0276 1F000000 		.4byte	.LVL27-1
 4122 027a 0100     		.2byte	0x1
 4123 027c 52       		.byte	0x52
 4124 027d 1F000000 		.4byte	.LVL27-1
 4125 0281 34000000 		.4byte	.LVL31
 4126 0285 0100     		.2byte	0x1
 4127 0287 57       		.byte	0x57
 4128 0288 34000000 		.4byte	.LVL31
 4129 028c 3A000000 		.4byte	.LFE38
 4130 0290 0400     		.2byte	0x4
 4131 0292 F3       		.byte	0xf3
 4132 0293 01       		.uleb128 0x1
 4133 0294 52       		.byte	0x52
 4134 0295 9F       		.byte	0x9f
 4135 0296 00000000 		.4byte	0
 4136 029a 00000000 		.4byte	0
 4137              	.LLST10:
 4138 029e 00000000 		.4byte	.LVL26
 4139 02a2 1F000000 		.4byte	.LVL27-1
 4140 02a6 0100     		.2byte	0x1
 4141 02a8 53       		.byte	0x53
 4142 02a9 1F000000 		.4byte	.LVL27-1
 4143 02ad 34000000 		.4byte	.LVL30
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 95


 4144 02b1 0100     		.2byte	0x1
 4145 02b3 56       		.byte	0x56
 4146 02b4 34000000 		.4byte	.LVL30
 4147 02b8 3A000000 		.4byte	.LFE38
 4148 02bc 0400     		.2byte	0x4
 4149 02be F3       		.byte	0xf3
 4150 02bf 01       		.uleb128 0x1
 4151 02c0 53       		.byte	0x53
 4152 02c1 9F       		.byte	0x9f
 4153 02c2 00000000 		.4byte	0
 4154 02c6 00000000 		.4byte	0
 4155              	.LLST11:
 4156 02ca 04000000 		.4byte	.LVL33
 4157 02ce 26000000 		.4byte	.LVL35
 4158 02d2 0200     		.2byte	0x2
 4159 02d4 30       		.byte	0x30
 4160 02d5 9F       		.byte	0x9f
 4161 02d6 26000000 		.4byte	.LVL35
 4162 02da 28000000 		.4byte	.LVL36
 4163 02de 0100     		.2byte	0x1
 4164 02e0 50       		.byte	0x50
 4165 02e1 28000000 		.4byte	.LVL36
 4166 02e5 2A000000 		.4byte	.LVL37
 4167 02e9 0200     		.2byte	0x2
 4168 02eb 30       		.byte	0x30
 4169 02ec 9F       		.byte	0x9f
 4170 02ed 2A000000 		.4byte	.LVL37
 4171 02f1 44000000 		.4byte	.LFE36
 4172 02f5 0100     		.2byte	0x1
 4173 02f7 50       		.byte	0x50
 4174 02f8 00000000 		.4byte	0
 4175 02fc 00000000 		.4byte	0
 4176              	.LLST12:
 4177 0300 00000000 		.4byte	.LVL38
 4178 0304 0E000000 		.4byte	.LVL39
 4179 0308 0100     		.2byte	0x1
 4180 030a 50       		.byte	0x50
 4181 030b 0E000000 		.4byte	.LVL39
 4182 030f 2E000000 		.4byte	.LFE37
 4183 0313 0200     		.2byte	0x2
 4184 0315 91       		.byte	0x91
 4185 0316 64       		.sleb128 -28
 4186 0317 00000000 		.4byte	0
 4187 031b 00000000 		.4byte	0
 4188              	.LLST13:
 4189 031f 00000000 		.4byte	.LVL38
 4190 0323 11000000 		.4byte	.LVL40-1
 4191 0327 0100     		.2byte	0x1
 4192 0329 51       		.byte	0x51
 4193 032a 11000000 		.4byte	.LVL40-1
 4194 032e 2C000000 		.4byte	.LVL45
 4195 0332 0100     		.2byte	0x1
 4196 0334 55       		.byte	0x55
 4197 0335 2C000000 		.4byte	.LVL45
 4198 0339 2E000000 		.4byte	.LFE37
 4199 033d 0400     		.2byte	0x4
 4200 033f F3       		.byte	0xf3
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 96


 4201 0340 01       		.uleb128 0x1
 4202 0341 51       		.byte	0x51
 4203 0342 9F       		.byte	0x9f
 4204 0343 00000000 		.4byte	0
 4205 0347 00000000 		.4byte	0
 4206              	.LLST14:
 4207 034b 00000000 		.4byte	.LVL38
 4208 034f 11000000 		.4byte	.LVL40-1
 4209 0353 0100     		.2byte	0x1
 4210 0355 52       		.byte	0x52
 4211 0356 11000000 		.4byte	.LVL40-1
 4212 035a 2C000000 		.4byte	.LVL46
 4213 035e 0100     		.2byte	0x1
 4214 0360 56       		.byte	0x56
 4215 0361 2C000000 		.4byte	.LVL46
 4216 0365 2E000000 		.4byte	.LFE37
 4217 0369 0400     		.2byte	0x4
 4218 036b F3       		.byte	0xf3
 4219 036c 01       		.uleb128 0x1
 4220 036d 52       		.byte	0x52
 4221 036e 9F       		.byte	0x9f
 4222 036f 00000000 		.4byte	0
 4223 0373 00000000 		.4byte	0
 4224              	.LLST15:
 4225 0377 00000000 		.4byte	.LVL38
 4226 037b 11000000 		.4byte	.LVL40-1
 4227 037f 0100     		.2byte	0x1
 4228 0381 53       		.byte	0x53
 4229 0382 11000000 		.4byte	.LVL40-1
 4230 0386 2C000000 		.4byte	.LVL47
 4231 038a 0100     		.2byte	0x1
 4232 038c 57       		.byte	0x57
 4233 038d 2C000000 		.4byte	.LVL47
 4234 0391 2E000000 		.4byte	.LFE37
 4235 0395 0400     		.2byte	0x4
 4236 0397 F3       		.byte	0xf3
 4237 0398 01       		.uleb128 0x1
 4238 0399 53       		.byte	0x53
 4239 039a 9F       		.byte	0x9f
 4240 039b 00000000 		.4byte	0
 4241 039f 00000000 		.4byte	0
 4242              	.LLST16:
 4243 03a3 14000000 		.4byte	.LVL41
 4244 03a7 24000000 		.4byte	.LVL42
 4245 03ab 0100     		.2byte	0x1
 4246 03ad 50       		.byte	0x50
 4247 03ae 24000000 		.4byte	.LVL42
 4248 03b2 2C000000 		.4byte	.LVL44
 4249 03b6 0100     		.2byte	0x1
 4250 03b8 54       		.byte	0x54
 4251 03b9 2C000000 		.4byte	.LVL44
 4252 03bd 2E000000 		.4byte	.LFE37
 4253 03c1 0100     		.2byte	0x1
 4254 03c3 50       		.byte	0x50
 4255 03c4 00000000 		.4byte	0
 4256 03c8 00000000 		.4byte	0
 4257              	.LLST17:
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 97


 4258 03cc 00000000 		.4byte	.LVL48
 4259 03d0 14000000 		.4byte	.LVL51
 4260 03d4 0100     		.2byte	0x1
 4261 03d6 50       		.byte	0x50
 4262 03d7 14000000 		.4byte	.LVL51
 4263 03db 5A000000 		.4byte	.LVL62
 4264 03df 0100     		.2byte	0x1
 4265 03e1 54       		.byte	0x54
 4266 03e2 5A000000 		.4byte	.LVL62
 4267 03e6 60000000 		.4byte	.LFE39
 4268 03ea 0400     		.2byte	0x4
 4269 03ec F3       		.byte	0xf3
 4270 03ed 01       		.uleb128 0x1
 4271 03ee 50       		.byte	0x50
 4272 03ef 9F       		.byte	0x9f
 4273 03f0 00000000 		.4byte	0
 4274 03f4 00000000 		.4byte	0
 4275              	.LLST18:
 4276 03f8 00000000 		.4byte	.LVL48
 4277 03fc 25000000 		.4byte	.LVL52-1
 4278 0400 0100     		.2byte	0x1
 4279 0402 51       		.byte	0x51
 4280 0403 25000000 		.4byte	.LVL52-1
 4281 0407 4A000000 		.4byte	.LVL56
 4282 040b 0400     		.2byte	0x4
 4283 040d F3       		.byte	0xf3
 4284 040e 01       		.uleb128 0x1
 4285 040f 51       		.byte	0x51
 4286 0410 9F       		.byte	0x9f
 4287 0411 4A000000 		.4byte	.LVL56
 4288 0415 50000000 		.4byte	.LVL58
 4289 0419 0100     		.2byte	0x1
 4290 041b 51       		.byte	0x51
 4291 041c 50000000 		.4byte	.LVL58
 4292 0420 53000000 		.4byte	.LVL59-1
 4293 0424 0200     		.2byte	0x2
 4294 0426 71       		.byte	0x71
 4295 0427 00       		.sleb128 0
 4296 0428 53000000 		.4byte	.LVL59-1
 4297 042c 56000000 		.4byte	.LVL60
 4298 0430 0400     		.2byte	0x4
 4299 0432 F3       		.byte	0xf3
 4300 0433 01       		.uleb128 0x1
 4301 0434 51       		.byte	0x51
 4302 0435 9F       		.byte	0x9f
 4303 0436 56000000 		.4byte	.LVL60
 4304 043a 58000000 		.4byte	.LVL61
 4305 043e 0100     		.2byte	0x1
 4306 0440 51       		.byte	0x51
 4307 0441 58000000 		.4byte	.LVL61
 4308 0445 60000000 		.4byte	.LFE39
 4309 0449 0400     		.2byte	0x4
 4310 044b F3       		.byte	0xf3
 4311 044c 01       		.uleb128 0x1
 4312 044d 51       		.byte	0x51
 4313 044e 9F       		.byte	0x9f
 4314 044f 00000000 		.4byte	0
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 98


 4315 0453 00000000 		.4byte	0
 4316              	.LLST19:
 4317 0457 00000000 		.4byte	.LVL48
 4318 045b 25000000 		.4byte	.LVL52-1
 4319 045f 0100     		.2byte	0x1
 4320 0461 52       		.byte	0x52
 4321 0462 25000000 		.4byte	.LVL52-1
 4322 0466 4A000000 		.4byte	.LVL56
 4323 046a 0400     		.2byte	0x4
 4324 046c F3       		.byte	0xf3
 4325 046d 01       		.uleb128 0x1
 4326 046e 52       		.byte	0x52
 4327 046f 9F       		.byte	0x9f
 4328 0470 4A000000 		.4byte	.LVL56
 4329 0474 4E000000 		.4byte	.LVL57
 4330 0478 0100     		.2byte	0x1
 4331 047a 52       		.byte	0x52
 4332 047b 4E000000 		.4byte	.LVL57
 4333 047f 53000000 		.4byte	.LVL59-1
 4334 0483 0200     		.2byte	0x2
 4335 0485 91       		.byte	0x91
 4336 0486 68       		.sleb128 -24
 4337 0487 53000000 		.4byte	.LVL59-1
 4338 048b 56000000 		.4byte	.LVL60
 4339 048f 0400     		.2byte	0x4
 4340 0491 F3       		.byte	0xf3
 4341 0492 01       		.uleb128 0x1
 4342 0493 52       		.byte	0x52
 4343 0494 9F       		.byte	0x9f
 4344 0495 56000000 		.4byte	.LVL60
 4345 0499 58000000 		.4byte	.LVL61
 4346 049d 0100     		.2byte	0x1
 4347 049f 52       		.byte	0x52
 4348 04a0 58000000 		.4byte	.LVL61
 4349 04a4 60000000 		.4byte	.LFE39
 4350 04a8 0400     		.2byte	0x4
 4351 04aa F3       		.byte	0xf3
 4352 04ab 01       		.uleb128 0x1
 4353 04ac 52       		.byte	0x52
 4354 04ad 9F       		.byte	0x9f
 4355 04ae 00000000 		.4byte	0
 4356 04b2 00000000 		.4byte	0
 4357              	.LLST20:
 4358 04b6 00000000 		.4byte	.LVL48
 4359 04ba 12000000 		.4byte	.LVL50
 4360 04be 0100     		.2byte	0x1
 4361 04c0 53       		.byte	0x53
 4362 04c1 12000000 		.4byte	.LVL50
 4363 04c5 5A000000 		.4byte	.LVL63
 4364 04c9 0100     		.2byte	0x1
 4365 04cb 55       		.byte	0x55
 4366 04cc 5A000000 		.4byte	.LVL63
 4367 04d0 60000000 		.4byte	.LFE39
 4368 04d4 0400     		.2byte	0x4
 4369 04d6 F3       		.byte	0xf3
 4370 04d7 01       		.uleb128 0x1
 4371 04d8 53       		.byte	0x53
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 99


 4372 04d9 9F       		.byte	0x9f
 4373 04da 00000000 		.4byte	0
 4374 04de 00000000 		.4byte	0
 4375              	.LLST21:
 4376 04e2 08000000 		.4byte	.LVL49
 4377 04e6 38000000 		.4byte	.LVL53
 4378 04ea 0200     		.2byte	0x2
 4379 04ec 30       		.byte	0x30
 4380 04ed 9F       		.byte	0x9f
 4381 04ee 38000000 		.4byte	.LVL53
 4382 04f2 3A000000 		.4byte	.LVL54
 4383 04f6 0100     		.2byte	0x1
 4384 04f8 50       		.byte	0x50
 4385 04f9 3A000000 		.4byte	.LVL54
 4386 04fd 48000000 		.4byte	.LVL55
 4387 0501 0200     		.2byte	0x2
 4388 0503 30       		.byte	0x30
 4389 0504 9F       		.byte	0x9f
 4390 0505 48000000 		.4byte	.LVL55
 4391 0509 4A000000 		.4byte	.LVL56
 4392 050d 0100     		.2byte	0x1
 4393 050f 50       		.byte	0x50
 4394 0510 4A000000 		.4byte	.LVL56
 4395 0514 54000000 		.4byte	.LVL59
 4396 0518 0200     		.2byte	0x2
 4397 051a 30       		.byte	0x30
 4398 051b 9F       		.byte	0x9f
 4399 051c 54000000 		.4byte	.LVL59
 4400 0520 56000000 		.4byte	.LVL60
 4401 0524 0100     		.2byte	0x1
 4402 0526 50       		.byte	0x50
 4403 0527 56000000 		.4byte	.LVL60
 4404 052b 58000000 		.4byte	.LVL61
 4405 052f 0200     		.2byte	0x2
 4406 0531 30       		.byte	0x30
 4407 0532 9F       		.byte	0x9f
 4408 0533 58000000 		.4byte	.LVL61
 4409 0537 60000000 		.4byte	.LFE39
 4410 053b 0100     		.2byte	0x1
 4411 053d 50       		.byte	0x50
 4412 053e 00000000 		.4byte	0
 4413 0542 00000000 		.4byte	0
 4414              	.LLST22:
 4415 0546 0A000000 		.4byte	.LVL64
 4416 054a 4E000000 		.4byte	.LVL75
 4417 054e 0100     		.2byte	0x1
 4418 0550 56       		.byte	0x56
 4419 0551 00000000 		.4byte	0
 4420 0555 00000000 		.4byte	0
 4421              	.LLST23:
 4422 0559 24000000 		.4byte	.LVL68
 4423 055d 2E000000 		.4byte	.LVL69
 4424 0561 0100     		.2byte	0x1
 4425 0563 53       		.byte	0x53
 4426 0564 2E000000 		.4byte	.LVL69
 4427 0568 35000000 		.4byte	.LVL70-1
 4428 056c 0200     		.2byte	0x2
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 100


 4429 056e 75       		.byte	0x75
 4430 056f 00       		.sleb128 0
 4431 0570 38000000 		.4byte	.LVL71
 4432 0574 3A000000 		.4byte	.LVL72
 4433 0578 0100     		.2byte	0x1
 4434 057a 53       		.byte	0x53
 4435 057b 3A000000 		.4byte	.LVL72
 4436 057f 3C000000 		.4byte	.LVL73
 4437 0583 0700     		.2byte	0x7
 4438 0585 76       		.byte	0x76
 4439 0586 00       		.sleb128 0
 4440 0587 74       		.byte	0x74
 4441 0588 18       		.sleb128 24
 4442 0589 06       		.byte	0x6
 4443 058a 22       		.byte	0x22
 4444 058b 9F       		.byte	0x9f
 4445 058c 00000000 		.4byte	0
 4446 0590 00000000 		.4byte	0
 4447              	.LLST24:
 4448 0594 0C000000 		.4byte	.LVL65
 4449 0598 4E000000 		.4byte	.LVL75
 4450 059c 0100     		.2byte	0x1
 4451 059e 54       		.byte	0x54
 4452 059f 00000000 		.4byte	0
 4453 05a3 00000000 		.4byte	0
 4454              	.LLST25:
 4455 05a7 46000000 		.4byte	.LVL74
 4456 05ab 4E000000 		.4byte	.LVL75
 4457 05af 0100     		.2byte	0x1
 4458 05b1 50       		.byte	0x50
 4459 05b2 00000000 		.4byte	0
 4460 05b6 00000000 		.4byte	0
 4461              	.LLST26:
 4462 05ba 00000000 		.4byte	.LVL77
 4463 05be 07000000 		.4byte	.LVL78-1
 4464 05c2 0100     		.2byte	0x1
 4465 05c4 50       		.byte	0x50
 4466 05c5 07000000 		.4byte	.LVL78-1
 4467 05c9 26000000 		.4byte	.LVL84
 4468 05cd 0100     		.2byte	0x1
 4469 05cf 55       		.byte	0x55
 4470 05d0 26000000 		.4byte	.LVL84
 4471 05d4 2C000000 		.4byte	.LFE48
 4472 05d8 0400     		.2byte	0x4
 4473 05da F3       		.byte	0xf3
 4474 05db 01       		.uleb128 0x1
 4475 05dc 50       		.byte	0x50
 4476 05dd 9F       		.byte	0x9f
 4477 05de 00000000 		.4byte	0
 4478 05e2 00000000 		.4byte	0
 4479              	.LLST27:
 4480 05e6 0A000000 		.4byte	.LVL79
 4481 05ea 15000000 		.4byte	.LVL80-1
 4482 05ee 0100     		.2byte	0x1
 4483 05f0 50       		.byte	0x50
 4484 05f1 15000000 		.4byte	.LVL80-1
 4485 05f5 1C000000 		.4byte	.LVL81
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 101


 4486 05f9 0100     		.2byte	0x1
 4487 05fb 54       		.byte	0x54
 4488 05fc 1C000000 		.4byte	.LVL81
 4489 0600 20000000 		.4byte	.LVL82
 4490 0604 0100     		.2byte	0x1
 4491 0606 50       		.byte	0x50
 4492 0607 20000000 		.4byte	.LVL82
 4493 060b 26000000 		.4byte	.LVL83
 4494 060f 0100     		.2byte	0x1
 4495 0611 54       		.byte	0x54
 4496 0612 26000000 		.4byte	.LVL83
 4497 0616 2C000000 		.4byte	.LFE48
 4498 061a 0100     		.2byte	0x1
 4499 061c 50       		.byte	0x50
 4500 061d 00000000 		.4byte	0
 4501 0621 00000000 		.4byte	0
 4502              	.LLST28:
 4503 0625 00000000 		.4byte	.LVL85
 4504 0629 12000000 		.4byte	.LVL87
 4505 062d 0100     		.2byte	0x1
 4506 062f 50       		.byte	0x50
 4507 0630 12000000 		.4byte	.LVL87
 4508 0634 4C000000 		.4byte	.LVL94
 4509 0638 0100     		.2byte	0x1
 4510 063a 55       		.byte	0x55
 4511 063b 4C000000 		.4byte	.LVL94
 4512 063f 54000000 		.4byte	.LFE44
 4513 0643 0400     		.2byte	0x4
 4514 0645 F3       		.byte	0xf3
 4515 0646 01       		.uleb128 0x1
 4516 0647 50       		.byte	0x50
 4517 0648 9F       		.byte	0x9f
 4518 0649 00000000 		.4byte	0
 4519 064d 00000000 		.4byte	0
 4520              	.LLST29:
 4521 0651 00000000 		.4byte	.LVL85
 4522 0655 15000000 		.4byte	.LVL88-1
 4523 0659 0100     		.2byte	0x1
 4524 065b 51       		.byte	0x51
 4525 065c 15000000 		.4byte	.LVL88-1
 4526 0660 4C000000 		.4byte	.LVL95
 4527 0664 0100     		.2byte	0x1
 4528 0666 56       		.byte	0x56
 4529 0667 4C000000 		.4byte	.LVL95
 4530 066b 54000000 		.4byte	.LFE44
 4531 066f 0400     		.2byte	0x4
 4532 0671 F3       		.byte	0xf3
 4533 0672 01       		.uleb128 0x1
 4534 0673 51       		.byte	0x51
 4535 0674 9F       		.byte	0x9f
 4536 0675 00000000 		.4byte	0
 4537 0679 00000000 		.4byte	0
 4538              	.LLST30:
 4539 067d 3C000000 		.4byte	.LVL90
 4540 0681 44000000 		.4byte	.LVL91
 4541 0685 0100     		.2byte	0x1
 4542 0687 50       		.byte	0x50
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 102


 4543 0688 00000000 		.4byte	0
 4544 068c 00000000 		.4byte	0
 4545              	.LLST31:
 4546 0690 10000000 		.4byte	.LVL86
 4547 0694 4C000000 		.4byte	.LVL93
 4548 0698 0100     		.2byte	0x1
 4549 069a 54       		.byte	0x54
 4550 069b 00000000 		.4byte	0
 4551 069f 00000000 		.4byte	0
 4552              	.LLST32:
 4553 06a3 00000000 		.4byte	.LVL96
 4554 06a7 0B000000 		.4byte	.LVL97-1
 4555 06ab 0100     		.2byte	0x1
 4556 06ad 50       		.byte	0x50
 4557 06ae 0B000000 		.4byte	.LVL97-1
 4558 06b2 60000000 		.4byte	.LVL112
 4559 06b6 0100     		.2byte	0x1
 4560 06b8 55       		.byte	0x55
 4561 06b9 60000000 		.4byte	.LVL112
 4562 06bd 68000000 		.4byte	.LFE46
 4563 06c1 0400     		.2byte	0x4
 4564 06c3 F3       		.byte	0xf3
 4565 06c4 01       		.uleb128 0x1
 4566 06c5 50       		.byte	0x50
 4567 06c6 9F       		.byte	0x9f
 4568 06c7 00000000 		.4byte	0
 4569 06cb 00000000 		.4byte	0
 4570              	.LLST33:
 4571 06cf 00000000 		.4byte	.LVL96
 4572 06d3 0B000000 		.4byte	.LVL97-1
 4573 06d7 0100     		.2byte	0x1
 4574 06d9 51       		.byte	0x51
 4575 06da 0B000000 		.4byte	.LVL97-1
 4576 06de 3A000000 		.4byte	.LVL103
 4577 06e2 0100     		.2byte	0x1
 4578 06e4 54       		.byte	0x54
 4579 06e5 3A000000 		.4byte	.LVL103
 4580 06e9 40000000 		.4byte	.LVL104
 4581 06ed 0400     		.2byte	0x4
 4582 06ef F3       		.byte	0xf3
 4583 06f0 01       		.uleb128 0x1
 4584 06f1 51       		.byte	0x51
 4585 06f2 9F       		.byte	0x9f
 4586 06f3 40000000 		.4byte	.LVL104
 4587 06f7 60000000 		.4byte	.LVL111
 4588 06fb 0100     		.2byte	0x1
 4589 06fd 54       		.byte	0x54
 4590 06fe 00000000 		.4byte	0
 4591 0702 00000000 		.4byte	0
 4592              	.LLST34:
 4593 0706 14000000 		.4byte	.LVL99
 4594 070a 25000000 		.4byte	.LVL100-1
 4595 070e 0100     		.2byte	0x1
 4596 0710 50       		.byte	0x50
 4597 0711 25000000 		.4byte	.LVL100-1
 4598 0715 30000000 		.4byte	.LVL102
 4599 0719 0100     		.2byte	0x1
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 103


 4600 071b 56       		.byte	0x56
 4601 071c 30000000 		.4byte	.LVL102
 4602 0720 46000000 		.4byte	.LVL105
 4603 0724 0100     		.2byte	0x1
 4604 0726 50       		.byte	0x50
 4605 0727 46000000 		.4byte	.LVL105
 4606 072b 5A000000 		.4byte	.LVL109
 4607 072f 0100     		.2byte	0x1
 4608 0731 56       		.byte	0x56
 4609 0732 5A000000 		.4byte	.LVL109
 4610 0736 5D000000 		.4byte	.LVL110-1
 4611 073a 0100     		.2byte	0x1
 4612 073c 50       		.byte	0x50
 4613 073d 5D000000 		.4byte	.LVL110-1
 4614 0741 60000000 		.4byte	.LVL113
 4615 0745 0100     		.2byte	0x1
 4616 0747 56       		.byte	0x56
 4617 0748 00000000 		.4byte	0
 4618 074c 00000000 		.4byte	0
 4619              	.LLST35:
 4620 0750 0E000000 		.4byte	.LVL114
 4621 0754 90000000 		.4byte	.LVL126
 4622 0758 0100     		.2byte	0x1
 4623 075a 54       		.byte	0x54
 4624 075b 00000000 		.4byte	0
 4625 075f 00000000 		.4byte	0
 4626              	.LLST36:
 4627 0763 68000000 		.4byte	.LVL120
 4628 0767 70000000 		.4byte	.LVL121
 4629 076b 0100     		.2byte	0x1
 4630 076d 50       		.byte	0x50
 4631 076e 00000000 		.4byte	0
 4632 0772 00000000 		.4byte	0
 4633              	.LLST37:
 4634 0776 20000000 		.4byte	.LVL116
 4635 077a 3E000000 		.4byte	.LVL117
 4636 077e 0100     		.2byte	0x1
 4637 0780 50       		.byte	0x50
 4638 0781 3E000000 		.4byte	.LVL117
 4639 0785 41000000 		.4byte	.LVL118-1
 4640 0789 0100     		.2byte	0x1
 4641 078b 52       		.byte	0x52
 4642 078c 70000000 		.4byte	.LVL121
 4643 0790 84000000 		.4byte	.LVL122
 4644 0794 0100     		.2byte	0x1
 4645 0796 50       		.byte	0x50
 4646 0797 84000000 		.4byte	.LVL122
 4647 079b 87000000 		.4byte	.LVL123-1
 4648 079f 0100     		.2byte	0x1
 4649 07a1 52       		.byte	0x52
 4650 07a2 8A000000 		.4byte	.LVL124
 4651 07a6 8C000000 		.4byte	.LVL125
 4652 07aa 0100     		.2byte	0x1
 4653 07ac 50       		.byte	0x50
 4654 07ad 00000000 		.4byte	0
 4655 07b1 00000000 		.4byte	0
 4656              	.LLST38:
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 104


 4657 07b5 00000000 		.4byte	.LVL128
 4658 07b9 04000000 		.4byte	.LVL129
 4659 07bd 0100     		.2byte	0x1
 4660 07bf 50       		.byte	0x50
 4661 07c0 04000000 		.4byte	.LVL129
 4662 07c4 16000000 		.4byte	.LFE45
 4663 07c8 0400     		.2byte	0x4
 4664 07ca F3       		.byte	0xf3
 4665 07cb 01       		.uleb128 0x1
 4666 07cc 50       		.byte	0x50
 4667 07cd 9F       		.byte	0x9f
 4668 07ce 00000000 		.4byte	0
 4669 07d2 00000000 		.4byte	0
 4670              	.LLST39:
 4671 07d6 0A000000 		.4byte	.LVL130
 4672 07da 0F000000 		.4byte	.LVL131-1
 4673 07de 0100     		.2byte	0x1
 4674 07e0 50       		.byte	0x50
 4675 07e1 00000000 		.4byte	0
 4676 07e5 00000000 		.4byte	0
 4677              	.LLST40:
 4678 07e9 00000000 		.4byte	.LVL133
 4679 07ed 0A000000 		.4byte	.LVL134
 4680 07f1 0100     		.2byte	0x1
 4681 07f3 50       		.byte	0x50
 4682 07f4 0A000000 		.4byte	.LVL134
 4683 07f8 0C000000 		.4byte	.LFE41
 4684 07fc 0400     		.2byte	0x4
 4685 07fe F3       		.byte	0xf3
 4686 07ff 01       		.uleb128 0x1
 4687 0800 50       		.byte	0x50
 4688 0801 9F       		.byte	0x9f
 4689 0802 00000000 		.4byte	0
 4690 0806 00000000 		.4byte	0
 4691              	.LLST41:
 4692 080a 00000000 		.4byte	.LVL133
 4693 080e 0A000000 		.4byte	.LVL134
 4694 0812 0100     		.2byte	0x1
 4695 0814 50       		.byte	0x50
 4696 0815 0A000000 		.4byte	.LVL134
 4697 0819 0C000000 		.4byte	.LFE41
 4698 081d 0400     		.2byte	0x4
 4699 081f F3       		.byte	0xf3
 4700 0820 01       		.uleb128 0x1
 4701 0821 50       		.byte	0x50
 4702 0822 9F       		.byte	0x9f
 4703 0823 00000000 		.4byte	0
 4704 0827 00000000 		.4byte	0
 4705              	.LLST42:
 4706 082b 00000000 		.4byte	.LVL135
 4707 082f 0A000000 		.4byte	.LVL136
 4708 0833 0100     		.2byte	0x1
 4709 0835 50       		.byte	0x50
 4710 0836 0A000000 		.4byte	.LVL136
 4711 083a 0C000000 		.4byte	.LFE42
 4712 083e 0400     		.2byte	0x4
 4713 0840 F3       		.byte	0xf3
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 105


 4714 0841 01       		.uleb128 0x1
 4715 0842 50       		.byte	0x50
 4716 0843 9F       		.byte	0x9f
 4717 0844 00000000 		.4byte	0
 4718 0848 00000000 		.4byte	0
 4719              	.LLST43:
 4720 084c 00000000 		.4byte	.LVL135
 4721 0850 0A000000 		.4byte	.LVL136
 4722 0854 0100     		.2byte	0x1
 4723 0856 50       		.byte	0x50
 4724 0857 0A000000 		.4byte	.LVL136
 4725 085b 0C000000 		.4byte	.LFE42
 4726 085f 0400     		.2byte	0x4
 4727 0861 F3       		.byte	0xf3
 4728 0862 01       		.uleb128 0x1
 4729 0863 50       		.byte	0x50
 4730 0864 9F       		.byte	0x9f
 4731 0865 00000000 		.4byte	0
 4732 0869 00000000 		.4byte	0
 4733              	.LLST44:
 4734 086d 00000000 		.4byte	.LVL137
 4735 0871 0A000000 		.4byte	.LVL138
 4736 0875 0100     		.2byte	0x1
 4737 0877 50       		.byte	0x50
 4738 0878 0A000000 		.4byte	.LVL138
 4739 087c 0C000000 		.4byte	.LFE43
 4740 0880 0400     		.2byte	0x4
 4741 0882 F3       		.byte	0xf3
 4742 0883 01       		.uleb128 0x1
 4743 0884 50       		.byte	0x50
 4744 0885 9F       		.byte	0x9f
 4745 0886 00000000 		.4byte	0
 4746 088a 00000000 		.4byte	0
 4747              	.LLST45:
 4748 088e 00000000 		.4byte	.LVL137
 4749 0892 0A000000 		.4byte	.LVL138
 4750 0896 0100     		.2byte	0x1
 4751 0898 50       		.byte	0x50
 4752 0899 0A000000 		.4byte	.LVL138
 4753 089d 0C000000 		.4byte	.LFE43
 4754 08a1 0400     		.2byte	0x4
 4755 08a3 F3       		.byte	0xf3
 4756 08a4 01       		.uleb128 0x1
 4757 08a5 50       		.byte	0x50
 4758 08a6 9F       		.byte	0x9f
 4759 08a7 00000000 		.4byte	0
 4760 08ab 00000000 		.4byte	0
 4761              	.LLST46:
 4762 08af 00000000 		.4byte	.LVL139
 4763 08b3 0D000000 		.4byte	.LVL141-1
 4764 08b7 0100     		.2byte	0x1
 4765 08b9 50       		.byte	0x50
 4766 08ba 0D000000 		.4byte	.LVL141-1
 4767 08be 10000000 		.4byte	.LVL142
 4768 08c2 0100     		.2byte	0x1
 4769 08c4 54       		.byte	0x54
 4770 08c5 10000000 		.4byte	.LVL142
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 106


 4771 08c9 1E000000 		.4byte	.LFE53
 4772 08cd 0400     		.2byte	0x4
 4773 08cf F3       		.byte	0xf3
 4774 08d0 01       		.uleb128 0x1
 4775 08d1 50       		.byte	0x50
 4776 08d2 9F       		.byte	0x9f
 4777 08d3 00000000 		.4byte	0
 4778 08d7 00000000 		.4byte	0
 4779              	.LLST47:
 4780 08db 16000000 		.4byte	.LVL143
 4781 08df 1C000000 		.4byte	.LVL145
 4782 08e3 0100     		.2byte	0x1
 4783 08e5 54       		.byte	0x54
 4784 08e6 1C000000 		.4byte	.LVL145
 4785 08ea 1E000000 		.4byte	.LFE53
 4786 08ee 0100     		.2byte	0x1
 4787 08f0 50       		.byte	0x50
 4788 08f1 00000000 		.4byte	0
 4789 08f5 00000000 		.4byte	0
 4790              	.LLST48:
 4791 08f9 04000000 		.4byte	.LVL140
 4792 08fd 0D000000 		.4byte	.LVL141-1
 4793 0901 0100     		.2byte	0x1
 4794 0903 50       		.byte	0x50
 4795 0904 0D000000 		.4byte	.LVL141-1
 4796 0908 10000000 		.4byte	.LVL142
 4797 090c 0100     		.2byte	0x1
 4798 090e 54       		.byte	0x54
 4799 090f 10000000 		.4byte	.LVL142
 4800 0913 1E000000 		.4byte	.LFE53
 4801 0917 0400     		.2byte	0x4
 4802 0919 F3       		.byte	0xf3
 4803 091a 01       		.uleb128 0x1
 4804 091b 50       		.byte	0x50
 4805 091c 9F       		.byte	0x9f
 4806 091d 00000000 		.4byte	0
 4807 0921 00000000 		.4byte	0
 4808              	.LLST49:
 4809 0925 00000000 		.4byte	.LVL146
 4810 0929 0D000000 		.4byte	.LVL148-1
 4811 092d 0100     		.2byte	0x1
 4812 092f 50       		.byte	0x50
 4813 0930 0D000000 		.4byte	.LVL148-1
 4814 0934 10000000 		.4byte	.LVL149
 4815 0938 0100     		.2byte	0x1
 4816 093a 54       		.byte	0x54
 4817 093b 10000000 		.4byte	.LVL149
 4818 093f 18000000 		.4byte	.LFE54
 4819 0943 0400     		.2byte	0x4
 4820 0945 F3       		.byte	0xf3
 4821 0946 01       		.uleb128 0x1
 4822 0947 50       		.byte	0x50
 4823 0948 9F       		.byte	0x9f
 4824 0949 00000000 		.4byte	0
 4825 094d 00000000 		.4byte	0
 4826              	.LLST50:
 4827 0951 04000000 		.4byte	.LVL147
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 107


 4828 0955 0D000000 		.4byte	.LVL148-1
 4829 0959 0100     		.2byte	0x1
 4830 095b 50       		.byte	0x50
 4831 095c 0D000000 		.4byte	.LVL148-1
 4832 0960 10000000 		.4byte	.LVL149
 4833 0964 0100     		.2byte	0x1
 4834 0966 54       		.byte	0x54
 4835 0967 10000000 		.4byte	.LVL149
 4836 096b 18000000 		.4byte	.LFE54
 4837 096f 0400     		.2byte	0x4
 4838 0971 F3       		.byte	0xf3
 4839 0972 01       		.uleb128 0x1
 4840 0973 50       		.byte	0x50
 4841 0974 9F       		.byte	0x9f
 4842 0975 00000000 		.4byte	0
 4843 0979 00000000 		.4byte	0
 4844              	.LLST51:
 4845 097d 10000000 		.4byte	.LVL149
 4846 0981 16000000 		.4byte	.LVL151
 4847 0985 0100     		.2byte	0x1
 4848 0987 54       		.byte	0x54
 4849 0988 16000000 		.4byte	.LVL151
 4850 098c 18000000 		.4byte	.LFE54
 4851 0990 0100     		.2byte	0x1
 4852 0992 50       		.byte	0x50
 4853 0993 00000000 		.4byte	0
 4854 0997 00000000 		.4byte	0
 4855              	.LLST52:
 4856 099b 00000000 		.4byte	.LVL152
 4857 099f 11000000 		.4byte	.LVL154-1
 4858 09a3 0100     		.2byte	0x1
 4859 09a5 50       		.byte	0x50
 4860 09a6 11000000 		.4byte	.LVL154-1
 4861 09aa 18000000 		.4byte	.LVL156
 4862 09ae 0100     		.2byte	0x1
 4863 09b0 54       		.byte	0x54
 4864 09b1 18000000 		.4byte	.LVL156
 4865 09b5 1A000000 		.4byte	.LFE55
 4866 09b9 0400     		.2byte	0x4
 4867 09bb F3       		.byte	0xf3
 4868 09bc 01       		.uleb128 0x1
 4869 09bd 50       		.byte	0x50
 4870 09be 9F       		.byte	0x9f
 4871 09bf 00000000 		.4byte	0
 4872 09c3 00000000 		.4byte	0
 4873              	.LLST53:
 4874 09c7 00000000 		.4byte	.LVL152
 4875 09cb 11000000 		.4byte	.LVL154-1
 4876 09cf 0100     		.2byte	0x1
 4877 09d1 51       		.byte	0x51
 4878 09d2 11000000 		.4byte	.LVL154-1
 4879 09d6 18000000 		.4byte	.LVL157
 4880 09da 0100     		.2byte	0x1
 4881 09dc 55       		.byte	0x55
 4882 09dd 18000000 		.4byte	.LVL157
 4883 09e1 1A000000 		.4byte	.LFE55
 4884 09e5 0400     		.2byte	0x4
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 108


 4885 09e7 F3       		.byte	0xf3
 4886 09e8 01       		.uleb128 0x1
 4887 09e9 51       		.byte	0x51
 4888 09ea 9F       		.byte	0x9f
 4889 09eb 00000000 		.4byte	0
 4890 09ef 00000000 		.4byte	0
 4891              	.LLST54:
 4892 09f3 06000000 		.4byte	.LVL153
 4893 09f7 11000000 		.4byte	.LVL154-1
 4894 09fb 0100     		.2byte	0x1
 4895 09fd 50       		.byte	0x50
 4896 09fe 11000000 		.4byte	.LVL154-1
 4897 0a02 18000000 		.4byte	.LVL156
 4898 0a06 0100     		.2byte	0x1
 4899 0a08 54       		.byte	0x54
 4900 0a09 18000000 		.4byte	.LVL156
 4901 0a0d 1A000000 		.4byte	.LFE55
 4902 0a11 0400     		.2byte	0x4
 4903 0a13 F3       		.byte	0xf3
 4904 0a14 01       		.uleb128 0x1
 4905 0a15 50       		.byte	0x50
 4906 0a16 9F       		.byte	0x9f
 4907 0a17 00000000 		.4byte	0
 4908 0a1b 00000000 		.4byte	0
 4909              	.LLST55:
 4910 0a1f 00000000 		.4byte	.LVL158
 4911 0a23 02000000 		.4byte	.LVL159
 4912 0a27 0100     		.2byte	0x1
 4913 0a29 50       		.byte	0x50
 4914 0a2a 02000000 		.4byte	.LVL159
 4915 0a2e 04000000 		.4byte	.LFE56
 4916 0a32 0400     		.2byte	0x4
 4917 0a34 F3       		.byte	0xf3
 4918 0a35 01       		.uleb128 0x1
 4919 0a36 50       		.byte	0x50
 4920 0a37 9F       		.byte	0x9f
 4921 0a38 00000000 		.4byte	0
 4922 0a3c 00000000 		.4byte	0
 4923              		.section	.debug_aranges,"",%progbits
 4924 0000 C4000000 		.4byte	0xc4
 4925 0004 0200     		.2byte	0x2
 4926 0006 00000000 		.4byte	.Ldebug_info0
 4927 000a 04       		.byte	0x4
 4928 000b 00       		.byte	0
 4929 000c 0000     		.2byte	0
 4930 000e 0000     		.2byte	0
 4931 0010 00000000 		.4byte	.LFB47
 4932 0014 20000000 		.4byte	.LFE47-.LFB47
 4933 0018 00000000 		.4byte	.LFB49
 4934 001c 44000000 		.4byte	.LFE49-.LFB49
 4935 0020 00000000 		.4byte	.LFB52
 4936 0024 4C000000 		.4byte	.LFE52-.LFB52
 4937 0028 00000000 		.4byte	.LFB38
 4938 002c 3A000000 		.4byte	.LFE38-.LFB38
 4939 0030 00000000 		.4byte	.LFB36
 4940 0034 44000000 		.4byte	.LFE36-.LFB36
 4941 0038 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 109


 4942 003c 2E000000 		.4byte	.LFE37-.LFB37
 4943 0040 00000000 		.4byte	.LFB39
 4944 0044 60000000 		.4byte	.LFE39-.LFB39
 4945 0048 00000000 		.4byte	.LFB51
 4946 004c 68000000 		.4byte	.LFE51-.LFB51
 4947 0050 00000000 		.4byte	.LFB48
 4948 0054 2C000000 		.4byte	.LFE48-.LFB48
 4949 0058 00000000 		.4byte	.LFB44
 4950 005c 54000000 		.4byte	.LFE44-.LFB44
 4951 0060 00000000 		.4byte	.LFB46
 4952 0064 68000000 		.4byte	.LFE46-.LFB46
 4953 0068 00000000 		.4byte	.LFB50
 4954 006c AC000000 		.4byte	.LFE50-.LFB50
 4955 0070 00000000 		.4byte	.LFB45
 4956 0074 16000000 		.4byte	.LFE45-.LFB45
 4957 0078 00000000 		.4byte	.LFB40
 4958 007c 14000000 		.4byte	.LFE40-.LFB40
 4959 0080 00000000 		.4byte	.LFB41
 4960 0084 0C000000 		.4byte	.LFE41-.LFB41
 4961 0088 00000000 		.4byte	.LFB42
 4962 008c 0C000000 		.4byte	.LFE42-.LFB42
 4963 0090 00000000 		.4byte	.LFB43
 4964 0094 0C000000 		.4byte	.LFE43-.LFB43
 4965 0098 00000000 		.4byte	.LFB53
 4966 009c 1E000000 		.4byte	.LFE53-.LFB53
 4967 00a0 00000000 		.4byte	.LFB54
 4968 00a4 18000000 		.4byte	.LFE54-.LFB54
 4969 00a8 00000000 		.4byte	.LFB55
 4970 00ac 1A000000 		.4byte	.LFE55-.LFB55
 4971 00b0 00000000 		.4byte	.LFB56
 4972 00b4 04000000 		.4byte	.LFE56-.LFB56
 4973 00b8 00000000 		.4byte	.LFB57
 4974 00bc 04000000 		.4byte	.LFE57-.LFB57
 4975 00c0 00000000 		.4byte	0
 4976 00c4 00000000 		.4byte	0
 4977              		.section	.debug_ranges,"",%progbits
 4978              	.Ldebug_ranges0:
 4979 0000 00000000 		.4byte	.LFB47
 4980 0004 20000000 		.4byte	.LFE47
 4981 0008 00000000 		.4byte	.LFB49
 4982 000c 44000000 		.4byte	.LFE49
 4983 0010 00000000 		.4byte	.LFB52
 4984 0014 4C000000 		.4byte	.LFE52
 4985 0018 00000000 		.4byte	.LFB38
 4986 001c 3A000000 		.4byte	.LFE38
 4987 0020 00000000 		.4byte	.LFB36
 4988 0024 44000000 		.4byte	.LFE36
 4989 0028 00000000 		.4byte	.LFB37
 4990 002c 2E000000 		.4byte	.LFE37
 4991 0030 00000000 		.4byte	.LFB39
 4992 0034 60000000 		.4byte	.LFE39
 4993 0038 00000000 		.4byte	.LFB51
 4994 003c 68000000 		.4byte	.LFE51
 4995 0040 00000000 		.4byte	.LFB48
 4996 0044 2C000000 		.4byte	.LFE48
 4997 0048 00000000 		.4byte	.LFB44
 4998 004c 54000000 		.4byte	.LFE44
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 110


 4999 0050 00000000 		.4byte	.LFB46
 5000 0054 68000000 		.4byte	.LFE46
 5001 0058 00000000 		.4byte	.LFB50
 5002 005c AC000000 		.4byte	.LFE50
 5003 0060 00000000 		.4byte	.LFB45
 5004 0064 16000000 		.4byte	.LFE45
 5005 0068 00000000 		.4byte	.LFB40
 5006 006c 14000000 		.4byte	.LFE40
 5007 0070 00000000 		.4byte	.LFB41
 5008 0074 0C000000 		.4byte	.LFE41
 5009 0078 00000000 		.4byte	.LFB42
 5010 007c 0C000000 		.4byte	.LFE42
 5011 0080 00000000 		.4byte	.LFB43
 5012 0084 0C000000 		.4byte	.LFE43
 5013 0088 00000000 		.4byte	.LFB53
 5014 008c 1E000000 		.4byte	.LFE53
 5015 0090 00000000 		.4byte	.LFB54
 5016 0094 18000000 		.4byte	.LFE54
 5017 0098 00000000 		.4byte	.LFB55
 5018 009c 1A000000 		.4byte	.LFE55
 5019 00a0 00000000 		.4byte	.LFB56
 5020 00a4 04000000 		.4byte	.LFE56
 5021 00a8 00000000 		.4byte	.LFB57
 5022 00ac 04000000 		.4byte	.LFE57
 5023 00b0 00000000 		.4byte	0
 5024 00b4 00000000 		.4byte	0
 5025              		.section	.debug_line,"",%progbits
 5026              	.Ldebug_line0:
 5027 0000 96040000 		.section	.debug_str,"MS",%progbits,1
 5027      0200DB01 
 5027      00000201 
 5027      FB0E0D00 
 5027      01010101 
 5028              	.LASF106:
 5029 0000 7854696D 		.ascii	"xTimerQueue\000"
 5029      65725175 
 5029      65756500 
 5030              	.LASF119:
 5031 000c 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 5031      75654765 
 5031      6E657269 
 5031      6353656E 
 5031      6446726F 
 5032              	.LASF43:
 5033 0025 75784175 		.ascii	"uxAutoReload\000"
 5033      746F5265 
 5033      6C6F6164 
 5033      00
 5034              	.LASF29:
 5035 0032 4D696E69 		.ascii	"MiniListItem_t\000"
 5035      4C697374 
 5035      4974656D 
 5035      5F7400
 5036              	.LASF74:
 5037 0041 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 5037      67686572 
 5037      5072696F 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 111


 5037      72697479 
 5037      5461736B 
 5038              	.LASF8:
 5039 005b 5F5F7569 		.ascii	"__uint8_t\000"
 5039      6E74385F 
 5039      7400
 5040              	.LASF52:
 5041 0065 54696D65 		.ascii	"TimerParameter_t\000"
 5041      72506172 
 5041      616D6574 
 5041      65725F74 
 5041      00
 5042              	.LASF82:
 5043 0076 70785469 		.ascii	"pxTimerListsWereSwitched\000"
 5043      6D65724C 
 5043      69737473 
 5043      57657265 
 5043      53776974 
 5044              	.LASF100:
 5045 008f 7654696D 		.ascii	"vTimerSetTimerID\000"
 5045      65725365 
 5045      7454696D 
 5045      65724944 
 5045      00
 5046              	.LASF41:
 5047 00a0 7854696D 		.ascii	"xTimerListItem\000"
 5047      65724C69 
 5047      73744974 
 5047      656D00
 5048              	.LASF102:
 5049 00af 78416374 		.ascii	"xActiveTimerList1\000"
 5049      69766554 
 5049      696D6572 
 5049      4C697374 
 5049      3100
 5050              	.LASF103:
 5051 00c1 78416374 		.ascii	"xActiveTimerList2\000"
 5051      69766554 
 5051      696D6572 
 5051      4C697374 
 5051      3200
 5052              	.LASF57:
 5053 00d3 70727649 		.ascii	"prvInsertTimerInActiveList\000"
 5053      6E736572 
 5053      7454696D 
 5053      6572496E 
 5053      41637469 
 5054              	.LASF33:
 5055 00ee 784C6973 		.ascii	"xListEnd\000"
 5055      74456E64 
 5055      00
 5056              	.LASF36:
 5057 00f7 51756575 		.ascii	"QueueHandle_t\000"
 5057      6548616E 
 5057      646C655F 
 5057      7400
 5058              	.LASF89:
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 112


 5059 0105 70727654 		.ascii	"prvTimerTask\000"
 5059      696D6572 
 5059      5461736B 
 5059      00
 5060              	.LASF104:
 5061 0112 70784375 		.ascii	"pxCurrentTimerList\000"
 5061      7272656E 
 5061      7454696D 
 5061      65724C69 
 5061      737400
 5062              	.LASF1:
 5063 0125 6C6F6E67 		.ascii	"long long int\000"
 5063      206C6F6E 
 5063      6720696E 
 5063      7400
 5064              	.LASF3:
 5065 0133 7369676E 		.ascii	"signed char\000"
 5065      65642063 
 5065      68617200 
 5066              	.LASF75:
 5067 013f 78546963 		.ascii	"xTicksToWait\000"
 5067      6B73546F 
 5067      57616974 
 5067      00
 5068              	.LASF11:
 5069 014c 6C6F6E67 		.ascii	"long long unsigned int\000"
 5069      206C6F6E 
 5069      6720756E 
 5069      7369676E 
 5069      65642069 
 5070              	.LASF7:
 5071 0163 6C6F6E67 		.ascii	"long int\000"
 5071      20696E74 
 5071      00
 5072              	.LASF77:
 5073 016c 70727653 		.ascii	"prvSwitchTimerLists\000"
 5073      77697463 
 5073      6854696D 
 5073      65724C69 
 5073      73747300 
 5074              	.LASF63:
 5075 0180 7850726F 		.ascii	"xProcessTimerNow\000"
 5075      63657373 
 5075      54696D65 
 5075      724E6F77 
 5075      00
 5076              	.LASF81:
 5077 0191 70727653 		.ascii	"prvSampleTimeNow\000"
 5077      616D706C 
 5077      6554696D 
 5077      654E6F77 
 5077      00
 5078              	.LASF35:
 5079 01a2 5461736B 		.ascii	"TaskHandle_t\000"
 5079      48616E64 
 5079      6C655F74 
 5079      00
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 113


 5080              	.LASF70:
 5081 01af 7854696D 		.ascii	"xTimerGenericCommand\000"
 5081      65724765 
 5081      6E657269 
 5081      63436F6D 
 5081      6D616E64 
 5082              	.LASF17:
 5083 01c4 646F7562 		.ascii	"double\000"
 5083      6C6500
 5084              	.LASF18:
 5085 01cb 42617365 		.ascii	"BaseType_t\000"
 5085      54797065 
 5085      5F7400
 5086              	.LASF53:
 5087 01d6 746D7254 		.ascii	"tmrTimerQueueMessage\000"
 5087      696D6572 
 5087      51756575 
 5087      654D6573 
 5087      73616765 
 5088              	.LASF71:
 5089 01eb 7854696D 		.ascii	"xTimer\000"
 5089      657200
 5090              	.LASF131:
 5091 01f2 7854696D 		.ascii	"xTimerParameters\000"
 5091      65725061 
 5091      72616D65 
 5091      74657273 
 5091      00
 5092              	.LASF55:
 5093 0203 4461656D 		.ascii	"DaemonTaskMessage_t\000"
 5093      6F6E5461 
 5093      736B4D65 
 5093      73736167 
 5093      655F7400 
 5094              	.LASF98:
 5095 0217 70764E65 		.ascii	"pvNewID\000"
 5095      77494400 
 5096              	.LASF114:
 5097 021f 764C6973 		.ascii	"vListInitialiseItem\000"
 5097      74496E69 
 5097      7469616C 
 5097      69736549 
 5097      74656D00 
 5098              	.LASF47:
 5099 0233 7854494D 		.ascii	"xTIMER\000"
 5099      455200
 5100              	.LASF116:
 5101 023a 7076506F 		.ascii	"pvPortMalloc\000"
 5101      72744D61 
 5101      6C6C6F63 
 5101      00
 5102              	.LASF49:
 5103 0247 746D7254 		.ascii	"tmrTimerParameters\000"
 5103      696D6572 
 5103      50617261 
 5103      6D657465 
 5103      727300
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 114


 5104              	.LASF132:
 5105 025a 7854696D 		.ascii	"xTimerGetTimerDaemonTaskHandle\000"
 5105      65724765 
 5105      7454696D 
 5105      65724461 
 5105      656D6F6E 
 5106              	.LASF42:
 5107 0279 7854696D 		.ascii	"xTimerPeriodInTicks\000"
 5107      65725065 
 5107      72696F64 
 5107      496E5469 
 5107      636B7300 
 5108              	.LASF67:
 5109 028d 78526574 		.ascii	"xReturn\000"
 5109      75726E00 
 5110              	.LASF31:
 5111 0295 75784E75 		.ascii	"uxNumberOfItems\000"
 5111      6D626572 
 5111      4F664974 
 5111      656D7300 
 5112              	.LASF10:
 5113 02a5 6C6F6E67 		.ascii	"long unsigned int\000"
 5113      20756E73 
 5113      69676E65 
 5113      6420696E 
 5113      7400
 5114              	.LASF37:
 5115 02b7 54696D65 		.ascii	"TimerHandle_t\000"
 5115      7248616E 
 5115      646C655F 
 5115      7400
 5116              	.LASF99:
 5117 02c5 75785469 		.ascii	"uxTimerGetTimerNumber\000"
 5117      6D657247 
 5117      65745469 
 5117      6D65724E 
 5117      756D6265 
 5118              	.LASF90:
 5119 02db 70765061 		.ascii	"pvParameters\000"
 5119      72616D65 
 5119      74657273 
 5119      00
 5120              	.LASF78:
 5121 02e8 7852656C 		.ascii	"xReloadTime\000"
 5121      6F616454 
 5121      696D6500 
 5122              	.LASF40:
 5123 02f4 70635469 		.ascii	"pcTimerName\000"
 5123      6D65724E 
 5123      616D6500 
 5124              	.LASF118:
 5125 0300 78517565 		.ascii	"xQueueGenericSend\000"
 5125      75654765 
 5125      6E657269 
 5125      6353656E 
 5125      6400
 5126              	.LASF58:
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 115


 5127 0312 70784C69 		.ascii	"pxListWasEmpty\000"
 5127      73745761 
 5127      73456D70 
 5127      747900
 5128              	.LASF127:
 5129 0321 78517565 		.ascii	"xQueueReceive\000"
 5129      75655265 
 5129      63656976 
 5129      6500
 5130              	.LASF61:
 5131 032f 78436F6D 		.ascii	"xCommandTime\000"
 5131      6D616E64 
 5131      54696D65 
 5131      00
 5132              	.LASF121:
 5133 033c 78546173 		.ascii	"xTaskGetTickCount\000"
 5133      6B476574 
 5133      5469636B 
 5133      436F756E 
 5133      7400
 5134              	.LASF126:
 5135 034e 76506F72 		.ascii	"vPortFree\000"
 5135      74467265 
 5135      6500
 5136              	.LASF59:
 5137 0358 784E6578 		.ascii	"xNextExpiryTime\000"
 5137      74457870 
 5137      69727954 
 5137      696D6500 
 5138              	.LASF44:
 5139 0368 70765469 		.ascii	"pvTimerID\000"
 5139      6D657249 
 5139      4400
 5140              	.LASF12:
 5141 0372 73697A65 		.ascii	"sizetype\000"
 5141      74797065 
 5141      00
 5142              	.LASF112:
 5143 037b 76517565 		.ascii	"vQueueAddToRegistry\000"
 5143      75654164 
 5143      64546F52 
 5143      65676973 
 5143      74727900 
 5144              	.LASF115:
 5145 038f 78546173 		.ascii	"xTaskCreate\000"
 5145      6B437265 
 5145      61746500 
 5146              	.LASF130:
 5147 039b 433A5C55 		.ascii	"C:\\Users\\Phuong\\Documents\\PSoC Creator\\Dec0820"
 5147      73657273 
 5147      5C506875 
 5147      6F6E675C 
 5147      446F6375 
 5148 03c9 31385C69 		.ascii	"18\\iot-sdk-iot-dev\\PSOC6_FreeRTOS+LwIP+MbedTLS_Az"
 5148      6F742D73 
 5148      646B2D69 
 5148      6F742D64 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 116


 5148      65765C50 
 5149 03fa 7572652D 		.ascii	"ure-IOT-Hub-Demo\\PSOC6_FreeRTOS+LwIP+MbedTLS_Azure"
 5149      494F542D 
 5149      4875622D 
 5149      44656D6F 
 5149      5C50534F 
 5150 042c 2D494F54 		.ascii	"-IOT-Hub-Demo.cydsn\000"
 5150      2D487562 
 5150      2D44656D 
 5150      6F2E6379 
 5150      64736E00 
 5151              	.LASF20:
 5152 0440 5469636B 		.ascii	"TickType_t\000"
 5152      54797065 
 5152      5F7400
 5153              	.LASF56:
 5154 044b 70727647 		.ascii	"prvGetNextExpireTime\000"
 5154      65744E65 
 5154      78744578 
 5154      70697265 
 5154      54696D65 
 5155              	.LASF46:
 5156 0460 75785469 		.ascii	"uxTimerNumber\000"
 5156      6D65724E 
 5156      756D6265 
 5156      7200
 5157              	.LASF88:
 5158 046e 70727650 		.ascii	"prvProcessReceivedCommands\000"
 5158      726F6365 
 5158      73735265 
 5158      63656976 
 5158      6564436F 
 5159              	.LASF26:
 5160 0489 4C697374 		.ascii	"ListItem_t\000"
 5160      4974656D 
 5160      5F7400
 5161              	.LASF23:
 5162 0494 70785072 		.ascii	"pxPrevious\000"
 5162      6576696F 
 5162      757300
 5163              	.LASF72:
 5164 049f 78436F6D 		.ascii	"xCommandID\000"
 5164      6D616E64 
 5164      494400
 5165              	.LASF101:
 5166 04aa 7654696D 		.ascii	"vTimerSetTimerNumber\000"
 5166      65725365 
 5166      7454696D 
 5166      65724E75 
 5166      6D626572 
 5167              	.LASF73:
 5168 04bf 784F7074 		.ascii	"xOptionalValue\000"
 5168      696F6E61 
 5168      6C56616C 
 5168      756500
 5169              	.LASF16:
 5170 04ce 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 117


 5170      7400
 5171              	.LASF97:
 5172 04d4 70765265 		.ascii	"pvReturn\000"
 5172      7475726E 
 5172      00
 5173              	.LASF32:
 5174 04dd 7078496E 		.ascii	"pxIndex\000"
 5174      64657800 
 5175              	.LASF25:
 5176 04e5 7076436F 		.ascii	"pvContainer\000"
 5176      6E746169 
 5176      6E657200 
 5177              	.LASF86:
 5178 04f1 784C6973 		.ascii	"xListWasEmpty\000"
 5178      74576173 
 5178      456D7074 
 5178      7900
 5179              	.LASF50:
 5180 04ff 784D6573 		.ascii	"xMessageValue\000"
 5180      73616765 
 5180      56616C75 
 5180      6500
 5181              	.LASF39:
 5182 050d 746D7254 		.ascii	"tmrTimerControl\000"
 5182      696D6572 
 5182      436F6E74 
 5182      726F6C00 
 5183              	.LASF4:
 5184 051d 756E7369 		.ascii	"unsigned char\000"
 5184      676E6564 
 5184      20636861 
 5184      7200
 5185              	.LASF60:
 5186 052b 7854696D 		.ascii	"xTimeNow\000"
 5186      654E6F77 
 5186      00
 5187              	.LASF96:
 5188 0534 70765469 		.ascii	"pvTimerGetTimerID\000"
 5188      6D657247 
 5188      65745469 
 5188      6D657249 
 5188      4400
 5189              	.LASF80:
 5190 0546 78526573 		.ascii	"xResult\000"
 5190      756C7400 
 5191              	.LASF76:
 5192 054e 784D6573 		.ascii	"xMessage\000"
 5192      73616765 
 5192      00
 5193              	.LASF5:
 5194 0557 73686F72 		.ascii	"short int\000"
 5194      7420696E 
 5194      7400
 5195              	.LASF85:
 5196 0561 70727650 		.ascii	"prvProcessTimerOrBlockTask\000"
 5196      726F6365 
 5196      73735469 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 118


 5196      6D65724F 
 5196      72426C6F 
 5197              	.LASF123:
 5198 057c 78546173 		.ascii	"xTaskResumeAll\000"
 5198      6B526573 
 5198      756D6541 
 5198      6C6C00
 5199              	.LASF68:
 5200 058b 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 5200      65724372 
 5200      65617465 
 5200      54696D65 
 5200      72546173 
 5201              	.LASF111:
 5202 05a1 78517565 		.ascii	"xQueueGenericCreate\000"
 5202      75654765 
 5202      6E657269 
 5202      63437265 
 5202      61746500 
 5203              	.LASF30:
 5204 05b5 784C4953 		.ascii	"xLIST\000"
 5204      5400
 5205              	.LASF34:
 5206 05bb 4C697374 		.ascii	"List_t\000"
 5206      5F7400
 5207              	.LASF117:
 5208 05c2 78546173 		.ascii	"xTaskGetSchedulerState\000"
 5208      6B476574 
 5208      53636865 
 5208      64756C65 
 5208      72537461 
 5209              	.LASF15:
 5210 05d9 75696E74 		.ascii	"uint32_t\000"
 5210      33325F74 
 5210      00
 5211              	.LASF51:
 5212 05e2 70785469 		.ascii	"pxTimer\000"
 5212      6D657200 
 5213              	.LASF84:
 5214 05ea 70727650 		.ascii	"prvProcessExpiredTimer\000"
 5214      726F6365 
 5214      73734578 
 5214      70697265 
 5214      6454696D 
 5215              	.LASF108:
 5216 0601 764C6973 		.ascii	"vListInsert\000"
 5216      74496E73 
 5216      65727400 
 5217              	.LASF122:
 5218 060d 76546173 		.ascii	"vTaskSuspendAll\000"
 5218      6B537573 
 5218      70656E64 
 5218      416C6C00 
 5219              	.LASF128:
 5220 061d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5220      43313120 
 5220      352E342E 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 119


 5220      31203230 
 5220      31363036 
 5221 0650 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5221      20726576 
 5221      6973696F 
 5221      6E203233 
 5221      37373135 
 5222 0683 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5222      67202D66 
 5222      66756E63 
 5222      74696F6E 
 5222      2D736563 
 5223              	.LASF2:
 5224 06af 6C6F6E67 		.ascii	"long double\000"
 5224      20646F75 
 5224      626C6500 
 5225              	.LASF13:
 5226 06bb 63686172 		.ascii	"char\000"
 5226      00
 5227              	.LASF92:
 5228 06c0 7854696D 		.ascii	"xTimerGetExpiryTime\000"
 5228      65724765 
 5228      74457870 
 5228      69727954 
 5228      696D6500 
 5229              	.LASF113:
 5230 06d4 76506F72 		.ascii	"vPortExitCritical\000"
 5230      74457869 
 5230      74437269 
 5230      74696361 
 5230      6C00
 5231              	.LASF66:
 5232 06e6 70784E65 		.ascii	"pxNewTimer\000"
 5232      7754696D 
 5232      657200
 5233              	.LASF0:
 5234 06f1 756E7369 		.ascii	"unsigned int\000"
 5234      676E6564 
 5234      20696E74 
 5234      00
 5235              	.LASF91:
 5236 06fe 7854696D 		.ascii	"xTimerGetPeriod\000"
 5236      65724765 
 5236      74506572 
 5236      696F6400 
 5237              	.LASF38:
 5238 070e 54696D65 		.ascii	"TimerCallbackFunction_t\000"
 5238      7243616C 
 5238      6C626163 
 5238      6B46756E 
 5238      6374696F 
 5239              	.LASF107:
 5240 0726 7854696D 		.ascii	"xTimerTaskHandle\000"
 5240      65725461 
 5240      736B4861 
 5240      6E646C65 
 5240      00
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 120


 5241              	.LASF95:
 5242 0737 7854696D 		.ascii	"xTimerIsInActiveList\000"
 5242      65724973 
 5242      496E4163 
 5242      74697665 
 5242      4C697374 
 5243              	.LASF9:
 5244 074c 5F5F7569 		.ascii	"__uint32_t\000"
 5244      6E743332 
 5244      5F7400
 5245              	.LASF120:
 5246 0757 75784C69 		.ascii	"uxListRemove\000"
 5246      73745265 
 5246      6D6F7665 
 5246      00
 5247              	.LASF79:
 5248 0764 70785465 		.ascii	"pxTemp\000"
 5248      6D7000
 5249              	.LASF6:
 5250 076b 73686F72 		.ascii	"short unsigned int\000"
 5250      7420756E 
 5250      7369676E 
 5250      65642069 
 5250      6E7400
 5251              	.LASF69:
 5252 077e 7854696D 		.ascii	"xTimerCreate\000"
 5252      65724372 
 5252      65617465 
 5252      00
 5253              	.LASF54:
 5254 078b 784D6573 		.ascii	"xMessageID\000"
 5254      73616765 
 5254      494400
 5255              	.LASF109:
 5256 0796 76506F72 		.ascii	"vPortEnterCritical\000"
 5256      74456E74 
 5256      65724372 
 5256      69746963 
 5256      616C00
 5257              	.LASF48:
 5258 07a9 54696D65 		.ascii	"Timer_t\000"
 5258      725F7400 
 5259              	.LASF125:
 5260 07b1 76506F72 		.ascii	"vPortYield\000"
 5260      74596965 
 5260      6C6400
 5261              	.LASF28:
 5262 07bc 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 5262      495F4C49 
 5262      53545F49 
 5262      54454D00 
 5263              	.LASF24:
 5264 07cc 70764F77 		.ascii	"pvOwner\000"
 5264      6E657200 
 5265              	.LASF21:
 5266 07d4 78497465 		.ascii	"xItemValue\000"
 5266      6D56616C 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 121


 5266      756500
 5267              	.LASF45:
 5268 07df 70784361 		.ascii	"pxCallbackFunction\000"
 5268      6C6C6261 
 5268      636B4675 
 5268      6E637469 
 5268      6F6E00
 5269              	.LASF105:
 5270 07f2 70784F76 		.ascii	"pxOverflowTimerList\000"
 5270      6572666C 
 5270      6F775469 
 5270      6D65724C 
 5270      69737400 
 5271              	.LASF83:
 5272 0806 784C6173 		.ascii	"xLastTime\000"
 5272      7454696D 
 5272      6500
 5273              	.LASF14:
 5274 0810 75696E74 		.ascii	"uint8_t\000"
 5274      385F7400 
 5275              	.LASF62:
 5276 0818 784E6578 		.ascii	"xNextExpireTime\000"
 5276      74457870 
 5276      69726554 
 5276      696D6500 
 5277              	.LASF22:
 5278 0828 70784E65 		.ascii	"pxNext\000"
 5278      787400
 5279              	.LASF110:
 5280 082f 764C6973 		.ascii	"vListInitialise\000"
 5280      74496E69 
 5280      7469616C 
 5280      69736500 
 5281              	.LASF87:
 5282 083f 7854696D 		.ascii	"xTimerListsWereSwitched\000"
 5282      65724C69 
 5282      73747357 
 5282      65726553 
 5282      77697463 
 5283              	.LASF124:
 5284 0857 76517565 		.ascii	"vQueueWaitForMessageRestricted\000"
 5284      75655761 
 5284      6974466F 
 5284      724D6573 
 5284      73616765 
 5285              	.LASF65:
 5286 0876 70727649 		.ascii	"prvInitialiseNewTimer\000"
 5286      6E697469 
 5286      616C6973 
 5286      654E6577 
 5286      54696D65 
 5287              	.LASF129:
 5288 088c 536F7572 		.ascii	"Source\\FreeRTOS\\10.0.1\\Source\\timers.c\000"
 5288      63655C46 
 5288      72656552 
 5288      544F535C 
 5288      31302E30 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\ccaHdweV.s 			page 122


 5289              	.LASF27:
 5290 08b3 784C4953 		.ascii	"xLIST_ITEM\000"
 5290      545F4954 
 5290      454D00
 5291              	.LASF93:
 5292 08be 70635469 		.ascii	"pcTimerGetName\000"
 5292      6D657247 
 5292      65744E61 
 5292      6D6500
 5293              	.LASF19:
 5294 08cd 55426173 		.ascii	"UBaseType_t\000"
 5294      65547970 
 5294      655F7400 
 5295              	.LASF94:
 5296 08d9 7854696D 		.ascii	"xTimerIsTimerActive\000"
 5296      65724973 
 5296      54696D65 
 5296      72416374 
 5296      69766500 
 5297              	.LASF64:
 5298 08ed 70727643 		.ascii	"prvCheckForValidListAndQueue\000"
 5298      6865636B 
 5298      466F7256 
 5298      616C6964 
 5298      4C697374 
 5299              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
