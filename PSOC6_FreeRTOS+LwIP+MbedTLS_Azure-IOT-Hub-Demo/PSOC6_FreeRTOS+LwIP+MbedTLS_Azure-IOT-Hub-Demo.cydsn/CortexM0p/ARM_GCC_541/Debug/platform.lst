ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"platform.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.mbedtls_platform_setup,"ax",%progbits
  20              		.align	2
  21              		.global	mbedtls_platform_setup
  22              		.code	16
  23              		.thumb_func
  24              		.type	mbedtls_platform_setup, %function
  25              	mbedtls_platform_setup:
  26              	.LFB1:
  27              		.file 1 "Source\\mbedtls_open\\library\\platform.c"
   1:Source\mbedtls_open\library/platform.c **** /*
   2:Source\mbedtls_open\library/platform.c ****  *  Platform abstraction layer
   3:Source\mbedtls_open\library/platform.c ****  *
   4:Source\mbedtls_open\library/platform.c ****  *  Copyright (C) 2006-2016, ARM Limited, All Rights Reserved
   5:Source\mbedtls_open\library/platform.c ****  *  SPDX-License-Identifier: Apache-2.0
   6:Source\mbedtls_open\library/platform.c ****  *
   7:Source\mbedtls_open\library/platform.c ****  *  Licensed under the Apache License, Version 2.0 (the "License"); you may
   8:Source\mbedtls_open\library/platform.c ****  *  not use this file except in compliance with the License.
   9:Source\mbedtls_open\library/platform.c ****  *  You may obtain a copy of the License at
  10:Source\mbedtls_open\library/platform.c ****  *
  11:Source\mbedtls_open\library/platform.c ****  *  http://www.apache.org/licenses/LICENSE-2.0
  12:Source\mbedtls_open\library/platform.c ****  *
  13:Source\mbedtls_open\library/platform.c ****  *  Unless required by applicable law or agreed to in writing, software
  14:Source\mbedtls_open\library/platform.c ****  *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  15:Source\mbedtls_open\library/platform.c ****  *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  16:Source\mbedtls_open\library/platform.c ****  *  See the License for the specific language governing permissions and
  17:Source\mbedtls_open\library/platform.c ****  *  limitations under the License.
  18:Source\mbedtls_open\library/platform.c ****  *
  19:Source\mbedtls_open\library/platform.c ****  *  This file is part of mbed TLS (https://tls.mbed.org)
  20:Source\mbedtls_open\library/platform.c ****  */
  21:Source\mbedtls_open\library/platform.c **** 
  22:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_CONFIG_FILE)
  23:Source\mbedtls_open\library/platform.c **** #include "mbedtls/config.h"
  24:Source\mbedtls_open\library/platform.c **** #else
  25:Source\mbedtls_open\library/platform.c **** #include MBEDTLS_CONFIG_FILE
  26:Source\mbedtls_open\library/platform.c **** #endif
  27:Source\mbedtls_open\library/platform.c **** 
  28:Source\mbedtls_open\library/platform.c **** #if defined(MBEDTLS_PLATFORM_C)
  29:Source\mbedtls_open\library/platform.c **** 
  30:Source\mbedtls_open\library/platform.c **** #include "mbedtls/platform.h"
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 2


  31:Source\mbedtls_open\library/platform.c **** #include "mbedtls/platform_util.h"
  32:Source\mbedtls_open\library/platform.c **** 
  33:Source\mbedtls_open\library/platform.c **** #if defined(MBEDTLS_PLATFORM_MEMORY)
  34:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_PLATFORM_STD_CALLOC)
  35:Source\mbedtls_open\library/platform.c **** static void *platform_calloc_uninit( size_t n, size_t size )
  36:Source\mbedtls_open\library/platform.c **** {
  37:Source\mbedtls_open\library/platform.c ****     ((void) n);
  38:Source\mbedtls_open\library/platform.c ****     ((void) size);
  39:Source\mbedtls_open\library/platform.c ****     return( NULL );
  40:Source\mbedtls_open\library/platform.c **** }
  41:Source\mbedtls_open\library/platform.c **** 
  42:Source\mbedtls_open\library/platform.c **** #define MBEDTLS_PLATFORM_STD_CALLOC   platform_calloc_uninit
  43:Source\mbedtls_open\library/platform.c **** #endif /* !MBEDTLS_PLATFORM_STD_CALLOC */
  44:Source\mbedtls_open\library/platform.c **** 
  45:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_PLATFORM_STD_FREE)
  46:Source\mbedtls_open\library/platform.c **** static void platform_free_uninit( void *ptr )
  47:Source\mbedtls_open\library/platform.c **** {
  48:Source\mbedtls_open\library/platform.c ****     ((void) ptr);
  49:Source\mbedtls_open\library/platform.c **** }
  50:Source\mbedtls_open\library/platform.c **** 
  51:Source\mbedtls_open\library/platform.c **** #define MBEDTLS_PLATFORM_STD_FREE     platform_free_uninit
  52:Source\mbedtls_open\library/platform.c **** #endif /* !MBEDTLS_PLATFORM_STD_FREE */
  53:Source\mbedtls_open\library/platform.c **** 
  54:Source\mbedtls_open\library/platform.c **** static void * (*mbedtls_calloc_func)( size_t, size_t ) = MBEDTLS_PLATFORM_STD_CALLOC;
  55:Source\mbedtls_open\library/platform.c **** static void (*mbedtls_free_func)( void * ) = MBEDTLS_PLATFORM_STD_FREE;
  56:Source\mbedtls_open\library/platform.c **** 
  57:Source\mbedtls_open\library/platform.c **** void * mbedtls_calloc( size_t nmemb, size_t size )
  58:Source\mbedtls_open\library/platform.c **** {
  59:Source\mbedtls_open\library/platform.c ****     return (*mbedtls_calloc_func)( nmemb, size );
  60:Source\mbedtls_open\library/platform.c **** }
  61:Source\mbedtls_open\library/platform.c **** 
  62:Source\mbedtls_open\library/platform.c **** void mbedtls_free( void * ptr )
  63:Source\mbedtls_open\library/platform.c **** {
  64:Source\mbedtls_open\library/platform.c ****     (*mbedtls_free_func)( ptr );
  65:Source\mbedtls_open\library/platform.c **** }
  66:Source\mbedtls_open\library/platform.c **** 
  67:Source\mbedtls_open\library/platform.c **** int mbedtls_platform_set_calloc_free( void * (*calloc_func)( size_t, size_t ),
  68:Source\mbedtls_open\library/platform.c ****                               void (*free_func)( void * ) )
  69:Source\mbedtls_open\library/platform.c **** {
  70:Source\mbedtls_open\library/platform.c ****     mbedtls_calloc_func = calloc_func;
  71:Source\mbedtls_open\library/platform.c ****     mbedtls_free_func = free_func;
  72:Source\mbedtls_open\library/platform.c ****     return( 0 );
  73:Source\mbedtls_open\library/platform.c **** }
  74:Source\mbedtls_open\library/platform.c **** #endif /* MBEDTLS_PLATFORM_MEMORY */
  75:Source\mbedtls_open\library/platform.c **** 
  76:Source\mbedtls_open\library/platform.c **** #if defined(_WIN32)
  77:Source\mbedtls_open\library/platform.c **** #include <stdarg.h>
  78:Source\mbedtls_open\library/platform.c **** int mbedtls_platform_win32_snprintf( char *s, size_t n, const char *fmt, ... )
  79:Source\mbedtls_open\library/platform.c **** {
  80:Source\mbedtls_open\library/platform.c ****     int ret;
  81:Source\mbedtls_open\library/platform.c ****     va_list argp;
  82:Source\mbedtls_open\library/platform.c **** 
  83:Source\mbedtls_open\library/platform.c ****     /* Avoid calling the invalid parameter handler by checking ourselves */
  84:Source\mbedtls_open\library/platform.c ****     if( s == NULL || n == 0 || fmt == NULL )
  85:Source\mbedtls_open\library/platform.c ****         return( -1 );
  86:Source\mbedtls_open\library/platform.c **** 
  87:Source\mbedtls_open\library/platform.c ****     va_start( argp, fmt );
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 3


  88:Source\mbedtls_open\library/platform.c **** #if defined(_TRUNCATE) && !defined(__MINGW32__)
  89:Source\mbedtls_open\library/platform.c ****     ret = _vsnprintf_s( s, n, _TRUNCATE, fmt, argp );
  90:Source\mbedtls_open\library/platform.c **** #else
  91:Source\mbedtls_open\library/platform.c ****     ret = _vsnprintf( s, n, fmt, argp );
  92:Source\mbedtls_open\library/platform.c ****     if( ret < 0 || (size_t) ret == n )
  93:Source\mbedtls_open\library/platform.c ****     {
  94:Source\mbedtls_open\library/platform.c ****         s[n-1] = '\0';
  95:Source\mbedtls_open\library/platform.c ****         ret = -1;
  96:Source\mbedtls_open\library/platform.c ****     }
  97:Source\mbedtls_open\library/platform.c **** #endif
  98:Source\mbedtls_open\library/platform.c ****     va_end( argp );
  99:Source\mbedtls_open\library/platform.c **** 
 100:Source\mbedtls_open\library/platform.c ****     return( ret );
 101:Source\mbedtls_open\library/platform.c **** }
 102:Source\mbedtls_open\library/platform.c **** #endif
 103:Source\mbedtls_open\library/platform.c **** 
 104:Source\mbedtls_open\library/platform.c **** #if defined(MBEDTLS_PLATFORM_SNPRINTF_ALT)
 105:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_PLATFORM_STD_SNPRINTF)
 106:Source\mbedtls_open\library/platform.c **** /*
 107:Source\mbedtls_open\library/platform.c ****  * Make dummy function to prevent NULL pointer dereferences
 108:Source\mbedtls_open\library/platform.c ****  */
 109:Source\mbedtls_open\library/platform.c **** static int platform_snprintf_uninit( char * s, size_t n,
 110:Source\mbedtls_open\library/platform.c ****                                      const char * format, ... )
 111:Source\mbedtls_open\library/platform.c **** {
 112:Source\mbedtls_open\library/platform.c ****     ((void) s);
 113:Source\mbedtls_open\library/platform.c ****     ((void) n);
 114:Source\mbedtls_open\library/platform.c ****     ((void) format);
 115:Source\mbedtls_open\library/platform.c ****     return( 0 );
 116:Source\mbedtls_open\library/platform.c **** }
 117:Source\mbedtls_open\library/platform.c **** 
 118:Source\mbedtls_open\library/platform.c **** #define MBEDTLS_PLATFORM_STD_SNPRINTF    platform_snprintf_uninit
 119:Source\mbedtls_open\library/platform.c **** #endif /* !MBEDTLS_PLATFORM_STD_SNPRINTF */
 120:Source\mbedtls_open\library/platform.c **** 
 121:Source\mbedtls_open\library/platform.c **** int (*mbedtls_snprintf)( char * s, size_t n,
 122:Source\mbedtls_open\library/platform.c ****                           const char * format,
 123:Source\mbedtls_open\library/platform.c ****                           ... ) = MBEDTLS_PLATFORM_STD_SNPRINTF;
 124:Source\mbedtls_open\library/platform.c **** 
 125:Source\mbedtls_open\library/platform.c **** int mbedtls_platform_set_snprintf( int (*snprintf_func)( char * s, size_t n,
 126:Source\mbedtls_open\library/platform.c ****                                                  const char * format,
 127:Source\mbedtls_open\library/platform.c ****                                                  ... ) )
 128:Source\mbedtls_open\library/platform.c **** {
 129:Source\mbedtls_open\library/platform.c ****     mbedtls_snprintf = snprintf_func;
 130:Source\mbedtls_open\library/platform.c ****     return( 0 );
 131:Source\mbedtls_open\library/platform.c **** }
 132:Source\mbedtls_open\library/platform.c **** #endif /* MBEDTLS_PLATFORM_SNPRINTF_ALT */
 133:Source\mbedtls_open\library/platform.c **** 
 134:Source\mbedtls_open\library/platform.c **** #if defined(MBEDTLS_PLATFORM_PRINTF_ALT)
 135:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_PLATFORM_STD_PRINTF)
 136:Source\mbedtls_open\library/platform.c **** /*
 137:Source\mbedtls_open\library/platform.c ****  * Make dummy function to prevent NULL pointer dereferences
 138:Source\mbedtls_open\library/platform.c ****  */
 139:Source\mbedtls_open\library/platform.c **** static int platform_printf_uninit( const char *format, ... )
 140:Source\mbedtls_open\library/platform.c **** {
 141:Source\mbedtls_open\library/platform.c ****     ((void) format);
 142:Source\mbedtls_open\library/platform.c ****     return( 0 );
 143:Source\mbedtls_open\library/platform.c **** }
 144:Source\mbedtls_open\library/platform.c **** 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 4


 145:Source\mbedtls_open\library/platform.c **** #define MBEDTLS_PLATFORM_STD_PRINTF    platform_printf_uninit
 146:Source\mbedtls_open\library/platform.c **** #endif /* !MBEDTLS_PLATFORM_STD_PRINTF */
 147:Source\mbedtls_open\library/platform.c **** 
 148:Source\mbedtls_open\library/platform.c **** int (*mbedtls_printf)( const char *, ... ) = MBEDTLS_PLATFORM_STD_PRINTF;
 149:Source\mbedtls_open\library/platform.c **** 
 150:Source\mbedtls_open\library/platform.c **** int mbedtls_platform_set_printf( int (*printf_func)( const char *, ... ) )
 151:Source\mbedtls_open\library/platform.c **** {
 152:Source\mbedtls_open\library/platform.c ****     mbedtls_printf = printf_func;
 153:Source\mbedtls_open\library/platform.c ****     return( 0 );
 154:Source\mbedtls_open\library/platform.c **** }
 155:Source\mbedtls_open\library/platform.c **** #endif /* MBEDTLS_PLATFORM_PRINTF_ALT */
 156:Source\mbedtls_open\library/platform.c **** 
 157:Source\mbedtls_open\library/platform.c **** #if defined(MBEDTLS_PLATFORM_FPRINTF_ALT)
 158:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_PLATFORM_STD_FPRINTF)
 159:Source\mbedtls_open\library/platform.c **** /*
 160:Source\mbedtls_open\library/platform.c ****  * Make dummy function to prevent NULL pointer dereferences
 161:Source\mbedtls_open\library/platform.c ****  */
 162:Source\mbedtls_open\library/platform.c **** static int platform_fprintf_uninit( FILE *stream, const char *format, ... )
 163:Source\mbedtls_open\library/platform.c **** {
 164:Source\mbedtls_open\library/platform.c ****     ((void) stream);
 165:Source\mbedtls_open\library/platform.c ****     ((void) format);
 166:Source\mbedtls_open\library/platform.c ****     return( 0 );
 167:Source\mbedtls_open\library/platform.c **** }
 168:Source\mbedtls_open\library/platform.c **** 
 169:Source\mbedtls_open\library/platform.c **** #define MBEDTLS_PLATFORM_STD_FPRINTF   platform_fprintf_uninit
 170:Source\mbedtls_open\library/platform.c **** #endif /* !MBEDTLS_PLATFORM_STD_FPRINTF */
 171:Source\mbedtls_open\library/platform.c **** 
 172:Source\mbedtls_open\library/platform.c **** int (*mbedtls_fprintf)( FILE *, const char *, ... ) =
 173:Source\mbedtls_open\library/platform.c ****                                         MBEDTLS_PLATFORM_STD_FPRINTF;
 174:Source\mbedtls_open\library/platform.c **** 
 175:Source\mbedtls_open\library/platform.c **** int mbedtls_platform_set_fprintf( int (*fprintf_func)( FILE *, const char *, ... ) )
 176:Source\mbedtls_open\library/platform.c **** {
 177:Source\mbedtls_open\library/platform.c ****     mbedtls_fprintf = fprintf_func;
 178:Source\mbedtls_open\library/platform.c ****     return( 0 );
 179:Source\mbedtls_open\library/platform.c **** }
 180:Source\mbedtls_open\library/platform.c **** #endif /* MBEDTLS_PLATFORM_FPRINTF_ALT */
 181:Source\mbedtls_open\library/platform.c **** 
 182:Source\mbedtls_open\library/platform.c **** #if defined(MBEDTLS_PLATFORM_EXIT_ALT)
 183:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_PLATFORM_STD_EXIT)
 184:Source\mbedtls_open\library/platform.c **** /*
 185:Source\mbedtls_open\library/platform.c ****  * Make dummy function to prevent NULL pointer dereferences
 186:Source\mbedtls_open\library/platform.c ****  */
 187:Source\mbedtls_open\library/platform.c **** static void platform_exit_uninit( int status )
 188:Source\mbedtls_open\library/platform.c **** {
 189:Source\mbedtls_open\library/platform.c ****     ((void) status);
 190:Source\mbedtls_open\library/platform.c **** }
 191:Source\mbedtls_open\library/platform.c **** 
 192:Source\mbedtls_open\library/platform.c **** #define MBEDTLS_PLATFORM_STD_EXIT   platform_exit_uninit
 193:Source\mbedtls_open\library/platform.c **** #endif /* !MBEDTLS_PLATFORM_STD_EXIT */
 194:Source\mbedtls_open\library/platform.c **** 
 195:Source\mbedtls_open\library/platform.c **** void (*mbedtls_exit)( int status ) = MBEDTLS_PLATFORM_STD_EXIT;
 196:Source\mbedtls_open\library/platform.c **** 
 197:Source\mbedtls_open\library/platform.c **** int mbedtls_platform_set_exit( void (*exit_func)( int status ) )
 198:Source\mbedtls_open\library/platform.c **** {
 199:Source\mbedtls_open\library/platform.c ****     mbedtls_exit = exit_func;
 200:Source\mbedtls_open\library/platform.c ****     return( 0 );
 201:Source\mbedtls_open\library/platform.c **** }
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 5


 202:Source\mbedtls_open\library/platform.c **** #endif /* MBEDTLS_PLATFORM_EXIT_ALT */
 203:Source\mbedtls_open\library/platform.c **** 
 204:Source\mbedtls_open\library/platform.c **** #if defined(MBEDTLS_HAVE_TIME)
 205:Source\mbedtls_open\library/platform.c **** 
 206:Source\mbedtls_open\library/platform.c **** #if defined(MBEDTLS_PLATFORM_TIME_ALT)
 207:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_PLATFORM_STD_TIME)
 208:Source\mbedtls_open\library/platform.c **** /*
 209:Source\mbedtls_open\library/platform.c ****  * Make dummy function to prevent NULL pointer dereferences
 210:Source\mbedtls_open\library/platform.c ****  */
 211:Source\mbedtls_open\library/platform.c **** static mbedtls_time_t platform_time_uninit( mbedtls_time_t* timer )
 212:Source\mbedtls_open\library/platform.c **** {
 213:Source\mbedtls_open\library/platform.c ****     ((void) timer);
 214:Source\mbedtls_open\library/platform.c ****     return( 0 );
 215:Source\mbedtls_open\library/platform.c **** }
 216:Source\mbedtls_open\library/platform.c **** 
 217:Source\mbedtls_open\library/platform.c **** #define MBEDTLS_PLATFORM_STD_TIME   platform_time_uninit
 218:Source\mbedtls_open\library/platform.c **** #endif /* !MBEDTLS_PLATFORM_STD_TIME */
 219:Source\mbedtls_open\library/platform.c **** 
 220:Source\mbedtls_open\library/platform.c **** mbedtls_time_t (*mbedtls_time)( mbedtls_time_t* timer ) = MBEDTLS_PLATFORM_STD_TIME;
 221:Source\mbedtls_open\library/platform.c **** 
 222:Source\mbedtls_open\library/platform.c **** int mbedtls_platform_set_time( mbedtls_time_t (*time_func)( mbedtls_time_t* timer ) )
 223:Source\mbedtls_open\library/platform.c **** {
 224:Source\mbedtls_open\library/platform.c ****     mbedtls_time = time_func;
 225:Source\mbedtls_open\library/platform.c ****     return( 0 );
 226:Source\mbedtls_open\library/platform.c **** }
 227:Source\mbedtls_open\library/platform.c **** #endif /* MBEDTLS_PLATFORM_TIME_ALT */
 228:Source\mbedtls_open\library/platform.c **** 
 229:Source\mbedtls_open\library/platform.c **** #endif /* MBEDTLS_HAVE_TIME */
 230:Source\mbedtls_open\library/platform.c **** 
 231:Source\mbedtls_open\library/platform.c **** #if defined(MBEDTLS_ENTROPY_NV_SEED)
 232:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_PLATFORM_NO_STD_FUNCTIONS) && defined(MBEDTLS_FS_IO)
 233:Source\mbedtls_open\library/platform.c **** /* Default implementations for the platform independent seed functions use
 234:Source\mbedtls_open\library/platform.c ****  * standard libc file functions to read from and write to a pre-defined filename
 235:Source\mbedtls_open\library/platform.c ****  */
 236:Source\mbedtls_open\library/platform.c **** int mbedtls_platform_std_nv_seed_read( unsigned char *buf, size_t buf_len )
 237:Source\mbedtls_open\library/platform.c **** {
 238:Source\mbedtls_open\library/platform.c ****     FILE *file;
 239:Source\mbedtls_open\library/platform.c ****     size_t n;
 240:Source\mbedtls_open\library/platform.c **** 
 241:Source\mbedtls_open\library/platform.c ****     if( ( file = fopen( MBEDTLS_PLATFORM_STD_NV_SEED_FILE, "rb" ) ) == NULL )
 242:Source\mbedtls_open\library/platform.c ****         return( -1 );
 243:Source\mbedtls_open\library/platform.c **** 
 244:Source\mbedtls_open\library/platform.c ****     if( ( n = fread( buf, 1, buf_len, file ) ) != buf_len )
 245:Source\mbedtls_open\library/platform.c ****     {
 246:Source\mbedtls_open\library/platform.c ****         fclose( file );
 247:Source\mbedtls_open\library/platform.c ****         mbedtls_platform_zeroize( buf, buf_len );
 248:Source\mbedtls_open\library/platform.c ****         return( -1 );
 249:Source\mbedtls_open\library/platform.c ****     }
 250:Source\mbedtls_open\library/platform.c **** 
 251:Source\mbedtls_open\library/platform.c ****     fclose( file );
 252:Source\mbedtls_open\library/platform.c ****     return( (int)n );
 253:Source\mbedtls_open\library/platform.c **** }
 254:Source\mbedtls_open\library/platform.c **** 
 255:Source\mbedtls_open\library/platform.c **** int mbedtls_platform_std_nv_seed_write( unsigned char *buf, size_t buf_len )
 256:Source\mbedtls_open\library/platform.c **** {
 257:Source\mbedtls_open\library/platform.c ****     FILE *file;
 258:Source\mbedtls_open\library/platform.c ****     size_t n;
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 6


 259:Source\mbedtls_open\library/platform.c **** 
 260:Source\mbedtls_open\library/platform.c ****     if( ( file = fopen( MBEDTLS_PLATFORM_STD_NV_SEED_FILE, "w" ) ) == NULL )
 261:Source\mbedtls_open\library/platform.c ****         return -1;
 262:Source\mbedtls_open\library/platform.c **** 
 263:Source\mbedtls_open\library/platform.c ****     if( ( n = fwrite( buf, 1, buf_len, file ) ) != buf_len )
 264:Source\mbedtls_open\library/platform.c ****     {
 265:Source\mbedtls_open\library/platform.c ****         fclose( file );
 266:Source\mbedtls_open\library/platform.c ****         return -1;
 267:Source\mbedtls_open\library/platform.c ****     }
 268:Source\mbedtls_open\library/platform.c **** 
 269:Source\mbedtls_open\library/platform.c ****     fclose( file );
 270:Source\mbedtls_open\library/platform.c ****     return( (int)n );
 271:Source\mbedtls_open\library/platform.c **** }
 272:Source\mbedtls_open\library/platform.c **** #endif /* MBEDTLS_PLATFORM_NO_STD_FUNCTIONS */
 273:Source\mbedtls_open\library/platform.c **** 
 274:Source\mbedtls_open\library/platform.c **** #if defined(MBEDTLS_PLATFORM_NV_SEED_ALT)
 275:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_PLATFORM_STD_NV_SEED_READ)
 276:Source\mbedtls_open\library/platform.c **** /*
 277:Source\mbedtls_open\library/platform.c ****  * Make dummy function to prevent NULL pointer dereferences
 278:Source\mbedtls_open\library/platform.c ****  */
 279:Source\mbedtls_open\library/platform.c **** static int platform_nv_seed_read_uninit( unsigned char *buf, size_t buf_len )
 280:Source\mbedtls_open\library/platform.c **** {
 281:Source\mbedtls_open\library/platform.c ****     ((void) buf);
 282:Source\mbedtls_open\library/platform.c ****     ((void) buf_len);
 283:Source\mbedtls_open\library/platform.c ****     return( -1 );
 284:Source\mbedtls_open\library/platform.c **** }
 285:Source\mbedtls_open\library/platform.c **** 
 286:Source\mbedtls_open\library/platform.c **** #define MBEDTLS_PLATFORM_STD_NV_SEED_READ   platform_nv_seed_read_uninit
 287:Source\mbedtls_open\library/platform.c **** #endif /* !MBEDTLS_PLATFORM_STD_NV_SEED_READ */
 288:Source\mbedtls_open\library/platform.c **** 
 289:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_PLATFORM_STD_NV_SEED_WRITE)
 290:Source\mbedtls_open\library/platform.c **** /*
 291:Source\mbedtls_open\library/platform.c ****  * Make dummy function to prevent NULL pointer dereferences
 292:Source\mbedtls_open\library/platform.c ****  */
 293:Source\mbedtls_open\library/platform.c **** static int platform_nv_seed_write_uninit( unsigned char *buf, size_t buf_len )
 294:Source\mbedtls_open\library/platform.c **** {
 295:Source\mbedtls_open\library/platform.c ****     ((void) buf);
 296:Source\mbedtls_open\library/platform.c ****     ((void) buf_len);
 297:Source\mbedtls_open\library/platform.c ****     return( -1 );
 298:Source\mbedtls_open\library/platform.c **** }
 299:Source\mbedtls_open\library/platform.c **** 
 300:Source\mbedtls_open\library/platform.c **** #define MBEDTLS_PLATFORM_STD_NV_SEED_WRITE   platform_nv_seed_write_uninit
 301:Source\mbedtls_open\library/platform.c **** #endif /* !MBEDTLS_PLATFORM_STD_NV_SEED_WRITE */
 302:Source\mbedtls_open\library/platform.c **** 
 303:Source\mbedtls_open\library/platform.c **** int (*mbedtls_nv_seed_read)( unsigned char *buf, size_t buf_len ) =
 304:Source\mbedtls_open\library/platform.c ****             MBEDTLS_PLATFORM_STD_NV_SEED_READ;
 305:Source\mbedtls_open\library/platform.c **** int (*mbedtls_nv_seed_write)( unsigned char *buf, size_t buf_len ) =
 306:Source\mbedtls_open\library/platform.c ****             MBEDTLS_PLATFORM_STD_NV_SEED_WRITE;
 307:Source\mbedtls_open\library/platform.c **** 
 308:Source\mbedtls_open\library/platform.c **** int mbedtls_platform_set_nv_seed(
 309:Source\mbedtls_open\library/platform.c ****         int (*nv_seed_read_func)( unsigned char *buf, size_t buf_len ),
 310:Source\mbedtls_open\library/platform.c ****         int (*nv_seed_write_func)( unsigned char *buf, size_t buf_len ) )
 311:Source\mbedtls_open\library/platform.c **** {
 312:Source\mbedtls_open\library/platform.c ****     mbedtls_nv_seed_read = nv_seed_read_func;
 313:Source\mbedtls_open\library/platform.c ****     mbedtls_nv_seed_write = nv_seed_write_func;
 314:Source\mbedtls_open\library/platform.c ****     return( 0 );
 315:Source\mbedtls_open\library/platform.c **** }
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 7


 316:Source\mbedtls_open\library/platform.c **** #endif /* MBEDTLS_PLATFORM_NV_SEED_ALT */
 317:Source\mbedtls_open\library/platform.c **** #endif /* MBEDTLS_ENTROPY_NV_SEED */
 318:Source\mbedtls_open\library/platform.c **** 
 319:Source\mbedtls_open\library/platform.c **** #if !defined(MBEDTLS_PLATFORM_SETUP_TEARDOWN_ALT)
 320:Source\mbedtls_open\library/platform.c **** /*
 321:Source\mbedtls_open\library/platform.c ****  * Placeholder platform setup that does nothing by default
 322:Source\mbedtls_open\library/platform.c ****  */
 323:Source\mbedtls_open\library/platform.c **** int mbedtls_platform_setup( mbedtls_platform_context *ctx )
 324:Source\mbedtls_open\library/platform.c **** {
  28              		.loc 1 324 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 325:Source\mbedtls_open\library/platform.c ****     (void)ctx;
 326:Source\mbedtls_open\library/platform.c **** 
 327:Source\mbedtls_open\library/platform.c ****     return( 0 );
 328:Source\mbedtls_open\library/platform.c **** }
  34              		.loc 1 328 0
  35 0000 0020     		movs	r0, #0
  36              	.LVL1:
  37              		@ sp needed
  38 0002 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE1:
  41              		.size	mbedtls_platform_setup, .-mbedtls_platform_setup
  42              		.section	.text.mbedtls_platform_teardown,"ax",%progbits
  43              		.align	2
  44              		.global	mbedtls_platform_teardown
  45              		.code	16
  46              		.thumb_func
  47              		.type	mbedtls_platform_teardown, %function
  48              	mbedtls_platform_teardown:
  49              	.LFB2:
 329:Source\mbedtls_open\library/platform.c **** 
 330:Source\mbedtls_open\library/platform.c **** /*
 331:Source\mbedtls_open\library/platform.c ****  * Placeholder platform teardown that does nothing by default
 332:Source\mbedtls_open\library/platform.c ****  */
 333:Source\mbedtls_open\library/platform.c **** void mbedtls_platform_teardown( mbedtls_platform_context *ctx )
 334:Source\mbedtls_open\library/platform.c **** {
  50              		.loc 1 334 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.LVL2:
 335:Source\mbedtls_open\library/platform.c ****     (void)ctx;
 336:Source\mbedtls_open\library/platform.c **** }
  56              		.loc 1 336 0
  57              		@ sp needed
  58 0000 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE2:
  61              		.size	mbedtls_platform_teardown, .-mbedtls_platform_teardown
  62 0002 C046     		.text
  63              	.Letext0:
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 8


  64              		.file 2 ".\\Source\\mbedtls_open\\include/mbedtls/platform.h"
  65              		.section	.debug_info,"",%progbits
  66              	.Ldebug_info0:
  67 0000 F6000000 		.4byte	0xf6
  68 0004 0400     		.2byte	0x4
  69 0006 00000000 		.4byte	.Ldebug_abbrev0
  70 000a 04       		.byte	0x4
  71 000b 01       		.uleb128 0x1
  72 000c 98010000 		.4byte	.LASF12
  73 0010 0C       		.byte	0xc
  74 0011 61000000 		.4byte	.LASF13
  75 0015 9B000000 		.4byte	.LASF14
  76 0019 00000000 		.4byte	.Ldebug_ranges0+0
  77 001d 00000000 		.4byte	0
  78 0021 00000000 		.4byte	.Ldebug_line0
  79 0025 02       		.uleb128 0x2
  80 0026 01       		.byte	0x1
  81 0027 06       		.byte	0x6
  82 0028 5C010000 		.4byte	.LASF0
  83 002c 02       		.uleb128 0x2
  84 002d 01       		.byte	0x1
  85 002e 08       		.byte	0x8
  86 002f 8D000000 		.4byte	.LASF1
  87 0033 02       		.uleb128 0x2
  88 0034 02       		.byte	0x2
  89 0035 05       		.byte	0x5
  90 0036 8E010000 		.4byte	.LASF2
  91 003a 02       		.uleb128 0x2
  92 003b 02       		.byte	0x2
  93 003c 07       		.byte	0x7
  94 003d 49010000 		.4byte	.LASF3
  95 0041 02       		.uleb128 0x2
  96 0042 04       		.byte	0x4
  97 0043 05       		.byte	0x5
  98 0044 40010000 		.4byte	.LASF4
  99 0048 02       		.uleb128 0x2
 100 0049 04       		.byte	0x4
 101 004a 07       		.byte	0x7
 102 004b 32000000 		.4byte	.LASF5
 103 004f 02       		.uleb128 0x2
 104 0050 08       		.byte	0x8
 105 0051 05       		.byte	0x5
 106 0052 00000000 		.4byte	.LASF6
 107 0056 02       		.uleb128 0x2
 108 0057 08       		.byte	0x8
 109 0058 07       		.byte	0x7
 110 0059 4A000000 		.4byte	.LASF7
 111 005d 03       		.uleb128 0x3
 112 005e 04       		.byte	0x4
 113 005f 05       		.byte	0x5
 114 0060 696E7400 		.ascii	"int\000"
 115 0064 02       		.uleb128 0x2
 116 0065 04       		.byte	0x4
 117 0066 07       		.byte	0x7
 118 0067 0E000000 		.4byte	.LASF8
 119 006b 02       		.uleb128 0x2
 120 006c 08       		.byte	0x8
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 9


 121 006d 04       		.byte	0x4
 122 006e 82010000 		.4byte	.LASF9
 123 0072 02       		.uleb128 0x2
 124 0073 04       		.byte	0x4
 125 0074 07       		.byte	0x7
 126 0075 43020000 		.4byte	.LASF10
 127 0079 02       		.uleb128 0x2
 128 007a 01       		.byte	0x1
 129 007b 08       		.byte	0x8
 130 007c 88000000 		.4byte	.LASF11
 131 0080 04       		.uleb128 0x4
 132 0081 2A020000 		.4byte	.LASF15
 133 0085 01       		.byte	0x1
 134 0086 02       		.byte	0x2
 135 0087 4001     		.2byte	0x140
 136 0089 9B000000 		.4byte	0x9b
 137 008d 05       		.uleb128 0x5
 138 008e 44000000 		.4byte	.LASF16
 139 0092 02       		.byte	0x2
 140 0093 4201     		.2byte	0x142
 141 0095 79000000 		.4byte	0x79
 142 0099 00       		.byte	0
 143 009a 00       		.byte	0
 144 009b 06       		.uleb128 0x6
 145 009c 2A020000 		.4byte	.LASF15
 146 00a0 02       		.byte	0x2
 147 00a1 4401     		.2byte	0x144
 148 00a3 80000000 		.4byte	0x80
 149 00a7 07       		.uleb128 0x7
 150 00a8 1B000000 		.4byte	.LASF17
 151 00ac 01       		.byte	0x1
 152 00ad 4301     		.2byte	0x143
 153 00af 5D000000 		.4byte	0x5d
 154 00b3 00000000 		.4byte	.LFB1
 155 00b7 04000000 		.4byte	.LFE1-.LFB1
 156 00bb 01       		.uleb128 0x1
 157 00bc 9C       		.byte	0x9c
 158 00bd D2000000 		.4byte	0xd2
 159 00c1 08       		.uleb128 0x8
 160 00c2 63747800 		.ascii	"ctx\000"
 161 00c6 01       		.byte	0x1
 162 00c7 4301     		.2byte	0x143
 163 00c9 D2000000 		.4byte	0xd2
 164 00cd 00000000 		.4byte	.LLST0
 165 00d1 00       		.byte	0
 166 00d2 09       		.uleb128 0x9
 167 00d3 04       		.byte	0x4
 168 00d4 9B000000 		.4byte	0x9b
 169 00d8 0A       		.uleb128 0xa
 170 00d9 68010000 		.4byte	.LASF18
 171 00dd 01       		.byte	0x1
 172 00de 4D01     		.2byte	0x14d
 173 00e0 00000000 		.4byte	.LFB2
 174 00e4 02000000 		.4byte	.LFE2-.LFB2
 175 00e8 01       		.uleb128 0x1
 176 00e9 9C       		.byte	0x9c
 177 00ea 0B       		.uleb128 0xb
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 10


 178 00eb 63747800 		.ascii	"ctx\000"
 179 00ef 01       		.byte	0x1
 180 00f0 4D01     		.2byte	0x14d
 181 00f2 D2000000 		.4byte	0xd2
 182 00f6 01       		.uleb128 0x1
 183 00f7 50       		.byte	0x50
 184 00f8 00       		.byte	0
 185 00f9 00       		.byte	0
 186              		.section	.debug_abbrev,"",%progbits
 187              	.Ldebug_abbrev0:
 188 0000 01       		.uleb128 0x1
 189 0001 11       		.uleb128 0x11
 190 0002 01       		.byte	0x1
 191 0003 25       		.uleb128 0x25
 192 0004 0E       		.uleb128 0xe
 193 0005 13       		.uleb128 0x13
 194 0006 0B       		.uleb128 0xb
 195 0007 03       		.uleb128 0x3
 196 0008 0E       		.uleb128 0xe
 197 0009 1B       		.uleb128 0x1b
 198 000a 0E       		.uleb128 0xe
 199 000b 55       		.uleb128 0x55
 200 000c 17       		.uleb128 0x17
 201 000d 11       		.uleb128 0x11
 202 000e 01       		.uleb128 0x1
 203 000f 10       		.uleb128 0x10
 204 0010 17       		.uleb128 0x17
 205 0011 00       		.byte	0
 206 0012 00       		.byte	0
 207 0013 02       		.uleb128 0x2
 208 0014 24       		.uleb128 0x24
 209 0015 00       		.byte	0
 210 0016 0B       		.uleb128 0xb
 211 0017 0B       		.uleb128 0xb
 212 0018 3E       		.uleb128 0x3e
 213 0019 0B       		.uleb128 0xb
 214 001a 03       		.uleb128 0x3
 215 001b 0E       		.uleb128 0xe
 216 001c 00       		.byte	0
 217 001d 00       		.byte	0
 218 001e 03       		.uleb128 0x3
 219 001f 24       		.uleb128 0x24
 220 0020 00       		.byte	0
 221 0021 0B       		.uleb128 0xb
 222 0022 0B       		.uleb128 0xb
 223 0023 3E       		.uleb128 0x3e
 224 0024 0B       		.uleb128 0xb
 225 0025 03       		.uleb128 0x3
 226 0026 08       		.uleb128 0x8
 227 0027 00       		.byte	0
 228 0028 00       		.byte	0
 229 0029 04       		.uleb128 0x4
 230 002a 13       		.uleb128 0x13
 231 002b 01       		.byte	0x1
 232 002c 03       		.uleb128 0x3
 233 002d 0E       		.uleb128 0xe
 234 002e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 11


 235 002f 0B       		.uleb128 0xb
 236 0030 3A       		.uleb128 0x3a
 237 0031 0B       		.uleb128 0xb
 238 0032 3B       		.uleb128 0x3b
 239 0033 05       		.uleb128 0x5
 240 0034 01       		.uleb128 0x1
 241 0035 13       		.uleb128 0x13
 242 0036 00       		.byte	0
 243 0037 00       		.byte	0
 244 0038 05       		.uleb128 0x5
 245 0039 0D       		.uleb128 0xd
 246 003a 00       		.byte	0
 247 003b 03       		.uleb128 0x3
 248 003c 0E       		.uleb128 0xe
 249 003d 3A       		.uleb128 0x3a
 250 003e 0B       		.uleb128 0xb
 251 003f 3B       		.uleb128 0x3b
 252 0040 05       		.uleb128 0x5
 253 0041 49       		.uleb128 0x49
 254 0042 13       		.uleb128 0x13
 255 0043 38       		.uleb128 0x38
 256 0044 0B       		.uleb128 0xb
 257 0045 00       		.byte	0
 258 0046 00       		.byte	0
 259 0047 06       		.uleb128 0x6
 260 0048 16       		.uleb128 0x16
 261 0049 00       		.byte	0
 262 004a 03       		.uleb128 0x3
 263 004b 0E       		.uleb128 0xe
 264 004c 3A       		.uleb128 0x3a
 265 004d 0B       		.uleb128 0xb
 266 004e 3B       		.uleb128 0x3b
 267 004f 05       		.uleb128 0x5
 268 0050 49       		.uleb128 0x49
 269 0051 13       		.uleb128 0x13
 270 0052 00       		.byte	0
 271 0053 00       		.byte	0
 272 0054 07       		.uleb128 0x7
 273 0055 2E       		.uleb128 0x2e
 274 0056 01       		.byte	0x1
 275 0057 3F       		.uleb128 0x3f
 276 0058 19       		.uleb128 0x19
 277 0059 03       		.uleb128 0x3
 278 005a 0E       		.uleb128 0xe
 279 005b 3A       		.uleb128 0x3a
 280 005c 0B       		.uleb128 0xb
 281 005d 3B       		.uleb128 0x3b
 282 005e 05       		.uleb128 0x5
 283 005f 27       		.uleb128 0x27
 284 0060 19       		.uleb128 0x19
 285 0061 49       		.uleb128 0x49
 286 0062 13       		.uleb128 0x13
 287 0063 11       		.uleb128 0x11
 288 0064 01       		.uleb128 0x1
 289 0065 12       		.uleb128 0x12
 290 0066 06       		.uleb128 0x6
 291 0067 40       		.uleb128 0x40
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 12


 292 0068 18       		.uleb128 0x18
 293 0069 9742     		.uleb128 0x2117
 294 006b 19       		.uleb128 0x19
 295 006c 01       		.uleb128 0x1
 296 006d 13       		.uleb128 0x13
 297 006e 00       		.byte	0
 298 006f 00       		.byte	0
 299 0070 08       		.uleb128 0x8
 300 0071 05       		.uleb128 0x5
 301 0072 00       		.byte	0
 302 0073 03       		.uleb128 0x3
 303 0074 08       		.uleb128 0x8
 304 0075 3A       		.uleb128 0x3a
 305 0076 0B       		.uleb128 0xb
 306 0077 3B       		.uleb128 0x3b
 307 0078 05       		.uleb128 0x5
 308 0079 49       		.uleb128 0x49
 309 007a 13       		.uleb128 0x13
 310 007b 02       		.uleb128 0x2
 311 007c 17       		.uleb128 0x17
 312 007d 00       		.byte	0
 313 007e 00       		.byte	0
 314 007f 09       		.uleb128 0x9
 315 0080 0F       		.uleb128 0xf
 316 0081 00       		.byte	0
 317 0082 0B       		.uleb128 0xb
 318 0083 0B       		.uleb128 0xb
 319 0084 49       		.uleb128 0x49
 320 0085 13       		.uleb128 0x13
 321 0086 00       		.byte	0
 322 0087 00       		.byte	0
 323 0088 0A       		.uleb128 0xa
 324 0089 2E       		.uleb128 0x2e
 325 008a 01       		.byte	0x1
 326 008b 3F       		.uleb128 0x3f
 327 008c 19       		.uleb128 0x19
 328 008d 03       		.uleb128 0x3
 329 008e 0E       		.uleb128 0xe
 330 008f 3A       		.uleb128 0x3a
 331 0090 0B       		.uleb128 0xb
 332 0091 3B       		.uleb128 0x3b
 333 0092 05       		.uleb128 0x5
 334 0093 27       		.uleb128 0x27
 335 0094 19       		.uleb128 0x19
 336 0095 11       		.uleb128 0x11
 337 0096 01       		.uleb128 0x1
 338 0097 12       		.uleb128 0x12
 339 0098 06       		.uleb128 0x6
 340 0099 40       		.uleb128 0x40
 341 009a 18       		.uleb128 0x18
 342 009b 9742     		.uleb128 0x2117
 343 009d 19       		.uleb128 0x19
 344 009e 00       		.byte	0
 345 009f 00       		.byte	0
 346 00a0 0B       		.uleb128 0xb
 347 00a1 05       		.uleb128 0x5
 348 00a2 00       		.byte	0
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 13


 349 00a3 03       		.uleb128 0x3
 350 00a4 08       		.uleb128 0x8
 351 00a5 3A       		.uleb128 0x3a
 352 00a6 0B       		.uleb128 0xb
 353 00a7 3B       		.uleb128 0x3b
 354 00a8 05       		.uleb128 0x5
 355 00a9 49       		.uleb128 0x49
 356 00aa 13       		.uleb128 0x13
 357 00ab 02       		.uleb128 0x2
 358 00ac 18       		.uleb128 0x18
 359 00ad 00       		.byte	0
 360 00ae 00       		.byte	0
 361 00af 00       		.byte	0
 362              		.section	.debug_loc,"",%progbits
 363              	.Ldebug_loc0:
 364              	.LLST0:
 365 0000 00000000 		.4byte	.LVL0
 366 0004 02000000 		.4byte	.LVL1
 367 0008 0100     		.2byte	0x1
 368 000a 50       		.byte	0x50
 369 000b 02000000 		.4byte	.LVL1
 370 000f 04000000 		.4byte	.LFE1
 371 0013 0400     		.2byte	0x4
 372 0015 F3       		.byte	0xf3
 373 0016 01       		.uleb128 0x1
 374 0017 50       		.byte	0x50
 375 0018 9F       		.byte	0x9f
 376 0019 00000000 		.4byte	0
 377 001d 00000000 		.4byte	0
 378              		.section	.debug_aranges,"",%progbits
 379 0000 24000000 		.4byte	0x24
 380 0004 0200     		.2byte	0x2
 381 0006 00000000 		.4byte	.Ldebug_info0
 382 000a 04       		.byte	0x4
 383 000b 00       		.byte	0
 384 000c 0000     		.2byte	0
 385 000e 0000     		.2byte	0
 386 0010 00000000 		.4byte	.LFB1
 387 0014 04000000 		.4byte	.LFE1-.LFB1
 388 0018 00000000 		.4byte	.LFB2
 389 001c 02000000 		.4byte	.LFE2-.LFB2
 390 0020 00000000 		.4byte	0
 391 0024 00000000 		.4byte	0
 392              		.section	.debug_ranges,"",%progbits
 393              	.Ldebug_ranges0:
 394 0000 00000000 		.4byte	.LFB1
 395 0004 04000000 		.4byte	.LFE1
 396 0008 00000000 		.4byte	.LFB2
 397 000c 02000000 		.4byte	.LFE2
 398 0010 00000000 		.4byte	0
 399 0014 00000000 		.4byte	0
 400              		.section	.debug_line,"",%progbits
 401              	.Ldebug_line0:
 402 0000 99000000 		.section	.debug_str,"MS",%progbits,1
 402      02007100 
 402      00000201 
 402      FB0E0D00 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 14


 402      01010101 
 403              	.LASF6:
 404 0000 6C6F6E67 		.ascii	"long long int\000"
 404      206C6F6E 
 404      6720696E 
 404      7400
 405              	.LASF8:
 406 000e 756E7369 		.ascii	"unsigned int\000"
 406      676E6564 
 406      20696E74 
 406      00
 407              	.LASF17:
 408 001b 6D626564 		.ascii	"mbedtls_platform_setup\000"
 408      746C735F 
 408      706C6174 
 408      666F726D 
 408      5F736574 
 409              	.LASF5:
 410 0032 6C6F6E67 		.ascii	"long unsigned int\000"
 410      20756E73 
 410      69676E65 
 410      6420696E 
 410      7400
 411              	.LASF16:
 412 0044 64756D6D 		.ascii	"dummy\000"
 412      7900
 413              	.LASF7:
 414 004a 6C6F6E67 		.ascii	"long long unsigned int\000"
 414      206C6F6E 
 414      6720756E 
 414      7369676E 
 414      65642069 
 415              	.LASF13:
 416 0061 536F7572 		.ascii	"Source\\mbedtls_open\\library\\platform.c\000"
 416      63655C6D 
 416      62656474 
 416      6C735F6F 
 416      70656E5C 
 417              	.LASF11:
 418 0088 63686172 		.ascii	"char\000"
 418      00
 419              	.LASF1:
 420 008d 756E7369 		.ascii	"unsigned char\000"
 420      676E6564 
 420      20636861 
 420      7200
 421              	.LASF14:
 422 009b 433A5C55 		.ascii	"C:\\Users\\Phuong\\Documents\\PSoC Creator\\Dec0820"
 422      73657273 
 422      5C506875 
 422      6F6E675C 
 422      446F6375 
 423 00c9 31385C69 		.ascii	"18\\iot-sdk-iot-dev\\PSOC6_FreeRTOS+LwIP+MbedTLS_Az"
 423      6F742D73 
 423      646B2D69 
 423      6F742D64 
 423      65765C50 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 15


 424 00fa 7572652D 		.ascii	"ure-IOT-Hub-Demo\\PSOC6_FreeRTOS+LwIP+MbedTLS_Azure"
 424      494F542D 
 424      4875622D 
 424      44656D6F 
 424      5C50534F 
 425 012c 2D494F54 		.ascii	"-IOT-Hub-Demo.cydsn\000"
 425      2D487562 
 425      2D44656D 
 425      6F2E6379 
 425      64736E00 
 426              	.LASF4:
 427 0140 6C6F6E67 		.ascii	"long int\000"
 427      20696E74 
 427      00
 428              	.LASF3:
 429 0149 73686F72 		.ascii	"short unsigned int\000"
 429      7420756E 
 429      7369676E 
 429      65642069 
 429      6E7400
 430              	.LASF0:
 431 015c 7369676E 		.ascii	"signed char\000"
 431      65642063 
 431      68617200 
 432              	.LASF18:
 433 0168 6D626564 		.ascii	"mbedtls_platform_teardown\000"
 433      746C735F 
 433      706C6174 
 433      666F726D 
 433      5F746561 
 434              	.LASF9:
 435 0182 6C6F6E67 		.ascii	"long double\000"
 435      20646F75 
 435      626C6500 
 436              	.LASF2:
 437 018e 73686F72 		.ascii	"short int\000"
 437      7420696E 
 437      7400
 438              	.LASF12:
 439 0198 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 439      43313120 
 439      352E342E 
 439      31203230 
 439      31363036 
 440 01cb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 440      20726576 
 440      6973696F 
 440      6E203233 
 440      37373135 
 441 01fe 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 441      67202D66 
 441      66756E63 
 441      74696F6E 
 441      2D736563 
 442              	.LASF15:
 443 022a 6D626564 		.ascii	"mbedtls_platform_context\000"
 443      746C735F 
ARM GAS  C:\Users\Phuong\AppData\Local\Temp\cc5uAf3p.s 			page 16


 443      706C6174 
 443      666F726D 
 443      5F636F6E 
 444              	.LASF10:
 445 0243 73697A65 		.ascii	"sizetype\000"
 445      74797065 
 445      00
 446              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
